[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C)  2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

                        メモリーカードライブラリ
                       =========================


 1 構造体
==========

=========================================================================
sceMcIconSys                                                     [構造体]
=========================================================================
                                          icon.sys を生成するための構造体
[構造]
        typedef 	struct {
        	unsigned char Head [4];
        	unsigned short Reserv1;
        	unsigned short OffsLF;
        	unsigned Reserv2;
        	unsigned TransRate;
        	_iconVu0IVECTOR BgColor [4];
        	_iconVu0FVECTOR LightDir [3];
        	_iconVu0FVECTOR LightColor [3];
        	_iconVu0FVECTOR Ambient;
        	unsigned char TitleName [68];
        	unsigned char FnameView [64];
        	unsigned char FnameCopy [64];
        	unsigned char FnameDel [64];
        	unsigned char Reserve3 [512];
        } sceMcIconSys;
        
[メンバ]
        Head		'P','S','2','D'
        OffsLF		タイトル名改行位置
        TransRate	背景透過率
        BgColor		背景色(4点分)
        LightDir		光源方向(3光源分)
        LightColor	光源色(3光源分)
        Ambient		アンビエント
        TitleName	タイトル名
        FnameView	一覧用アイコンファイル名
        FnameCopy	コピー時用アイコンファイル名
        FnameDel	削除時用アイコンファイル名
        
        Reserve1		予約領域、すべて00で埋めなくてはなりません。
        Reserve2		予約領域、すべて00で埋めなくてはなりません。
        Reserve3		予約領域、すべて00で埋めなくてはなりません。
        
        _iconVu0IVECTOR	libvu0.hのsceVu0IVECTORと構造は同じでアラインメン
        トの
        			宣言が付かない型
        _iconVu0FVECTOR	libvu0.hのsceVu0FVECTORと構造は同じでアラインメン
        トの
        			宣言が付かない型
        
[解説]
        icon.sys を生成するための構造体です。

=========================================================================
sceMcTblGetDir                                                   [構造体]
=========================================================================
                                 ファイル一覧の結果を格納するための構造体
[構造]
        typedef	struct {
        	struct {
        		unsigned char Resv2,Sec,Min,Hour;
        		unsigned char Day,Month;
        		unsigned short Year;
        	} _Create;
        	struct {
        		unsigned char Resv2,Sec,Min,Hour;
        		unsigned char Day,Month;
        		unsigned short Year;
        	} _Modify;
        	unsigned FileSizeByte;
        	unsigned short AttrFile;
        	unsigned short Reserve1;
        	unsigned Reserve2[2];
        
        	unsigned char EntryName[32];
        } sceMcTblGetDir __attribute__((aligned (64)));
        
        #define CSec	_Create.Sec
        #define CMin	_Create.Min
        #define CHour	_Create.Hour
        #define CDay	_Create.Day
        #define CMonth	_Create.Month
        #define CYear	_Create.Year
        
        #define MSec	_Modify.Sec
        #define MMin	_Modify.Min
        #define MHour	_Modify.Hour
        #define MDay	_Modify.Day
        #define MMonth	_Modify.Month
        #define MYear	_Modify.Year
        
[メンバ]
        CSec		エントリ生成日時(秒)
        CMin		エントリ生成日時(分)
        CHour		エントリ生成日時(時)
        CDay		エントリ生成日時(日)
        CMonth		エントリ生成日時(月)
        CYear		エントリ生成日時(年)
        
        MSec		エントリ修正日時(秒)
        MMin		エントリ修正日時(分)
        MHour		エントリ修正日時(時)
        MDay		エントリ修正日時(日)
        MMonth		エントリ修正日時(月)
        MYear		エントリ修正日時(年)
        
        FileSizeByte	ファイルサイズ(バイト)
        		ディレクトリエントリの場合は0
        AttrFile		ファイル属性
        EntryName	エントリ名
        
[解説]
        ファイル一覧の結果を格納するための構造体です。
        

 2 関数
========


=========================================================================
sceMcChangeThreadPriority                                          [関数]
=========================================================================
                    IOPモジュール(mcserv.irx)のスレッドプライオリティ設定
[形式]
        int sceMcChangeThreadPriority(
        	int level
        )
        
[引数]
        level	スレッドプライオリティ
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAライブラリのIOP側モジュールであるmcserv.irxのスレッドプライオ
        リティを変更します。設定可能なプライオリティは thread.h に定義さ
        れているUSER_HIGHEST_PRIORITY 〜 USER_LOWEST_PRIORITY の間の値で
        す(両端の値含む)。mcserv.irxモージュールのスレッドプライオリティ
        初期値は104です。
        
        sceMcSync() のresultに返る値：
        0:		成功(kerror.h:KE_OK)
        -403:	スレッドプライオリティの値が設定可能な範囲を超えています。(
        kerror.h:KE_ILLEGAL_PRIORITY)
        
[備考]
        スレッドプライオリティはsceSifLoadModule()でmcserv.irxをロードす
        る際にも指定することが出来ます。例えば次のようにして mcserv.irxを
        ロードするとスレッドプライオリティの初期値が100になります。
        
        unsigned char *param = "thpri=100";
        sceSifLoadModule( "host0:/usr/local/sce/iop/modules/mcserv.irx",
        strlen(param)+1, param);
        

=========================================================================
sceMcChdir                                                         [関数]
=========================================================================
                       カレントディレクトリ移動／カレントディレクトリ取得
[形式]
        int sceMcChdir(
        	int port,
        	int slot,
        	char *path,
        	char *pwd
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        path	移動先のサブディレクトリパス
        pwd	カレントディレクトリを格納するバッファのポインタ。
        	不要の場合は0を送ります
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        カレントディレクトリを移動します。
        移動先サブディレクトリの指定は、絶対パスでもカレントディレクトリ
        からの相対パスでも構いません。
        ディレクトリ名で"."はカレントディレクトリ".."はカレントディレクト
        リの親ディレクトリを意味します。
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	未フォーマットのメモリーカードです
        -4:	指定されたパスが存在しませんでした
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
[備考]
        sceMcSync() のresultが負の値になる場合には、操作を行おうとしてい
        たポートのカレントディレクトリは強制的にroot (/)に移動されます。
        

=========================================================================
sceMcClose                                                         [関数]
=========================================================================
                                                         ファイルを閉じる
[形式]
        int sceMcClose(
        	int fd
        )
        
[引数]
        fd	閉じるファイルのファイルハンドラ番号
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        ファイルを閉じます。ファイルキャッシュにメモリーカードへの書き込
        みデータが未更新のまま(sceMcFlushされずに)残っている場合は、メモ
        リーカード上に確定させます。
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	メモリーカードが未フォーマットです
        -4:	オープンされていないファイルハンドラです
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        

=========================================================================
sceMcDelete                                                        [関数]
=========================================================================
                                                             ファイル削除
[形式]
        int sceMcDelete(
        	int port,
        	int slot,
        	char *name,
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        name	削除するファイル名。パスは絶対／相対パスどちらでも構いません
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカード上のファイルを削除します。
        
        sceMcSync() のresultに返る値：
        0:	削除
        -2:	未フォーマットのメモリーカードです
        -4:	存在しないファイル名、削除済みファイルを削除しようとした
        -5:	使用中のファイルを消去しようとしました。または消そうとしたフ
        ァイルにwriteable
        	属性がありません
        -6:	サブディレクトリの中にエントリが残っています
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        

=========================================================================
sceMcFlush                                                         [関数]
=========================================================================
                                             ファイルキャッシュの即時確定
[形式]
        int sceMcFlush(
        	int fd
        )
        
[引数]
        fd	確定させたいファイルのファイルハンドラ番号
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        ファイル書き込みの後、ファイルキャッシュに残ったままのデータをメ
        モリーカード上に確定させます。
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	メモリーカードが未フォーマットです
        -4:	オープンされていないファイルハンドラです
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
[備考]
        sceMcSync() のresultが負の値になる場合には、操作を行おうとしてい
        たファイルは強制的にcloseされます。

=========================================================================
sceMcFormat                                                        [関数]
=========================================================================
                                         メモリーカードの論理フォーマット
[形式]
        int sceMcFormat(
        	int port,
        	int slot,
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカードを論理フォーマットします。メモリーカードに対してフ
        ァイルアクセスを行うときは、メモリーカードが論理フォーマットされ
        ていなければなりません。
        
        sceMcSync() のresultに返る値：
        0:	成功
        0未満:	フォーマットできませんでした
        

=========================================================================
sceMcGetDir                                                        [関数]
=========================================================================
                                         メモリーカードファイル一覧の取得
[形式]
        int sceMcGetDir(
        	int port,
        	int slot,
        	char *name,
        	unsigned mode,
        	int maxent,
        	sceMcTblGetDir *table
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        name	絶対パスでもカレントディレクトリからの相対パスでも構いません。
        	ファイル一覧を取得したいファイルのパス名を指定します。
        	ワイルドカード付きで、エントリ名指定して、ヒットする
        	エントリ名のみの一覧が取得できます
        mode	0: 初回の呼び出し
        	0以外: 初回の呼び出しで取得した分の次のファイル一覧を要求します
        maxent	１回の呼び出しでtableに書き込んでもよいファイルエントリ数
        の上限
        table	取得したファイル一覧が書き込まれるバッファ。
        	バッファの実体は64バイトアラインメントに配置してください
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカード上にあるファイルの一覧を取得します。
        
        sceMcSync() のresultに返る値：
        0以上:	取得したファイルエントリ数。maxentよりも小さな値が返って来
        たときは
        	それ以上のファイルエントリがないことを意味します
        -2:	未フォーマットのメモリーカードです
        -4:	存在しないパスが指定されました
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
        tableに格納されるデータの内容は次のようになっています。
        
        ファイル属性で有効なビット：
        libmc.h:
        読み出し許可		sceMcFileAttrReadable		0x0001
        書き込み許可		sceMcFileAttrWriteable		0x0002
        実行許可			sceMcFileAttrExecutable		0x0004
        コピー禁止		sceMcFileAttrDupProhibit		0x0008
        サブディレクトリ		sceMcFileAttrSubdir		0x0020
        保存完了ファイル		sceMcFileAttrClosed		0x0080
        PDAアプリケーション	sceMcFileAttrPDAExec		0x0800
        (PDAダウンロード第一世代)
        PS1形式のデータ		sceMcFileAttrPS1			0x1000
        (SCE_STM_***の定義はsifdev.hの中にあります)
        
        ワイルドカードの使用法：
         ・nameとして"player01.score.0304"を送ると"player01.score.0304"と
           いうエントリだけにヒットします。
         ・nameの一部に"?"を入れると?の部分は任意の１文字にヒットします。
           例えば"player??.score.????"を送ると"player01.score.0304","play
           er02.score.1203","player03.score."のいずれもヒットします。
        ?が文字列の途中にあるときは何か文字がないとヒットしませんが、文字
        列の最後にあるときはその手前で終っているエントリにもヒットします。
         ・nameの一部に"*"を入れると"*"の部分は任意長の任意の文字列にヒッ
           トします。例えばnameが"*"の場合は"."で始まるエントリも含めて全
           てのエントリにヒットします。
         ・"*"は文字列の中に複数入れることも可能です。例えば"*score*"を送
           ると"player01.score.0304","1-score1203","score"がいずれもヒッ
           トします。
         ・"*","?"を組み合わせることも可能です。
        
[備考]
        sceMcFileAttrClosedはsceMcWrite() を実行してからsceMcClose() また
        はsceMcFlush()するまでの間にメモリーカードが抜かれることがなく、
        書き込み内容をメモリーカード上に反映させる作業が完了したファイル
        であることを示す属性です。この属性はsceMcOpen() のあとsceMcWrite()
         なしでsceMcClose() されても変化しません。
        
        逆にこの属性がないファイルは書き込みの途中にカードが抜かれたか何
        らかのエラーの発生によりデータが完全にカード上に反映されていない
        可能性があることになります。
        
        また、この属性はリリース1.4.6以降で有効です。1.4.6よりも前のライ
        ブラリを使って書き込まれたファイルにはこの属性はありませんのでこ
        の属性を調べて書き込み処理の完了を確認することはできません。
        

=========================================================================
sceMcGetEntSpace                                                   [関数]
=========================================================================
                                         エントリ情報格納領域の空きを調査
[形式]
        int sceMcGetEntSpace(
        	int port,
        	int slot,
        	char *path
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        path	調べたいパス名
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        sceMcSync() のresultに返る値
        0以上:	空きエントリ個数(成功)
        -2:	未フォーマットのメモリーカードです。
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
        あるディレクトリにエントリを生成するとき、新たにメモリーカード容
        量を消費することなく生成できるエントリの個数を調べます。
        エントリを生成することによって消費するメモリーカード容量を計算し
        たい場合などに使います。
        エントリ情報はエントリ2つにつき1クラスタ(1kB)のメモリーカード容量
        を消費します。
        既存のディレクトリに存在するエントリが奇数個の場合、最後のクラス
        タの後半512バイトが空いていますので、エントリ情報格納領域は一つ分
        空いていることになります。
        
        エントリが偶数個の場合で、削除されたエントリが一つもない場合はエ
        ントリ情報格納領域はちょうど必要な分だけしか確保されていませんの
        で、空き個数は0となり、新たなエントリを生成するには1クラスタ必要
        です。
        
        エントリ情報格納領域は一旦確保されると、そのエントリ情報を管理し
        ているディレクトリが削除されるまではサイズは減りません。したがっ
        て今空きが0個のディレクトリでエントリを5個消去したとすると、空き
        個数はその時点で5個に増えます。
        
        例えばエントリ情報格納領域にf個の空きがあるディレクトリにc個の新
        たなエントリを生成しようとすると、エントリ情報のために新たに消費
        されるメモリーカード容量は切り上げ( (c - f) / 2 )個となります。
        

=========================================================================
sceMcGetInfo                                                       [関数]
=========================================================================
                                                 メモリーカード状態の調査
[形式]
        int sceMcGetInfo(
        	int port,
        	int slot,
        	int *type,
        	int *free,
        	int *format
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        type	メモリーカードのタイプを書き込むためのポインタ
        free	空きクラスタ数を書き込むためのポインタ
        format	フォーマットの有無を書き込むためのポインタ
        （*format==1:フォーマット済み、0:未フォーマット）
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカードが接続されているかどうかを調べます。
        
        sceMcSync() のresultに返る値：
        0:	前回のsceMcGetInfo() 呼出し後から同じメモリーカードが継続して
        接続されています
        -1:	フォーマット済みのメモリーカードに差し替えられました
        -2:	未フォーマットのメモリーカードに差し替えられました
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
        typeに返る値
        	1: メモリーカード(PlayStation用)
        	2: メモリーカード8MB(PlayStaion2専用)
        	3: Pocket Station
        	0: いずれもつながっていない
        freeに返る値
        	空きクラスタ数。メモリーカードが接続されていない場合は0が返りま
        す。
        
[備考]
        引数type, free, formatのうち、必要としない情報の箇所を0にして呼び
        出すと、処理完了までの時間が短くなります。
        

=========================================================================
sceMcGetSlotMax                                                    [関数]
=========================================================================
                                                           スロット数調査
[形式]
        int sceMcGetSlotMax(
        	int port
        )
        
[引数]
        port	ポート番号
        
[返り値]
        0以上:	あるポートにおいて使用可能なスロット数
        -1〜-100:	エラーが発生してスロット数を調べられませんでした
        -100以下:[-100-(実行中の関数番号(sceMcFuncNo.....))]が返ります
        	実行中の処理があったので登録できませんでした
        
[解説]
        sceMcGetSlotMax() 自体は同期関数ですが、libmcのほかの関数と同じIO
        P呼び出し口を利用しているため他の非同期関数実行中はスロット数を調
        べることは出来ません。
        
        スロット番号を必要とする関数に対して 0〜スロット数−1 までの値を
        スロット番号として与えることが出来ます。マルチタップSCPH-10090の
        スロットA〜D はそれぞれスロット番号0〜3に対応します。
        

=========================================================================
sceMcInit                                                          [関数]
=========================================================================
                                               メモリーカード環境の初期化
[形式]
        int sceMcInit(
        	void
        )
        
[引数]
        なし
        
[返り値]
        0:	成功
        -101:	初期化失敗
        -120:	mcserv.irxのバージョンが古い
        -121:	mcman.irxのバージョンが古い
        
[解説]
        メモリーカードライブラリで使う内部変数の初期化を行います。
        

=========================================================================
sceMcMkdir                                                         [関数]
=========================================================================
                                                     サブディレクトリ生成
[形式]
        int sceMcMkdir(
        	int port,
        	int slot,
        	char *name
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        name	新たに生成したいサブディレクトリ名
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        サブディレクトリを生成します。
        サブディレクトリの指定は絶対パスでも、カレントディレクトリからの
        相対パスでも構いません。絶対パスの場合、生成したいサブディレクト
        リより上のサブディレクトリがすでに存在していなければなりません。
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	未フォーマットのメモリーカードです
        -3:	メモリーカードの容量不足でディレクトリが生成できませんでした
        -4:	同名のエントリが既に存在しているか、絶対パス指定で途中のパス
        が存在しませんでした
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        

=========================================================================
sceMcOpen                                                          [関数]
=========================================================================
                                                           ファイルを開く
[形式]
        int sceMcOpen(
        	int port,
        	int slot,
        	char *name,
        	int mode
        )
        
[引数]
        port	ポート番号 (0/1)
        slot	スロット番号
        name	ファイル名
        mode	読み込み許可:1,書き込み許可:2,新規作成:0x200
        	(各モードのうち必要なものをORして渡します)
        	これらはsifdev.hに
        	SCE_RDONLY	0x0001
        	SCE_WRONLY	0x0002
        	SCE_RDWR	0x0003
        	SCE_CREAT	0x0200
        	として登録されています。
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        ファイルを開き、ファイルディスクリプタを返します。
        同時に開けるファイルはポート全部で３つまでです。
        nameにはパスを含めることができますが、パスを除いたファイル名本体
        部分の長さは31文字までです。
        
        sceMcSync() のresultに返る値：
        0以上:	ファイルディスクリプタ
        -2:	メモリーカードが未フォーマットです
        -3:	空き容量不足でファイルが開けませんでした
        -4:	ファイル名が不正です。または、Createモードでないのにファイル
        が存在しませんでした
        -5:	既にwriteableモードで開かれているので、さらにwriteableモード
        で開くことができませんでした。または、readable, writeable属性がな
        いので開くことができませんでした
        -7:	同時に開けるファイル数を越えているので開けません
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        

=========================================================================
sceMcRead                                                          [関数]
=========================================================================
                                                       ファイルの読み込み
[形式]
        int sceMcRead(
        	int fd,
        	void *buff,
        	int size
        )
        
[引数]
        fd	ファイルハンドラ番号
        buff	読み込んだデータを書き込むバッファへのポインタ
        size	読み込むサイズ(単位バイト)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカード上のファイルからデータを読み込みます。
        
        sceMcSync() のresultに返る値：
        0以上:	(成功)実際に読み込んだバイト数
        -2:	メモリーカードが未フォーマットです
        -3:	ファイルが壊れていて読めませんでした。
        -4:	オープンされていないファイルハンドラです
        -5:	読み出しモードでオープンされていないファイルハンドラです
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
[備考]
        sceMcSync() のresultが負の値になる場合には、操作を行おうとしてい
        たファイルは強制的にcloseされます。
        

=========================================================================
sceMcRename                                                        [関数]
=========================================================================
                                         ファイル名、ディレクトリ名の変更
[形式]
        int sceMcRename(
        	int port,
        	int slot,
        	char *org,
        	char *new
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        org	変更したいファイル／ディレクトリ
        new	変更後の名称
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        ファイル名、ディレクトリ名を書き換えます。
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	未フォーマットのメモリーカードです
        -4:	変更前のファイル／ディレクトリがありませんでした。
        	または同名のエントリが既に存在しています。
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
[備考]
        この関数は名称を変更するためのものであり、Linuxのmvコマンドのよう
        な異るディレクトリへの移動はできません。
        また変更後の名称には新しいエントリ名だけを指定してください、パス
        付きの名称は指定できません。

=========================================================================
sceMcSeek                                                          [関数]
=========================================================================
                                                   ファイルポインタの移動
[形式]
        int sceMcSeek(
        	int fd,
        	int offset,
        	int mode
        )
        
[引数]
        fd	ファイルハンドラ番号
        offset	modeで指示された起点からのオフセット値
        mode	更新するファイルポインタの起点
        	0:ファイルの先頭
        	1:現在のファイルポインタ
        	2:ファイルの最後 +1 (ファイルサイズ)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        オープンされているファイルのファイルポインタを移動させます。
        
        sceMcSync() のresultに返る値：
        0以上:	移動後のファイルポインタ(成功)
        -2:	メモリーカードが未フォーマットです
        -4:	オープンされていないファイルハンドラです
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
[備考]
        sceMcSync() のresultが負の値になる場合には、操作を行おうとしてい
        たファイルは強制的にcloseされます。
        

=========================================================================
sceMcSetFileInfo                                                   [関数]
=========================================================================
                                                         ファイル情報更新
[形式]
        int sceMcSetFileInfo(
        	int port,
        	int slot,
        	char *name,
        	unsigned char *info
        	unsigned valid,
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        name	ファイル名
        valid	設定したい情報に相当するbitを1にします。
        	作成日時：	McFileInfoCreate		0x01
        	修正日時：	McFileInfoModify		0x02
        	ファイル属性：	McFileInfoAttr		0x04
        info	書き込むファイル情報
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        ファイルのシステム情報を書き換えます。
        
        infoに格納するデータの内容は次のようになっています
        (sceMcTblGetDir の前半と同じ型です)
        
        
        ファイル属性で有効なビット：
        libmc.h:
        読み出し許可		sceMcFileAttrReadable		0x0001
        書き込み許可		sceMcFileAttrWriteable		0x0002
        実行許可			sceMcFileAttrExecutable		0x0004
        コピー禁止		sceMcFileAttrDupProhibit		0x0008
        PDAアプリケーション	sceMcFileAttrPDAExec		0x0800
        (PDAダウンロード第一世代)
        PS1形式のデータ		sceMcFileAttrPS1			0x1000
        (SCE_STM_***の定義はsifdev.hの中にあります)
        
        sceMcSync() のresultに返る値：
        0:	成功
        -2:	未フォーマットのメモリーカードです
        -4:	指定されたエントリが存在しませんでした
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        

=========================================================================
sceMcSync                                                          [関数]
=========================================================================
                                                     登録済み処理完了待ち
[形式]
        int sceMcSync(
        	int mode,
        	int *cmd,
        	int *result
        )
        
[引数]
        mode	0: 登録された非同期関数の終了を待つ
        	1: 非同期関数の状態を調べてすぐに返る
        cmd	登録されている非同期関数の関数番号を格納する変数へのポインタ
        result	非同期関数の実行結果を格納する変数へのポインタ
        
[返り値]
        0:	非同期関数実行中
        1:	非同期関数終了
        -1:	登録無し
        
[解説]
        非同期関数の終了を調べます。
        
        関数番号はlibmc.hで定義されています。
        
        sceMcFuncNoCardInfo	1
        sceMcFuncNoOpen	2
        sceMcFuncNoClose	3
        sceMcFuncNoSeek	4
        sceMcFuncNoRead	5
        sceMcFuncNoWrite	6
        sceMcFuncNoFlush	10
        sceMcFuncNoMkdir	11
        sceMcFuncNoChDir	12
        sceMcFuncNoGetDir	13
        sceMcFuncNoFileInfo	14
        sceMcFuncNoDelete	15
        sceMcFuncNoFormat	16
        sceMcFuncNoUnformat	17
        sceMcFuncNoEntSpace	18
        sceMcFuncNoRename	19
        sceMcFuncChgPrior	20
        

=========================================================================
sceMcUnformat                                                      [関数]
=========================================================================
                                         メモリーカードのフォーマット消去
[形式]
        int sceMcUnformat(
        	int port,
        	int slot,
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカードを未フォーマット状態にします。
        この関数はデバッグ用です。
        
        sceMcSync() のresultに返る値：
        0:	成功
        0未満:	アンフォーマットできませんでした
[備考]
        フォーマット済みのメモリーカードに対してアンフォーマットを実行し
        た場合は3秒程度で終了しますが、未フォーマットのメモリーカードに対
        して更にアンフォーマットを実行した場合は処理完了まで20秒ほどかか
        ります。

=========================================================================
sceMcWrite                                                         [関数]
=========================================================================
                                                     ファイルへの書き込み
[形式]
        int sceMcWrite(
        	int fd,
        	void *buff,
        	int size
        )
        
[引数]
        fd	ファイルハンドラ番号
        buff	書き込むデータが格納されているバッファへのポインタ
        size	書き込むサイズ(単位バイト)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        メモリーカード上のファイルへデータを書き込みます。
        書き込み内容がファイルキャッシュで保持できるサイズにおさまってい
        るあいだは、書き込み内容はファイルキャッシュに残るだけで、メモリ
        ーカード上には反映されません。すぐにメモリーカード上に反映させた
        い場合はsceMcFlush() を呼んでください。
        (ファイルキャッシュサイズは24kByteあります)
        
        sceMcSync() のresultに返る値：
        0以上:	(成功)実際に書き込んだバイト数
        -2:	メモリーカードが未フォーマットです
        -3:	空き容量不足のため書き込めませんでした
        -4:	オープンされていないファイルハンドラです
        -5:	書き込みモードでオープンされていないファイルハンドラです
        -8:  書き込みに失敗した際に代替領域を使用しようとしましたが、その
        代替領域への書き込み
        　　にも失敗し続け最終的に書き込めませんでした。
        -10未満:	メモリーカードが検出できませんでした
        (-11〜-19,-40〜-49,-50〜-59,-70〜-79が返ることがあります)
        
[備考]
        sceMcSync() のresultが負の値になる場合には、操作を行おうとしてい
        たファイルは強制的にcloseされます。
        書き込みに失敗した場合、書こうとしていたデータがメモリーカード上
        に反映されているかどうかは保証されません。
