[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C)  2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

                          CD(DVD)-ROMライブラリ
                         ======================


 1 構造体
==========

=========================================================================
sceCdCLOCK                                                       [構造体]
=========================================================================
                                                   年月日・時刻格納構造体
[構造]
        typedef struct {
        	u_char stat;
        	u_char second;
        	u_char minute;
        	u_char hour;
        	u_char pad;
        	u_char day;
        	u_char month;
        	u_char year;
        } sceCdCLOCK;
        
[メンバ]
        stat	0:正常 それ以外はエラー
        second	秒（BCD値）
        minute	分（BCD値）
        hour	時（BCD値）
        pad	アライメントによって生じるパディングデータ
        day	日（BCD値）
        month	月（BCD値）
        year	年（BCD値）
        
[解説]
        年月日および時刻をBCD値にて格納する構造体。
        
[関連項目]
        sceCdReadClock()
        

=========================================================================
sceCdlFILE                                                       [構造体]
=========================================================================
                                                   ファイルディスクリプタ
[構造]
        typedef struct {
        	u_int lsn;
        	u_int size;
        	char name[16];
        	u_char date[8];
        } sceCdlFILE;
        
[メンバ]
        lsn	ファイルのロジカルセクタナンバ
        size	ファイルサイズ（バイト単位）
        name	ファイル名
        date	1th  秒
        	2th  分
        	3th  時
        	4th  日
        	5th  月
        	6th 7th  年(４桁)
        
[解説]
        CD(DVD)-ROMファイルの位置・サイズを表す構造体。
        
[関連項目]
        sceCdSearchFile()
        

=========================================================================
sceCdlLOCCD                                                      [構造体]
=========================================================================
                                               CD-ROM読み込みロケーション
[構造]
        typedef struct {
        	u_char minute;
        	u_char second;
        	u_char sector;
        	u_char track;
        } sceCdlLOCCD;
        
[メンバ]
        minute	分
        second	秒
        sector	セクタ
        track	トラック番号
        
[解説]
        CD-ROMの読み込み位置（ヘッド位置）を表す構造体。
        
[備考]
        CDの読み込み位置を分秒セクタで算出するためのみに存在する。
        
[関連項目]
        sceCdIntToPos(), sceCdPosToInt()
        

=========================================================================
sceCdRMode                                                       [構造体]
=========================================================================
                                               CD(DVD)-ROM 読み込みモード
[構造]
        typedef struct {
        	u_char trycount;
        	u_char spindlctrl;
        	u_char datapattern;
        	u_char pad;
        } sceCdRMode;
        
[メンバ]
        trycount		読み取りトライ回数（エラーリトライ回数 + １）の値
        					（0は255回トライを行う）
        spindlctrl	SCECdSpinStm:	ストリーム推奨回転速度
        		SCECdSpinNom:	最高回転数でデータ読み出しを開始し、読み出しエラ
        ー
        				の際には読み出しが行なえるまで回転数を落とす
        datapattern	SCECdSecS2048:	データサイズ2048byte
        		SCECdSecS2328:	            2328byte
        		SCECdSecS2340:	            2340byte
        pad		アライメントによって生じるパディングデータ
        
[解説]
        CD(DVD)-ROMの読み取りモードを指定する構造体。
        DVDメディア読み取り時のdatapatternは、SCECdSecS2048のみ有効。
        
[関連項目]
        sceCdRead()

 2 関数
========


=========================================================================
sceCdBreak                                                         [関数]
=========================================================================
                                                           コマンドの中断
[形式]
        int sceCdBreak ( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        実行中のコマンド（sceCdPause(), sceCdRead(), sceCdSeek(), sceCdSt
        andby(), sceCdSstatus(), sceCdstop()等）を中断する。
        各コマンドの処理は中断され、コールバック等が設定してある場合はコ
        ールバック関数が呼び出される。
        

=========================================================================
sceCdCallback                                                      [関数]
=========================================================================
                                      sceCdSyncコールバック関数を定義する
[形式]
        int sceCdCallback (
        	void (*func)()
        )
        
[引数]
        func	コールバック関数のアドレス
        
[返り値]
        前回設定したコールバック関数のアドレス。未設定の場合は０が返る。
        
[解説]
        ノンブロック関数の終了時に呼ばれるコールバックfuncを設定する。
        コールバックを設定するとノンブロック関数終了時に関数funcが呼び出
        される。
        関数funcはIOP側では割り込みハンドラで、ＥＥ側ではコールバックスレ
        ッドとしてよびだされる。
        funcに０を指定した場合およびコマンド発行に失敗した場合はコールバ
        ックは発生しない。
        コールバック関数の第一引数には、コールバックの要因となった関数の
        コードを渡す。
        
        +----------------+----------------------------+
        |第一引数         意味                        |
        +                +                            +
        |SCECdFuncRead    sceCdRead()関数が終了した   |
        |SCECdFuncSeek    sceCdSeek()関数が終了した   |
        |SCECdFuncStandby sceCdStandby()関数が終了した|
        |SCECdFuncStop    sceCdStop()関数が終了した   |
        |SCECdFuncPause   sceCdPause()関数が終了した  |
        +----------------+----------------------------+
        

    コールバック関数内での注意事項

         (1) ＥＥ側では、コールバック中にではsceCdRead()関数等、コールバッ
             クを発生する関数の再呼び出しはサポートしておりません。
         (2) IOP側では、コールバック関数は割り込みハンドラ中に割り込み禁止
             状態で呼ばれるため、できる限り早く処理を終える必要がある。ま
             た、ライブラリにて割り込み処理専用の関数が用意されている場合、
             その関数を使用する必要がある。
        

=========================================================================
sceCdChangeThreadPriority                                          [関数]
=========================================================================
              EE側リクエスト処理モジュールのIOPスレッドプライオリティ変更
[形式]
        int sceCdChangeThreadPriority(
        	int priority
        )
        
[引数]
        priority	EE側リクエスト処理モジュールのIOPスレッドプライオリティ
        値
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        EE側リクエスト処理モジュールのIOPスレッドプライオリティ値を設定す
        る。
        デフォルトのEE側リクエスト処理モジュールのIOPスレッドプライオリテ
        ィ値は８１です。
        またIOPスレッドプライオリティ値を変更する場合、他のモジュールのプ
        ライオリティに対して細心の注意を払う必要があります。そのため、安
        易にIOPスレッドプライオリティ値を変更する事はお勧めいたしません。

=========================================================================
sceCdDiskReady                                                     [関数]
=========================================================================
                                             ドライブの状態をチェックする
[形式]
        int sceCdDiskReady (
        	int mode
        )
[引数]
        mode	チェックモード（0: ブロック型、1: ノンブロック型）
        
[返り値]
        
        +-------------+------------------------------------+
        |返り値        意味                                |
        +             +                                    +
        |SCECdComplete コマンドを発行できる状態にある      |
        |SCECdNotReady ドライブはコマンドを受け付けられない|
        +-------------+------------------------------------+
        
[解説]
        ドライブの状態をチェックし、コマンドが発行できるかどうかを調べる。
        ドライブにメディアが挿入されていない場合はSCECdNotReadyとなる。
        ブロック型の場合は、ドライブの回転が安定していなければ安定するま
        でホールドしてリターンする。ノンブロック型の場合は、ステータスを
        調べてただちにリターンする。
        

=========================================================================
sceCdGetDiskType                                                   [関数]
=========================================================================
                                             メディアのフォーマットを得る
[形式]
        int sceCdGetDiskType ( void )
        
[引数]
        なし
        
[返り値]
        
        +----------------+-----------------------------+
        |返り値           意味                         |
        +                +                             +
        |SCECdIllgalMedia 再生禁止Disc                 |
        |SCECdPS2DVD      DiscはPS2用DVDである         |
        |SCECdPS2CD       DiscはPS2用CDである          |
        |SCECdPS2CDDA     DiscはPS2用CDである(CDDA付き)|
        |SCECdPSCD        DiscはPS用CDである           |
        |SCECdPSCDDA      DiscはPS用CDである(CDDA付き) |
        |SCECdDVDV        DiscはDVD Videoである        |
        |SCECdCDDA        Discは音楽CDである           |
        |SCECdDETCT       判別動作中                   |
        |SCECdNODISC      Diskが入っていない           |
        +----------------+-----------------------------+
        
[解説]
        メディアのフォーマットを得る。
        

=========================================================================
sceCdGetError                                                      [関数]
=========================================================================
                                               ドライブのエラー情報を得る
[形式]
        int sceCdGetError ( void )
        
[引数]
        なし
        
[返り値]
        
        +-------------+-----------------------------------+
        |返り値        意味                               |
        +             +                                   +
        |SCECdErFAIL   sceCdGetError()関数の発行に失敗した|
        |SCECdErNO     エラーは発生していない             |
        |SCECdErEOM    再生中に最外周に達した             |
        |SCECdErTRMOPN 再生中にトレイが開けられた         |
        |SCECdErREAD   読み出し中問題が発生した           |
        |SCECdErCUD    ドライブ中のディスクには不適切     |
        |SCECdErNORDY  コマンド処理中                     |
        |SCECdErABRT   アボートコマンドを受け取った       |
        +-------------+-----------------------------------+
        
[解説]
        ドライブのエラー情報を得る。
        

=========================================================================
sceCdGetReadPos                                                    [関数]
=========================================================================
                                      sceCdRead()関数の進行状況を調査する
[形式]
        u_int sceCdGetReadPos ( void )
        
[引数]
        なし
        
[返り値]
        sceCdRead()関数の進行状況を、バッファに転送したデータのサイズ（バ
        イト数）で返す。
        sceCdRead()関数が終了している場合は０を返す。
        
[解説]
        IOP側から呼ばれ、かつ、メディアがCDの場合は１セクタ単位の値（2048
        の倍数）を返す。
        それ以外（EE側から呼ばれた場合、またはIOP側から呼ばれてメディアが
        DVD）の場合は16セクタ単位の値（32768の倍数）を返す。
        

=========================================================================
sceCdGetToc                                                        [関数]
=========================================================================
                                                                TOCリード
[形式]
        int sceCdGetToc (
        	u_char *toc
        )
        
[引数]
        toc	ロケーションテーブル情報の返されるアドレス（1024bytesの領域が
        必要）
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD-ROMのTOCのセクタ情報を得る。
        

=========================================================================
sceCdInit                                                          [関数]
=========================================================================
                                          CD(DVD)-ROMサブシステムの初期化
[形式]
        int sceCdInit (
        	int init_mode
        )
        
[引数]
        init_mode	ライブラリ初期化モード
        	SCECdINIT	ライブラリの初期化を行いコマンドの発行が可能な状態にな
        るまでブロックする。
        	SCECdINoD	ライブラリの初期化のみ行う。
        	SCECdEXIT	ライブラリの終了処理を行う。
        
[返り値]
        ０：初期化に失敗した。
        １：正常に初期化を行なった。
        ２：初期化は行なったがIOP側にデフォルトモジュールを検出した。
        
[解説]
        CD(DVD)-ROMサブシステムを初期化する。
        
[備考]
        標準入出力（sceRead()等）を使用する場合でも最初にsceCdInit()によ
        る初期化が必要。
        sceCdInit()による初期化後、必ずsceCdMmode()を呼び、メディア(CDかD
        VD)を指定するようにしてください。
        IOPのデフォルトモジュール内のcdvdman.irx、cdvdfsv.irxの置き換えが
        行われないまま、当関数を使用すると２を返します。
[関連項目]
        sceCdMmode()

=========================================================================
sceCdInitEeCB                                                      [関数]
=========================================================================
                       EE側コールバックスレッドの初期化（EE側のみの関数）
[形式]
        int sceCdInitEeCB (
        	int cb_prio,
        	void *stack_addr;
        	int stack_size
        )
        
[引数]
        cb_prio	コールバックスレッドのプライオリティ
        	自スレッドよりプライオリティの高い	値に設定する必要がある
        stack_addr	コールバックスレッドのスタックアドレス
        stack_size	コールバックスレッドのスタックサイズ
        
[返り値]
        0：コールバックは初期化済みでありプライオリティの変更のみ行なった。
        1：コールバックの初期化を行なった。
        
[解説]
        EE側コールバックスレッドの初期化をおこなう。EE側にてコールバック
        を利用する際にはsceCdInit()関数等の直後に必ず実行する。
        
[備考]
        スタックに使用するアドレスは16バイトアライメントで、サイズは16の
        倍数で指定する必要がある。
        

=========================================================================
sceCdIntToPos                                                      [関数]
=========================================================================
                       CD-ROMロジカルセクタナンバから分・秒・セクタを得る
[形式]
        sceCdlLOCCD *sceCdIntToPos (
        	int i,
        	sceCdlLOCCD *p
        )
        
[引数]
        i	ロジカルセクタナンバ
        p	分・秒・セクタ
        
[返り値]
        sceCdlLOCCDのアドレスを返す
        
[解説]
        ロジカルセクタナンバから分・秒・セクタの値を計算する。
        メディアがDVDのときは意味をなさない。

=========================================================================
sceCdMmode                                                         [関数]
=========================================================================
                                             読み取りメディアを指定する。
[形式]
        int sceCdMmode(
        	int media
        )
        
[引数]
        media	読み取りメディア
        	SCECdCD	読み取りメディアとしてＣＤを指定する。
        	SCECdDVD	読み取りメディアとしてＤＶＤを指定する。
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD(DVD)-ROMサブシステムに対して読み取りメディアを指定する。
        
[備考]
        sceCdInit()関数呼び出し後に必ず当関数にて読み込みメディアの指定が
        必要です。
        
[関連項目]
        sceCdInit()

=========================================================================
sceCdPause                                                         [関数]
=========================================================================
                                              CD(DVD)-ROMのヘッドのポーズ
[形式]
        int sceCdPause ( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD(DVD)-ROMのヘッドをその場でポーズ状態にする。
        
[備考]
        ノンブロック関数であるため、実際にヘッドがポーズ状態になったこと
        はsceCdSync()で検出する必要がある。
        

=========================================================================
sceCdPosToInt                                                      [関数]
=========================================================================
                       CD-ROM分・秒・セクタからロジカルセクタナンバを得る
[形式]
        int sceCdPosToInt (
        	sceCdlLOCCD *p
        )
        
[引数]
        p	分・秒・セクタ
        
[返り値]
        ロジカルセクタナンバ
        
[解説]
        分・秒・セクタの値からロジカルセクタナンバを計算する。
        メディアがDVDのときは意味をなさない。
        

=========================================================================
sceCdRead                                                          [関数]
=========================================================================
                                                             データリード
[形式]
        int sceCdRead (
        	u_int lsn,
        	u_int sectors,
        	void *buf,
        	sceCdRMode *mode
        )
        
[引数]
        lsn	読み込み開始ロジカルセクタナンバ
        sectors	読み込むセクタ数
        buf	読み込みバッファ
        mode	読み込みモード
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        lsnで示された読み込み開始位置にシークを行い、CD(DVD)-ROMのStartPo
        intからsectorsのセクタデータを読み込み、指定メモリのbuf以下に展開
        する。その後、ヘッドはポーズ状態となる。
        
[備考]
        CD-DAデータおよびDVD-videoデータの読み込みは不可。
        ノンブロック関数であるため、実際の転送の終了はsceCdSync()で検出す
        る必要がある。

    IOP側から当関数を使用する際の注意点

        ディスク表面に激しい傷等があると、本関数の終了がsceCdSync()にて検
        出できない場合がある。その場合はsceCdBreak()関数を使用して本関数
        をアボート処理する。
        
[関連項目]
        sceCdSync()

=========================================================================
sceCdReadChain                                                     [関数]
=========================================================================
                                         一括データリード(EE側のみの関数)
[形式]
        int sceCdReadChain (
        	u_int *tag,
        	sceCdRMode *mode
        )
        
[引数]
        tag	読み込みパラメータ格納データ列へのポインタ。
        		データ列の構造は次のとおり。
        		tag= {	lsn,	sectors,	buf,
        				lsn, 	sectors,	buf,
        				 :      	 :	 :	最大64列まで
        				0xffffffff,	0xffffffff,	0xffffffff };
        			データ列終端には0xffffffffを置く。
        		u_int lsn:	読み込み開始ロジカルセクタナンバ
        		u_int sectors:	読み込むセクタ数
        		u_int buf:	読み込みバッファの位置を表す次のような値
        				bit31..bit2:	読み込みバッファアドレスの上位30ビット
        				bit0:	0:EEメモリ
        					1:IOPメモリ
        mode	読み込みモード
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        読み込みパラメータ格納データ列の内容に沿って、最大64組のデータを
        一括して読み出す。CD-DAデータおよびDVD-videoデータの読み込みは不
        可。
        読み込みバッファとしてEEメモリを指定する場合、アドレスは64バイト
        アライメントに沿っていなければならない。
        ノンブロック関数であるため、実際の転送の終了はsceCdSync()で検出す
        る必要がある。
        
[関連項目]
        sceCdSync()
        

=========================================================================
sceCdReadClock                                                     [関数]
=========================================================================
                                                   年月日および時刻の取得
[形式]
        int sceCdReadClock (
        	sceCdCLOCK *rtc,
        )
        
[引数]
        *rtc	年月日および時刻格納構造体アドレス
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        "PlayStation 2"内蔵のリアルタイムクロックから年月日および時刻を取
        得する。
        
[備考]
        当関数はドライブ関係の処理を行うコントローラを使用するため、連続
        で呼び出す場合は300msec程度の間隔を開ける必要がある。
        

=========================================================================
sceCdReadIOPm                                                      [関数]
=========================================================================
                              IOPメモリへのデータリード（EE側のみの関数）
[形式]
        int sceCdReadIOPm (
        	u_int lsn,
        	u_int sectors,
        	void *buf,
        	sceCdRMode *mode
        )
        
[引数]
        lsn	読み込み開始ロジカルセクタナンバ
        sectors	読み込むセクタ数
        buf	読み込みバッファ（IOPメモリ）
        mode	読み込みモード
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        lsnで示される読み込み開始位置にシークを行い、CD(DVD)-ROMのStartPo
        intからsectorsのセクタデータを読み込み、IOPメモリのbuf以下に展開
        する。その後、ヘッドはポーズ状態となる。
        
[備考]
        CD-DAデータのDVD-videoデータの読み込みは不可。
        ノンブロック関数であるため、実際の転送の終了はsceCdSync()で検出す
        る必要がある。
        
[関連項目]
        sceCdSync()

=========================================================================
sceCdSearchFile                                                    [関数]
=========================================================================
                                         ファイル名から位置とサイズを獲得
[形式]
        int sceCdSearchFile (
        	sceCdlFILE *fp,
        	char *name
        )
        
[引数]
        fp	CD(DVD)-ROMファイル構造体のポインタ
        name	ファイル名
        
[返り値]
        0：ファイルが見つからない。
        1：ファイル構造体のポインタの獲得に成功した。
        
[解説]
        CD(DVD)-ROM上のファイル名から絶対位置LSN（論理セクタナンバ）とサ
        イズを知る。結果は*fpに格納される。
        
[備考]
        ファイル名はすべて絶対パスで指定する必要がある。
        nameで指定されたファイルと同じディレクトリにあるファイルの位置情
        報はメモリにキャッシュされる。
        

=========================================================================
sceCdSeek                                                          [関数]
=========================================================================
                                                CD(DVD)-ROMのヘッドの移動
[形式]
        int sceCdSeek (
        	u_int lsn
        )
        
[引数]
        lsn	目標ロジカルセクタナンバ
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD(DVD)-ROMのヘッドを目標位置まで移動し、ポーズ状態に設定する。
        
[備考]
        ノンブロック関数であるため、ヘッド移動の終了はsceCdSync()で検出す
        る必要がある。
        
[関連項目]
        sceCdSync()
        

=========================================================================
sceCdStandby                                                       [関数]
=========================================================================
                                                         メディア回転開始
[形式]
        int sceCdStandby( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD(DVD)-ROMのメディアを回転させ、ヘッドを最内周に置いてポーズ状態
        に設定する。
        
[備考]
        ノンブロック関数であるため、実際の動作の終了はsceCdSync()で検出す
        る必要がある。
        
[関連項目]
        sceCdSync()
        

=========================================================================
sceCdStatus                                                        [関数]
=========================================================================
                                                     ドライブの状態を得る
[形式]
        int sceCdStatus( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合-1を、成功の場合下記のステータスを返す。
        
        +-------------------+------------------------+
        |返り値              意味                    |
        +                   +                        +
        |SCECdStatShellOpen  トレイが開いている      |
        |SCECdStatStop       ストップ状態            |
        |SCECdStatSpin       スピンドルが回転している|
        |SCECdStatRead       リード実行中            |
        |SCECdStatPause      ポーズ状態（参照不可）  |
        |SCECdStatSeek       シーク中                |
        |SCECdStatEmg        異常ストップ            |
        +-------------------+------------------------+
        
[解説]
        ドライブの現在の状態を返す。
        

=========================================================================
sceCdStInit                                                        [関数]
=========================================================================
                                                         ストリーマ初期化
[形式]
        int sceCdStInit(
        	u_int bufmax,
        	u_int bankmax,
        	u_int iop_bufaddr
        )
        
[引数]
        bufmax		ストリームバッファ全体の容量（2048byte単位のセクタ数にて
        指定する）
        bankmax	ストリームバッファの分割数（リングバッファのバッファの数）
        3以上
        		分割したバッファのサイズは16セクタ程度の容量が望ましい。
        iop_bufaddr	ストリームバッファのIOPメモリアドレス
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        ストリーマの初期化およびストリームバッファの登録（リングバッファ
        の作成）を行う。
        
[備考]
        ストリームバッファ等IOP側メモリをEE側から取得するにはsceSifAllocI
        opHeap()等の関数を使用する。
        
[関連項目]
        sceSifAllocIopHeap(), sceCdStRead(), sceCdStSeek(), sceCdStStart()
        , sceCdStStat(),
        sceCdStStop(), sceCdStPause(), sceCdStResume()
        

=========================================================================
sceCdStop                                                          [関数]
=========================================================================
                                                         メディア回転停止
[形式]
        int sceCdStop( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        CD(DVD)-ROMのメディアの回転を停止する。
        
[備考]
        ノンブロック関数であるため、実際の動作の終了はsceCdSync()で検出す
        る必要がある。
        
[関連項目]
        sceCdSync()

=========================================================================
sceCdStPause                                                       [関数]
=========================================================================
                                                     ストリームの一時停止
[形式]
        int sceCdStPause( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        ストリームバッファの内容を保持したままストリームデータの読み込み
        を一時停止する。
        
[備考]
        ストリームデータの読み込み再開はsceCdStResume()関数にて行う。
        
[関連項目]
        sceCdStInit(), sceCdRead(), sceCdStSeek(), sceCdStStart(), sceCdS
        tStat(), sceCdStStop(), sceCdStResume()

=========================================================================
sceCdStRead                                                        [関数]
=========================================================================
                                               ストリームデータの読み込み
[形式]
        int sceCdStRead(
        	u_int sectors,
        	u_int *buf,
        	u_int mode,
        	u_int *err
        )
        
[引数]
        sectors	ストリームバッファからのデータ読み込みセクタ数
        buf	データ読み込みアドレス（EE側から呼び出す場合は必ず64バイトア
        ライメントの領
        	域であること）
        mode	データ読み込みモード
        	STMNBLK :現在ストリームバッファの中にあるデータのみを返す。
        	STMBLK  :sectorsにて指定したデータ数が読み込み終了するかエラーが
        発生する
        	までブロックして読み込みを行う。
        err	読み取り時エラーコード格納アドレス
        	エラーコードはsceCdGetError()で取得するエラーコードと同様
        
[返り値]
        データ読み込み数をセクタ数（2048byte単位）で返す。
        
[解説]
        ストリームバッファからのデータ読み込みを行う。
        
[関連項目]
        sceCdStInit(), sceCdStSeek(), sceCdStStart(), sceCdStStat(), sceC
        dStStop(), sceCdStPause(), sceCdStResume()

=========================================================================
sceCdStResume                                                      [関数]
=========================================================================
                                                         ストリームの再開
[形式]
        int sceCdStResume( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        ストリームデータの読み込みを再開する（sceCdStPause()関数による一
        時停止を解除する）。
        
[関連項目]
        sceCdStInit(), sceCdStRead(), sceCdStSeek(), sceCdStStart(), sceC
        dStStat(), sceCdStStop(), sceCdStPause()

=========================================================================
sceCdStSeek                                                        [関数]
=========================================================================
                                                     ストリーム位置の変更
[形式]
        int sceCdStSeek(
        	u_int lsn
        )
        
[引数]
        lsn	ストリーム変更位置（ロジカルセクタナンバにて指定）
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        ストリームバッファの内容を破棄し現在のストリーム位置を変更する。
        
[関連項目]
        sceCdStInit(), sceCdStRead(), sceCdStStart(), sceCdStStat(), sceC
        dStStop(), sceCdStPause(), sceCdStResume()
        

=========================================================================
sceCdStStart                                                       [関数]
=========================================================================
                                                       ストリーミング開始
[形式]
        int sceCdStStart(
        	u_int lsn,
        	sceCdRMode *mode
        )
        
[引数]
        lsn	ストリーム開始位置（ロジカルセクタナンバにて指定）
        mode	読み込みモード
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        ストリーム開始位置よりストリームバッファに読み込みを開始する。
        ストリーミングを開始するとCD(DVD)-ROMからストリーミングバッファへ、
        バックグラウンドにて再帰的にデータ読み込みが行われるため、sceCdSt
        Stop()によってストリーミング処理を終了させるまで、sceCdRead()等を
        使用してCD(DVD)-ROMからの読み込みはできなくなる。
        modeのdatapatternに指定できる値はSCECdSecS2048のみ。
        
[関連項目]
        sceCdStInit(), sceCdStRead(), sceCdStSeek(), sceCdStStat(), sceCd
        StStop(), sceCdStPause(), sceCdStResume()
        

=========================================================================
sceCdStStat                                                        [関数]
=========================================================================
                                         ストリームデータ読み込み状況取得
[形式]
        int sceCdStStat( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合はすでにストリーマに蓄積され
        たデータ数をセクタ数(2048byte単位)で返す。
        
[解説]
        ストリームデータの現在の読み込み状況を取得する。
        
[関連項目]
        sceCdStInit(), sceCdStRead(), sceCdStSeek(), sceCdStStart(), sceC
        dStStop(), sceCdStPause(), sceCdStResume()
        

=========================================================================
sceCdStStop                                                        [関数]
=========================================================================
                                                     ストリーミングの終了
[形式]
        int sceCdStStop( void )
        
[引数]
        なし
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合は1を返す。
        
[解説]
        ストリーミングを終了する。
        
[関連項目]
        sceCdStInit(), sceCdStRead(), sceCdStSeek(), sceCdStStart(), sceC
        dStStat(), sceCdStPause(), sceCdStResume()
        

=========================================================================
sceCdSync                                                          [関数]
=========================================================================
                                                     コマンドの終了を待つ
[形式]
        int sceCdSync (
        	int mode
        )
        
[引数]
        mode	0x00: コマンドの終了を待つ（ブロック型）
        	0x01: 現在の状態を調べて即座にリターンする（ノンブロック型）
        	0x10: ＥＥ側から発行したコマンドの終了を含めてコマンドの終了を待
        つ
        	    （IOP側から呼び出し時のみの引数、ブロック型）
                0x11: ＥＥ側から発行したコマンドの状態も含め、現在の状態
        を調べて即座にリター
                      ンする（IOP側から呼び出し時のみの引数、ノンブロック
        型）
[返り値]
        0: 終了
        1: 未終了
        
[解説]
        modeに0x00を指定した場合は、実行中のコマンドが終了するのを待ち、0
        を返す。
        modeに0x01を指定した場合は、コマンドの実行状態を調べて、0 / 1のい
        ずれかを返す。
        modeに0x10を指定した場合は、ＥＥ側から発行したコマンドの終了を含
        めて実行中のコマンドが終了するのを待ち、0を返す。(IOP側から呼び出
        し時のみ有効)
        modeに0x01を指定した場合は、ＥＥ側から発行したコマンドの状態も含
        めてコマンドの実行状態を調べて、0 / 1のいずれかを返す。(IOP側から
        呼び出し時のみ有効)
        
[関連項目]
        sceCdRead(), sceCdSeek(), sceCdStop(), sceCdStandby(), sceCdGetTo
        c()
        

=========================================================================
sceCdTrayReq                                                       [関数]
=========================================================================
                                              トレイのオープン / クローズ
[形式]
        int sceCdTrayReq(
        	int mode,
        	u_int *traycnt
        )
        
[引数]
        mode	トレイ制御モード
        	0:トレイオープン
        	1:トレイクローズ
        	2:トレイ状態変化取得
        traycnt	トレイ状態変化の有無が返されるアドレス
        	０:オープン動作は行われていない
        	１:オープン動作を行なった。
        
[返り値]
        コマンド発行失敗の場合0を、成功の場合1を返す。
        
[解説]
        引数modeの指定に応じて、CD(DVD)-ROMドライブのトレイを開閉する。
        modeに2を指定した場合はトレイ状態変化取得モードとなり、その前にト
        レイ状態変化取得モードで呼び出されたときからトレイがオープンした
        かどうかを、*traycntに返します。
        
[備考]
        ディスクが挿入されたあと、コマンドを受け付けられる状態になったか
        どうかの調査はsceCdDiskReady()にて行う。
