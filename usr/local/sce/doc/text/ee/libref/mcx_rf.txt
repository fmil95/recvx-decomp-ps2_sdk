[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C)  2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

                              PDAライブラリ
                             ==============


 1 構造体
==========

=========================================================================
sceMcxTblInfo                                                    [構造体]
=========================================================================
                                        PDA情報を受け渡しするための構造体
[構造]
        typedef 	struct {
        	short AppliNo;
        	short Reserve1;
        	int AplArg;
        	unsigned char Speaker;
        	unsigned char Infrared;
        	unsigned char Flash;
        	unsigned char Led;
        	struct {
        		unsigned char Week, Sec, Min, Hour;
        		unsigned char Day, Month;
        		unsigned short Year;
        	} _Rtc;
        	unsigned Serial;
        }  sceMcxTblInfo;
        
        #define PWeek	_Rtc.Week
        #define PSec	_Rtc.Sec
        #define PMin	_Rtc.Min
        #define PHour	_Rtc.Hour
        #define PDay	_Rtc.Day
        #define PMonth	_Rtc.Month
        #define PYear	_Rtc.Year
        
[メンバ]
        AppliNo		実行中／実行させたいPDAアプリケーション番号
        AplArg		PDAアプリケーションに渡す引数
        Speaker		スピーカー使用禁止
        Infrared		赤外線通信／リモコン 送信禁止
        Flash		PDAアプリケーションによるFlashメモリ書き込み禁止
        Led		LED点灯禁止
        
        PWeek		RTC(リアルタイムクロック)曜日
        PSec		RTC秒
        PMin		RTC分
        PHour		RTC時
        PDay		RTC日
        PMonth		RTC月
        PYear		RTC年
        
        Reserve1		予約領域、すべて00で埋めなくてはなりません。
        
[解説]
        sceMcxGetInfo()を使ってPDA情報を取得したり、sceMcxSetInfo()でPDA
        情報を設定したりする際に受け渡しするデータの構造体です。
        

=========================================================================
sceMcxTblUifs                                                    [構造体]
=========================================================================
               ユーザインターフェイスステータスを受け渡しするための構造体
[構造]
        typedef 	struct {
        	unsigned char AMin, AHour;
        	unsigned Alarm:1;
        	unsigned KeyLock:1;
        	unsigned Volume:2;
        	unsigned AreaCode:3;
        	unsigned RtcSet:1;
        	unsigned char Reserve1;
        	unsigned short Font;
        	short Reserve2;
        	} sceMcxTblUifs;
        
        AMin		アラーム時刻(分)
        AHour		アラーム時刻(時)
        Alarm		アラームON/OFF
        KeyLock		キーロックON/OFF
        Volume		スピーカ音量
        AreaCode	PocketStationの仕向け地区分(参照専用)
        RtcSet		リアルタイムクロックの信憑性(設定済みかどうか)
        Font		フォントアドレス(参照専用)
        
        Reserve1		予約領域、すべて00で埋めなくてはなりません。
        Reserve2		予約領域、すべて00で埋めなくてはなりません。
        
[解説]
        sceMcxGetUifs()を使ってユーザインタフェースのステータスを取得した
        り、sceMcxSetUifs()でユーザインタフェースのステータスを設定したり
        する際に受け渡しするデータの構造体です。

 2 関数
========


=========================================================================
sceMcxChangeThreadPriority                                         [関数]
=========================================================================
                   IOPモジュール(mcxserv.irx)のスレッドプライオリティ設定
[形式]
        int sceMcxChangeThreadPriority(
        	int level
        )
        
[引数]
        level	スレッドプライオリティ
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAライブラリのIOP側モジュールであるmcxserv.irxのスレッドプライオ
        リティを変更します。設定可能なプライオリティは thread.h に定義さ
        れているUSER_HIGHEST_PRIORITY 〜 USER_LOWEST_PRIORITY の間の値で
        す(両端の値含む)。mcxserv.irxモージュールのスレッドプライオリティ
        初期値は104です。
        
        sceMcxSync() のresultに返る値：
        0:		成功(kerror.h:KE_OK)
        -403:	スレッドプライオリティの値が設定可能な範囲を超えています。(
        kerror.h:KE_ILLEGAL_PRIORITY)
        
[備考]
        スレッドプライオリティはsceSifLoadModule()でmcxserv.irxをロードす
        る際にも指定することが出来ます。例えば次のようにして mcxserv.irx
        をロードするとスレッドプライオリティの初期値が100になります。スレ
        ッドプライオリティの文字は10進数で指定してください。
        
        unsigned char *param = "thpri=100";
        sceSifLoadModule( "host0:/usr/local/sce/iop/modules/mcxserv.irx",
         strlen(param)+1, param);
        

=========================================================================
sceMcxGetInfo                                                      [関数]
=========================================================================
                                                              PDA情報取得
[形式]
        int sceMcxGetInfo(
        	int port,
        	int slot,
        	sceMcxTblInfo *info
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        info	PDA情報を格納するバッファへのポインタ
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAが保持している以下の値を参照することが出来ます。
        
         ・実行中のPDAアプリケーション番号
           PDAで実行中のアプリケーションが格納されている先頭ブロックが返
           ります。ただしここで言うブロックとはPlayStation用メモリーカー
           ドとしてのファイル管理単位(8kB)のフラッシュメモリ領域のことを
           指します。起動アプリケーションが実行中の場合は0が返りそれ以外
           のアプリケーションが実行中は１〜１５の値が返ります。
         ・［スピーカー出力／赤外線送信／PDAアプリによるフラッシュ書き込み
           ／LED点灯］の禁止状態
           それぞれの機能が使用禁止されているときは１、使用が許可されてい
           るときには０が返ります。
         ・リアルタイムクロック
           PDAに内蔵のリアルタイムクロックを読み、年月日時分秒曜日を返し
           ます。
         ・シリアル番号
           上位8ビットでアルファベット1文字のASCIIコードを表し、下位24ビ
           ットで8桁の10進数値を表しています。その2つを合わせてシリアル番
           号としてはA00000001のような表記になっています。
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        

=========================================================================
sceMcxGetMem                                                       [関数]
=========================================================================
                                                    PDA内メモリの読み出し
[形式]
        int sceMcxGetMem(
        	int port,
        	int slot,
        	void *buff,
        	unsigned addr,
        	unsigned size
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        buff	メモリの内容を読み込むバッファへのポインタ
        addr	読み出したいメモリの先頭アドレス
        size	読み出しバイトサイズ(128バイト以内)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAのメモリ内容を、指定したアドレスから、指定したバイト数分だけ読
        み込んでバッファに格納します。読み込み範囲が以下の領域以外の場所
        にかかっている場合または仮想フラッシュメモリを設定しないで0x2****
        ** のアドレスをアクセスしようとするとPDAでバスエラーが発生してし
        まいますのでご注意ください。
        
        読み込み可能な領域：
        0x0******, 0x2******, 0x4******, 0x6******, 0x8******
        0xA******, 0xB******, 0xC******, 0xD******（******は任意の6桁16進
        値）
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        
        

=========================================================================
sceMcxGetUifs                                                      [関数]
=========================================================================
                                   ユーザ・インタフェース・ステータス取得
[形式]
        int sceMcxGetUifs(
        	int port,
        	int slot,
        	sceMcxTblUifs *uifs
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        uifs	ユーザ・インタフェース・ステータス読み込むためのバッファへの
        ポインタ
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAからユーザ・インタフェース・ステータスを取り込みます。
        
        ユーザ・インタフェース・ステータスを受け渡しする構造体sceMcxTblUi
        fs各メンバの意味は次のようになっています。
        
         ・アラーム時刻（時）：０〜２３
         ・アラーム時刻（分）：０〜５９
         ・アラーム（ON/OFF）：０−OFF、1−ON
         ・キーロック：0−ロック解除、１−ロック
         ・スピーカ音量：０−大、1−小、2−切り
         ・エリアコード：0−日本、1−北米、2−欧州
         ・RTC設定済み：0−データ無効(リセット後RTCが未設定)、1−データ有
           効(リセット後RTCが設定済み)
         ・フォントデータ開始アドレス：0x4000000からの相対アドレス
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        

=========================================================================
sceMcxHideTrans                                                    [関数]
=========================================================================
                                                     データ転送中表示解除
[形式]
        int sceMcxHideTrans(
        	int port,
        	int slot,
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        sceMcxShowTrans()によって表示されたLCD画面上のデータ転送中表示を
        解除します。
        
        この関数が呼ばれると、現在実行中のPDAアプリケーションに対しPDAカ
        ーネルからの｢ファイル転送制御コールバック｣が発生します。PDAの｢ユ
        ーザーコールバック設定(swi 1)｣において「PlayStationからファイル転
        送中表示開始／終了設定時」に登録したサブルーチン内でPDAのLCD画面
        上に表示しているデータ転送中の表示を終了させます。（PDAアプリケー
        ションで必要な処理の詳細に関しては「PDAカーネル仕様書」を参照して
        ください。）
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした

=========================================================================
sceMcxInit                                                         [関数]
=========================================================================
                                                PDAライブラリ環境の初期化
[形式]
        int sceMcxInit(
        	void
        )
        
[引数]
        なし
        
[返り値]
        0:	成功
        -101:	初期化失敗
        -120:	mcxserv.irxのバージョンが古い
        -121:	mcxman.irxのバージョンが古い
        
[解説]
        PDAライブラリで使う内部変数の初期化を行います。
        

=========================================================================
sceMcxReadDev                                                      [関数]
=========================================================================
                                        PDAデバイスエントリからの読み出し
[形式]
        int sceMcxReadDev(
        	int port,
        	int slot,
        	int devno,
        	void *para,
        	unsigned parasize,
        	void *cont,
        	unsigned contsize
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        devno	デバイスエントリ番号
        para	固定部パラメータを格納しているバッファへのポインタ
        parasize	固定部パラメータのバイト長(デバイスエントリごとに固定)
        cont	可変部データを格納するためのバッファへのポインタ
        contsize	可変部データのバイト長(128バイト以内)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDA上に用意されている予約済みデバイス、およびユーザ定義デバイスか
        らの読み出しを行います。各デバイスに固定部パラメータを渡し、その
        結果返ってくる可変部データを読み込みます。デバイスによっては固定
        部パラメータがないものもあります。
        
        ユーザ定義デバイスを呼び出すには、「PDAカーネル仕様書」内の｢カー
        ネルサービス概要：PlayStationとの通信：デバイスエントリコールバッ
        ク｣の項に従ってサブルーチンを作成し、メモリーカードファイルのヘッ
        ダ内にある｢デバイスエントリテーブル｣に登録しておく必要があります。
        
        予約済みデバイスとしては以下の3つがあります。(マクロはlibmcx.hで
        定義)
        
        +--------------------------------+------------+-------------+
        |デバイス名                       デバイス番号 マクロ       |
        +                                +            +             +
        |リアルタイムクロック             ０           sceMcxDevRtc |
        |PDAメモリ                        １           sceMcxDevMem |
        |ユーザーインタフェースステータス ２           sceMcxDevUIFS|
        +--------------------------------+------------+-------------+
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした

=========================================================================
sceMcxSetInfo                                                      [関数]
=========================================================================
                                                              PDA情報更新
[形式]
        int sceMcxSetInfo(
        	int port,
        	int slot,
        	sceMcxTblInfo *info,
        	unsigned part
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        info	更新する内容が格納されているバッファへのポインタ
        part	更新したいパラメータ指定
        6種類のパラメータが更新できますので更新したいパラメータに対応した
        ビットをすべて立てて渡します。(libmcx.hに定義あり)
        	sceMcxBitAppli	PDAアプリケーション実行
        	sceMcxBitSpeaker	スピーカー使用禁止状態
        	sceMcxBitInfrared	赤外線通信／リモコン 送信禁止状態
        	sceMcxBitFlash	PDAアプリケーションによるフラッシュ書込み禁止状態
        	sceMcxBitLed	LED点灯禁止状態
        	sceMcxBitDate	リアルタイムクロックの現在時刻
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDA情報を更新します。
        
         ・PDAアプリケーションの実行
           実行したいPDAアプリケーションをPDA内に格納されている先頭ブロッ
           ク番号の値でメンバAppliNoに対して指定します。AplArgに設定した
           値が引数としてアプリケーションに渡されます。
           ここで言うブロックとはPlayStation用メモリーカードとしてのファ
           イル管理単位(8kB)のフラッシュメモリ領域のことを指します。起動
           アプリケーションを実行させる場合は0を渡し、ユーザーアプリケー
           ションを実行させる場合は１〜１５の値を渡します。
           
           先頭ブロック番号を調べるにはまずsceMcxGetMem()を使ってPDA内の
           メモリから0x8000000+0x80×aplnoから1バイト読み込み、その値が0x
           51であるかどうかを調べます。次に0x51であったaplnoに対し0x80000
           0A+0x80×aplnoから21バイト読み込み、起動したいアプリケーション
           が含まれているファイル名と一致しているかどうか調べます。一致し
           ていればそのときのaplnoが起動させたいアプリケーションの先頭ブ
           ロック番号を示しています。
           aplnoは1〜15の間で振って検索しますが、見つからない場合には目的
           のアプリケーションが保存されていないことになりますのでダウンロ
           ードが必要です。
           PDAアプリケーションの実行を行おうとするとPDAアプリケーション側
           には「PDAステータス取得(swi 6)」の結果の｢bit11: PDAアプリケー
           ション終了｣フラグとして、PlayStationからのアプリケーション終了
           要求が伝えられます(フラグの定期的な監視が必要)。アプリケーショ
           ン終了にあたってPDAアプリケーションで必要な処理の詳細に関して
           は「PDAカーネル仕様書」を参照してください。
           このパラメータ更新では、現在実行中のPDAアプリケーションに終了
           要求を伝えますが、実行中のアプリケーションが終了を拒否する場合
           もありますので、sceMcxGetInfo()を使ってPDAアプリケーションが切
           り替わったことを確認してください。
        
         ・［スピーカー出力／赤外線送信／LED点灯］の禁止状態
           それぞれの機能を使用禁止にするときは１、使用を許可するときには
           ０を渡します。
           これらは、"PlayStation 2"が前面端子に対して供給できる電流容量
           に上限があるために行う制限です。PDAが"PlayStation 2"に差し込ま
           れた直後はデフォルトですべて禁止となります。
           
           各モジュールの消費電流は表のようになります。"PlayStation 2"か
           ら供給可能な最大電流はポート2つの合計で160mAですので、その値を
           超えない様に調整してください（特にマルチタップ使用時）。
        +----------------------+--------+
        |モジュール名           消費電流|
        +                      +        +
        |CPUチップ              10mA    |
        |赤外線モジュール送信側 70mA    |
        |スピーカー             20mA    |
        |LED                    10mA    |
        +----------------------+--------+
        
        PDAアプリケーション上で上記３つの機能を使おうとする場合は、まず初
        めに｢PDAステータス取得(swi 6)｣を用いて各機能の使用制限状態を確認
        しなくてはなりません。（PDAアプリケーションで必要な処理の詳細に関
        しては「PDAカーネル仕様書」を参照してください。）
        
         ・PDAアプリによるフラッシュ書き込みの禁止状態
           PDAアプリケーションがPDAのフラッシュメモリに対して書き込むこと
           を禁止する場合は１を、書き込みを許可する場合は０を渡します。
           PDAアプリケーションがフラッシュメモリへの書き込みを行っている
           最中に"PlayStation 2"との通信を行うことはPDA内部処理の負荷およ
           びアクセスの競合上問題があるため、PDAアプリケーションがフラッ
           シュへの書き込みを行う可能性がある場合に、あらかじめ"PlayStati
           on 2"側プログラムがPDAとの通信が失敗する可能性があることを認識
           した上でフラッシュ書き込みを許可するための設定です。
           
           ただし、この関数による禁止／許可の設定は「PDAステータス取得(sw
           i 6)」の結果としてしかPDAアプリケーションに伝えられませんので、
           PDAアプリケーション側ではフラッシュメモリへの書き込みを行おう
           とする場合に｢PDAステータス取得(swi 6)｣を用いて書き込み許可状態
           を確認する必要があります。（PDAアプリケーションで必要な処理の
           詳細に関しては「PDAカーネル仕様書」を参照してください。）
           
           デフォルトはPDAアプリケーションがフラッシュメモリへ書き込みに
           行くことは禁止。すなわち、"PlayStation 2"との通信が優先となっ
           ています。
           
           PDAアプリケーションに対し、フラッシュメモリへの書き込みを許可
           している間は、フラッシュ書き込みのためにPDAが"PlayStaion 2"と
           の通信を切っていることがありますので、PocketStationが接続され
           ているにもかかわらずsceMcxSync() の result に「−12：PocketSta
           tionが検出できませんでした」が継続して返ることがあります。
         ・リアルタイムクロック
           PDAに内蔵のリアルタイムクロックの年月日時分秒曜日を設定します。
           曜日は自動計算されますので代入は不要です。
        
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        

=========================================================================
sceMcxSetLed                                                       [関数]
=========================================================================
                                                            LED点灯／消灯
[形式]
        int sceMcxSetLed(
        	int port,
        	int slot,
        	int mode
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        mode	0：消灯、0以外：点灯
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        LEDを点灯または消灯します。
        sceMcxGetMem()やsceMcxSetMem()によってPIO0、PIO1を直接アクセスし
        て消点灯の設定、状態の確認を行うことも出来ます。
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした

=========================================================================
sceMcxSetMem                                                       [関数]
=========================================================================
                                                  PDA内メモリへの書き込み
[形式]
        int sceMcxSetMem(
        	int port,
        	int slot,
        	void *buff,
        	unsigned addr,
        	unsigned size
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        buff	PDAメモリに書き込むデータを格納しているバッファへのポインタ
        addr	書き込みたいメモリの先頭アドレス
        size	書き込みバイトサイズ(128バイト以内)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAのメモリへ、指定したアドレスから、指定したバイト数分だけ書き込
        みます。書き込み範囲が以下の領域以外の場所にかかっている場合また
        は仮想フラッシュメモリを設定しないで0x2****** のアドレスをアクセ
        スしようとするとPDAでバスエラーが発生してしまいますのでご注意くだ
        さい。
        
        書き込み可能な領域：0x0******, 0x6******, 0xA******
        		0xB******, 0xC******, 0xD******（******は任意の6桁16進値）
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした

=========================================================================
sceMcxSetUifs                                                      [関数]
=========================================================================
                                   ユーザ・インタフェース・ステータス更新
[形式]
        int sceMcxSetUifs(
        	int port,
        	int slot,
        	void *uifs
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        uifs	更新したいユーザ・インタフェース・ステータス内容を格納してい
        るバッファへのポインタ
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAのユーザインタフェースステータスを更新します。
        ユーザインタフェースステータスを受け渡しする構造体sceMcxTblUifsの
        うち以下のものが更新できます。これら以外は参照のみです。
        
         ・アラーム時刻（時）：０〜２３
         ・アラーム時刻（分）：０〜５９
         ・アラーム（ON/OFF）：０−OFF、1−ON
         ・キーロック：0−ロック解除、１−ロック
         ・スピーカ音量：０−大、1−小、2−切り
         ・RTC設定済み：0−データ無効、1−データ有効
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        
        

=========================================================================
sceMcxShowTrans                                                    [関数]
=========================================================================
                                                     データ転送中表示開始
[形式]
        int sceMcxShowTrans(
        	int port,
        	int slot,
        	int dir,
        	int timeout
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        dir	転送方向。(0：PDA→PlayStation、0以外：PlayStation→PDA)
        timeout	転送中表示終了要求が来ないときに、表示を解除するまでの時
        間
        	(起動アプリケーションでは1秒単位)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDAアプリケーションファイルを保存する場合は代替セクタ処理回避のた
        め(PDAプログラムを連続したメモリに保存するため)、ファイルオープン
        の前に呼びます。
        
        libmcのsceMcFormat()は代替セクタの初期化も行いますので、メモリー
        カードのフォーマット時にはsceMcxShowTrans()を呼ばないでください(
        代替セクタの初期化が出来ずにフォーマットが失敗してしまいます)。
        
        この関数が呼ばれると、現在実行中のPDAアプリケーションに対しPDAカ
        ーネルからの｢ファイル転送制御コールバック｣が発生します。PDAの｢ユ
        ーザーコールバック設定(swi 1)｣において「PlayStationからファイル転
        送中表示開始／終了設定時」に登録したサブルーチン内で必要に応じてP
        DAのLCD画面上にデータ転送中の旨を表示させます。タイムアウトの設定
        は"PlayStation 2"が不意にリセットされたときなどにPDAアプリケーシ
        ョン自身が転送中表示を解除するのためのものであり、正常状態におい
        ては、ファイル転送が終わったときにsceMcxHideTrans()を呼んで転送中
        表示を消去するようにします。（PDAアプリケーションで必要な処理の詳
        細に関しては「PDAカーネル仕様書」を参照してください。）
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
        

=========================================================================
sceMcxSync                                                         [関数]
=========================================================================
                                                     登録済み処理完了待ち
[形式]
        int sceMcxSync(
        	int mode,
        	int *cmd,
        	int *result
        )
        
[引数]
        mode	0: 登録された非同期関数の終了を待つ
        	1: 非同期関数の状態を調べてすぐに返る
        cmd	登録されている非同期関数の関数番号を格納する変数へのポインタ
        result	非同期関数の実行結果を格納する変数へのポインタ
        
[返り値]
        0:	非同期関数実行中
        1:	非同期関数終了
        -1:	登録無し
        
[解説]
        非同期関数の終了を調べます。
        
        関数番号はlibmcx.hで定義されています。
        
        sceMcxFuncGetInfo	1
        sceMcxFuncSetInfo	2
        sceMcxFuncGetMem	3
        sceMcxFuncSetMem	4
        sceMcxFuncShowTrans	5
        sceMcxFuncHideTrans	6
        sceMcxFuncReadDev	7
        sceMcxFuncWriteDev	8
        sceMcxFuncGetUIFS	9
        sceMcxFuncSetUIFS	10
        sceMcxFuncSetLED	11
        sceMcxFuncChgPrior	12
        

=========================================================================
sceMcxWriteDev                                                     [関数]
=========================================================================
                                          PDAデバイスエントリへの書き込み
[形式]
        int sceMcxWriteDev(
        	int port,
        	int slot,
        	int devno,
        	void *para,
        	unsigned parasize,
        	void *cont,
        	unsigned contsize
        )
        
[引数]
        port	ポート番号
        slot	スロット番号
        devno	デバイスエントリ番号
        para	固定部パラメータを格納しているバッファへのポインタ
        parasize	固定部パラメータのバイト長(デバイスエントリごとに固定)
        cont	可変部データをしているバッファへのポインタ
        contsize	可変部データのバイト長(128バイト以内)
        
[返り値]
        0:	処理が登録されました
        1以上:	実行中の関数番号(sceMcxFuncNo.....)が返ります
        	実行中の処理があったので登録できませんでした
        -1以下:	エラーが発生して登録できませんでした
        
[解説]
        PDA上に用意されている予約済みデバイス、およびユーザ定義デバイスへ
        の書き込みを行います。各デバイスに対し固定部パラメータを渡し、固
        定部パラメータによって要求される可変部データをさらに書き込みます。
        デバイスによっては固定部パラメータがないものもあります。
        
        ユーザ定義デバイスを呼び出すには、「PDAカーネル仕様書」の｢カーネ
        ルサービス概要：PlayStationとの通信：デバイスエントリコールバック
        ｣の項に従ってサブルーチンを作成し、メモリーカードファイルのヘッダ
        内にある｢デバイスエントリテーブル｣に登録しておく必要があります。
        
        予約済みデバイスとしては以下の3つがあります。(マクロはlibmcx.hで
        定義)
        
        +--------------------------------+------------+-------------+
        |デバイス名                       デバイス番号 マクロ       |
        +                                +            +             +
        |リアルタイムクロック             ０           sceMcxDevRtc |
        |PDAメモリ                        １           sceMcxDevMem |
        |ユーザーインタフェースステータス ２           sceMcxDevUIFS|
        +--------------------------------+------------+-------------+
        
        sceMcxSync() のresultに返る値：
        0:		成功
        -12:	PocketStationが検出できませんでした
