[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library  Release 1.5
                     Copyright (C) 2000 by Sony Computer Entertainment Inc.
                                                        All Rights Reserved
                                                                  Mar. 2000
                                   
暫定サウンドライブラリ for IOP  (libspu2,libsnd2)
=================================================


  新サウンドライブラリについて
-------------------------------
    暫定サウンドライブラリは、"PlayStation"(1)用サウンドライブラリを
    "PlayStation 2"に移植したものです。サウンドチップ付き開発機のご提供が遅れた
    ことから、過去の資産を継承して早期に開発を立ち上げていただくことを目的に
    作成しました。

    すでに、"PlayStaton 2"に最適化した新サウンドライブラリ（libsdおよびCSL）が
    リリースされています。今後は、機能強化は新ライブラリに対して行ない、暫定
    ライブラリはバグFIXのみとなります。新オーサリングツール（JAM)も、新ライ
    ブラリにのみ対応しています。宜しくご了承下さい


  概要
--------
    libspu2, libsnd2はI/O Processor上で動作するサウンドライブラリです。
    現行"PlayStation"用サウンドライブラリの全機能（CD関係を除く）を受け継い
    でいますので、各関数の仕様については現行"PlayStation"のドキュメントを参
    照して下さい。
    libspu2については、SPU2の新機能のために関数をいくつか追加しています。こ
    のドキュメントではその拡張部分についてのみ解説します。


  新関数
-----------
===========================================================================
SpuSetCore						    SPU2コアの設定
===========================================================================

[形式(IOP)]
	unsigned long SpuSetCore( unsigned long which_core )

[引数] 
	which_core	0,1のどちらかのコアを指定します。

[返値] 
	以前に指定されていたコア

[解説] 
	SPU2には、現行SPUに相当するコアが２つ搭載されています。このコマンド
	でコアを指定すると、以降のSPU制御コマンドはそのコアに対して行われま
	す。
	一度セットすると、次にセットするまでその設定は有効になっています。

===========================================================================
SpuGetCore					       現在のSPU2コアの取得
===========================================================================

[形式(IOP)] 
	unsigned long SpuGetCore( void )

[引数] 
	なし

[返値] 
	現在指定されているコア

[解説] 
	現在指定されているコアを取得します。

===========================================================================
SpuSetReverbEndAddr	                   リバーブエリア終端アドレスの設定
===========================================================================

[形式(IOP)]
	void SpuSetReverbEndAddr( unsigned long eea )

[引数] 
	eea	リバーブエリアの終端のアドレス

[返値] 
	なし

[解説] 
	SPUローカルメモリにおける、リバーブエリアの終端アドレスを指定します。
	エリアの開始点は、リバーブが必要とするサイズによって決定します。エ
	リアサイズは現行PlayStationと同様です。
	コア0とコア1でリバーブエリアが重ならないように設定すると、2系統のリ
	バーブを使用できます。
	リバーブエリアは128Kbyteバウンダリなので、終端アドレスは128Kbyteの
	倍数マイナス1(下位17bitがすべて1)である必要があります。

===========================================================================
SpuGetReverbEndAddr	                   リバーブエリア終端アドレスの取得
===========================================================================

[形式(IOP)]
	unsigned long SpuGetReverbEndAddr( void )

[引数] 
	なし

[返値] 
	リバーブエリアの終端のアドレス

[解説] 
	現在のリバーブエリアの終端のアドレスを取得します。

===========================================================================
SpuAutoDMAWrite	                      Auto DMAによるストレートPCM波形の再生
===========================================================================

[形式(IOP)]
	unsigned long SpuAutoDMAWrite(
		unsigned char *addr, 
		unsigned long size, 
		unsigned long mode[,
		unsigned char *start]
	)

[引数] 
	addr	再生する波形データのIOPメモリ上のアドレス
	size	再生する波形データのサイズ
	mode	再生モード。SPU_AUTODMA_ONESHOT or SPU_AUTODMA_LOOP
		SPU_AUTODMA_START_ADDR をビット論理和にて指定可。
	start	再生を開始する波形データのIOPメモリ上のアドレス
		(絶対アドレス指定。SPU_AUTODMA_START_ADDR 指定時のみ。
 		 []内は、指定しない場合省略可。)

[返値]
        0       start が (addr + size) の範囲外
		(SPU_AUTODMA_START_ADDR 指定時のみ)
	>0	再生するサイズ

[解説] 
	IOPメモリ上にあるストレートPCM波形を再生します。
	データ形式は、16bit, Little Endian, Signed のストレートPCMです。
	さらに現在の仕様では、左チャンネルと右チャンネルが512バイト毎にイン
	ターリーブされている必要があります。

	SPU_AUTODMA_ONESHOTを指定した場合、設定した範囲の波形データの演奏を
	1回だけ行います。終了後はSPU2内のバッファに残った波形データがループ
	再生されるので、これを止めるには、再生の終了を割り込みかポーリング
	で検出して、SpuAutoDMAStop()を実行します。

	SPU_AUTODMA_LOOPを指定した場合、設定した範囲の波形データを繰り返し
	演奏します。この場合、sizeは512の倍数である必要があります。

	SPU_AUTODMA_ONESHOT, SPU_AUTODMA_LOOP と合わせて mode にビット
	論理和にて SPU_AUTODMA_START_ADDR を指定した場合、第 4 引数 
	start を参照し、start の位置から再生を行います。start は addr 
	と size で指定された範囲内の絶対アドレスで指定します。

	SPU_AUTODMA_START_ADDR を指定しない場合、必要な引数は 3 つです。

===========================================================================
SpuAutoDMAStop		                        ストレートPCM波形の再生停止
===========================================================================

[形式(IOP)] 
	long  SpuAutoDMAStop(void)

[引数] 
	なし

[返値] 
	再生状態

[解説] 
	ストレートPCM波形の再生を停止させます。返り値は停止処理を行っ
	た時の再生状態を示し、SpuAutoDMAGetStatus() と同等の仕様です。

===========================================================================
SpuAutoDMAGetStatus	                                 Auto DMAの状態取得
===========================================================================

[形式(IOP)]
	long SpuAutoDMAGetStatus(void)

[引数] 
	なし

[返値] 
	再生状態

[解説] 
	波形の再生状態を取得します。0〜23bitが再生中のアドレス（IOPメモリ）
	を表します。SPU_AUTODMA_ONESHOTモードの場合、再生が終了するとゼロに
	なります。
	24bit目は再生中のバッファ番号で、SPU_AUTODMA_LOOP の場合のみ意味を
	持ちます。バッファの前半を再生中なら0、後半を再生中なら1を返します。

===========================================================================
SpuAutoDMASetCallback	               Auto DMAの割り込みコールバックの設定
===========================================================================

[形式(IOP)]
	SpuTransferCallbackProc  SpuAutoDMASetCallback(SpuTransferCallbackProc func)

[引数] 
	割り込みハンドラへのポインタ

[返値] 
	以前設定されていた割り込みハンドラへのポインタ

[解説] 
	AutoDMAの割り込みハンドラを設定します。
	SPU_AUTODMA_ONESHOTの場合は、設定したサイズの転送が終了したときに
	割り込みが入ります。
	SPU_AUTODMA_LOOPの場合は、転送サイズの中間点と終点で割り込みが入り
	ます。
	割り込みが入るのは、設定したサイズを”演奏したとき”ではありません。
	SPU2内の入力バッファへの”転送を行なったとき”になります。入力バッ
	ファは1チャンネルあたり512バイトです。

===========================================================================
SpuStSetCore		                ストリーミングで使用するコアの設定
===========================================================================

[形式(IOP)]
	unsigned long SpuStSetCore( unsigned long which_core )

[引数] 
	which_core	0,1のどちらかのコアを指定します。

[返値] 
	以前に指定されていたコア

[解説] 
	ストリーミングで使用するボイスのコアを指定します。ストリーミングを
	行なう前に、必ず設定してください。一度設定すると、その値は再度セッ
	トするまで有効です。


===========================================================================
SpuSetAutoDMAAttr        	                          AutoDMAの属性設定
===========================================================================

[形式] 
	void SpuSetAutoDMAAttr( 
		short vol_l,
		short vol_r, 
		short dry_on, 
		short effect_on 
	)

[引数] 
	vol_l			AutoDMA入力のボリューム（左）
	vol_r	  		AutoDMA入力のボリューム（右）
	dry_on			ドライ（エフェクト無し側）に出力するかどうか
	effect_on		エフェクトに出力するかどうか

[返値] 
	なし

[解説] 
	vol_l, vol_r に指定する数値は 0x0〜0x7fffで、負の値は位相が反転します。
	dry_on=SPU_ON, effect_on=SPU_OFF でエフェクト無しの通常出力、
	dry_on=SPU_ON, effect_on=SPU_ON でエフェクト付き出力になります。
	dry_on=SPU_OFF, effect_on=SPU_OFF の時は何も出力されません。

===========================================================================
SpuSetSerialInAttr	                            シリアル入力の属性設定
===========================================================================

[形式] 
	void SpuSetSerialInAttr(
		short dry_on, 
		short effect_on 
	)

[引数] 
	dry_on			ドライ（エフェクト無し側）に出力するかどうか
	effect_on		エフェクトに出力するかどうか

[返値] 
	なし

[解説] 
	コア0の出力は、必ずコア1を経由しています。このAPIでは、コア0出力がコア1に
	入力される時の属性を設定します。
	コア1側のみで有効なので、SpuSetCore()の設定は無視されます。

	dry_on=SPU_ON, effect_on=SPU_ON の時：
		コア1のエフェクトがコア0の出力にもかかります。
	dry_on=SPU_ON, effect_on=SPU_OFF の時：
		コア1のエフェクトはコア0の出力にはかかりません。
	dry_on=SPU_OFF, effect_on=SPU_OFF の時：
		コア0の出力はコア1に入力されないので、発音されません。

===========================================================================
SpuGetNextAddr  	                       次の波形データアドレスを取得
===========================================================================

[形式] 
	unsigned long  SpuGetNextAddr(
		int vNum
	)

[引数] 
	vNum			ボイス番号（0〜23）

[返値] 
	次に読みこまれる波形データのアドレス

[解説] 
	波形データの中で、次に読み込まれる波形データのアドレスが示されるレ
	ジスタです。
	ピッチが0x1000でかつループ先頭ではない時、このアドレスの2バイト前が
	現在発音中のアドレスになります。（CPU処理の遅れが無いとして）

===========================================================================
SpuSetDigitalOut		                        デジタル出力の設定
===========================================================================

[形式] 
	void SpuSetDigitalOut( 
		int 	mode 
	)

[引数] 
	mode			デジタル出力のモード

[返値] 
	なし

[解説] 

	デジタル出力（S/PDIF）の設定を行ないます。
	
	modeにSPU_SPDIF_OUT_* と SPU_SPDIF_COPY_* との論理和を設定します。

	SPU_SPDIF_OUT_OFF	SPDIFに何も出力しない
	SPU_SPDIF_OUT_PCM	アナログと同じ音をPCMで出力（デフォルト）
	SPU_SPDIF_OUT_BITSTREAM  Core1の入力ブロックに入力されたデータを、
				ビットストリームとして出力する

	SPU_SPDIF_COPY_NORMAL    通常モード（１世代録音可・デフォルト）
	SPU_SPDIF_COPY_PROHIBIT  デジタル録音禁止
        SPU_SPDIF_MEDIA_CD       メディアがCD
        SPU_SPDIF_MEDIA_DVD      メディアがDVD

	このAPIはコアに依存せず、どちらのコアで設定しても両方のコアの設定に
	なります。


  コアについて
----------------
    SPU2は48ボイス使用可能ですが、libspu2およびlibsnd2は旧ライブラリベース
    の暫定版であるため、48ボイスをリニアに扱うことはできません。コア(0 また
    は 1)をまず指定し、それに対してボイスやリバーブの設定を行なう仕様になっ
    ています。最後に指定したコアが、以後のコマンドに対して有効になります。

    基本的に、コマンドはどちらのコアでも実行でき、2つのコアに別々の設定を
    することができます。例外はlibsnd2のシーケンス再生関係で、2つのコアで別
    々のシーケンスを同時に演奏させることはできません。また、DMA/AutoDMA転送
    関係ではコア設定は無視され、DMA（SPUメモリへの転送）はコア1、AutoDMA
   （ストレートPCM用バッファへの転送）はコア0で常に実行されています。

    後日リリースの正式ライブラリでは、これらの問題点は解消されます。


  制限事項
------------
  - 現在の開発環境は、実機よりもクロック周波数が低い(約2/3)ため、SPU2から
    出力されるピッチも約2/3になります。

  - 現在のところ、seq再生ではNOTICKモードしか使用できません。

  - ストレートPCMの出力およびデジタル出力には、現在のところ対応していません。

  - libsndで使用するVABのBodyを、ローカルメモリの1MByte境界をまたいで配置す
    ることが出来ません。またがなければ、1MByte以上の領域に配置することは可
    能です。これはVABのデータフォーマットに由来する制限です。


