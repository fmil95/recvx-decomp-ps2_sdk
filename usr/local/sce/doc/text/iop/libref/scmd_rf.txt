[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C)  2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

                               SIF Command
                              ============


 1 構造体
==========

=========================================================================
sceSifCmdData                                                    [構造体]
=========================================================================
                                                   コマンド関数登録データ
[構造]
        typedef struct {
        	sceSifCmdHandler	func;
        	void	*data;
        } sceSifCmdData;
        
[メンバ]
        func	コマンド関数
        data	関数が実行時に引数として渡されるデータのアドレス
        
[解説]
        コマンド関数を登録する際のデータ構造です。
        

=========================================================================
sceSifCmdHandler                                                 [構造体]
=========================================================================
                                                             コマンド関数
[構造]
        typedef void (* sceSifCmdHandler)(void *pkt,	void *data)
        
[メンバ]
        pkt	sceSifSendCmd() で指定されたコマンドパケットのコピーのアドレ
        ス
        data	sceSifAddCmdHandler でコマンド関数とともに登録したデータアド
        レス
        
[解説]
        この関数は、sceSifSendCmd() によって起される DMA 割り込み内で実行
        されるものです。その際、送り手のコマンドパケットと受け手の指定デ
        ータのアドレスが引数として渡されます。
        

=========================================================================
sceSifCmdHdr                                                     [構造体]
=========================================================================
                                                   コマンドパケットヘッダ
[構造]
        typedef  struct {
        	unsigned int	psize:8;
        	unsigned int	dsize:24;
        	unsigned int	daddr;
          	unsigned int	fcode;
        	unsigned int	opt;
        } sceSifCmdHdr;
        
[メンバ]
        psize	このヘッダを含むコマンドパケットのサイズ(16以上112以下)
        dsize	パケットといっしょに送る、付随データの大きさ
        daddr	付随データのアドレス
        fcode	呼び出されるコマンド関数の番号
        opt	プログラマが使用してよいデータ領域
        
[解説]
        コマンドパケットは、このデータ構造を先頭に持つ最大112バイトのデー
        タです。
        

=========================================================================
sceSifCmdSRData                                                  [構造体]
=========================================================================
                                         ソフトウェアレジスタ変更パケット
[構造]
        typedef struct {
        	sceSifCmdHdr	chdr;
        	int		rno;
        	unsigned int	value;
        } sceSifCmdSRData;
        
[メンバ]
        chdr	コマンドパケットヘッダ
        rno	ソフトウェアレジスタ番号(0〜31)
        value	設定値
        
[解説]
        SIF Command API システムは32bit×32個の配列（ソフトウェアレジスタ）
        を持っています。0〜7番はシステム用ですが、残りはユーザプログラム
        で使用することができ、そのための関数もデフォルトで登録されていま
        す。
        相手側のソフトウェアレジスタを設定する際には、この構造体を使って
        次のようにします（相手側の31番レジスタを0xffに設定する例）。
        
        sceSifCmdSRData d;
        
        d.rno = 31;
        d.value = 0xff;
        sceSifSendData(SIF_CMDC_SET_SREG,&d,sizeof(d),0,0,0);
        
        なお、自分側のソフトウェアレジスタの値を取得・設定するためには、s
        ceSifGetSreg()/sceSifSetSreg() を使用します。
        
[関連項目]
        sceSifGetSreg(),sceSifSetSreg()
        

 2 関数
========


=========================================================================
sceSifAddCmdHandler                                                [関数]
=========================================================================
                                                       コマンド関数の登録
[形式]
        void  sceSifAddCmdHandler(
        	unsigned int   pos,
        	sceSifCmdHandler  f,
        	void   *data
        )
        
[引数]
        pos	コマンド関数を登録するバッファの位置
        f	登録するコマンド関数
        data	コマンド関数f に渡されるデータのアドレス
        
[返り値]
        なし
        
[解説]
        sceSifSetCmdBuffer() で登録したバッファに、コマンドパケット呼出時
        に呼び出される関数（コマンド関数）を登録します。
        この関数は、割り込み禁止領域で呼んでください。
        
[備考]
        コマンド関数は割り込みハンドラとして実行されるため、プログラミン
        グに際していくつか特別な注意が必要です。割り込みハンドラの記述に
        ついて、\overview\eekernelに注意事項が記載されていますので参照し
        てください。

=========================================================================
sceSifExitCmd                                                      [関数]
=========================================================================
                                                   SIF Command API の終了
[形式]
        void  sceSifExitCmd(void)
        
[引数]
        なし
        
[返り値]
        なし
        
[解説]
        sceSifInitCmd() で登録した割り込み関数をはずします。
        EE でオブジェクトの遷移を行い、その先で SIF Command API を使用す
        る場合は、この関数で割り込み関数をはずし、遷移先で新たにsceSifIni
        tCmd() を呼ばなければなりません。
        

=========================================================================
sceSifGetSreg                                                      [関数]
=========================================================================
                                         ソフトウェアレジスタの内容の取得
[形式]
        unsigned int 	sceSifGetSreg(int no)
        
[引数]
        no	レジスタ番号（0〜31）
        
[返り値]
        レジスタの内容
        
[解説]
        自分側のソフトウェアレジスタの値を取得します。
        	ソフトウェアレジスタの初期値は0です。
        

=========================================================================
sceSifInitCmd                                                      [関数]
=========================================================================
                                                 SIF Command API の初期化
[形式]
        void  sceSifInitCmd(void)
        
[引数]
        なし
        
[返り値]
        なし
        
[解説]
        SIF Command API の初期化を行います。内部変数の初期化と、コマンド
        を処理するための割り込み関数の登録を行います。
        最初に呼ばれる sceSifInitCmd() は、EE/IOP 相互に同期をとるため、
        相手側で呼ばれるまでこの関数内で待ちに入ります。
        

=========================================================================
sceSifRemoveCmdHandler                                             [関数]
=========================================================================
                                                       コマンド関数の削除
[形式]
        void  sceSifRemoveCmdHandler(unsigned int  pos)
        
[引数]
        pos	削除するバッファの位置
        
[返り値]
        なし
        
[解説]
        pos に登録された関数を削除します。
        

=========================================================================
sceSifSendCmd                                                      [関数]
=========================================================================
                                                   コマンドパケットの送出
[形式]
        unsigned int  sceSifSendCmd(
        	unsigned int  pos,
        	void  *cp,
        	int  ps,
        	void  *src,
        	void *dest,
        	int  size
        )
        
[引数]
        pos	呼び出す関数の位置(sceSifAddCmdHandler()で登録した位置)
        cp	コマンド(コマンドパケット)のアドレス
        ps	コマンドパケットのサイズ(byte)(16以上112バイト以下)
        src	一緒に送るデータ（付随データ）のアドレス
        dest	付随データを送る相手側のアドレス
        size	付随データのサイズ(byte)
        
[返り値]
        使用した sceSifSetDma() のキューイング識別子
        0	キューイング失敗
        0以外	キューイング識別子
        
[解説]
        sceSifSetDma()を用いてコマンドパケットを送り、相手側の pos の位置
        に	登録されているコマンド関数を呼び出します。
        コマンドが相手側に届いたかどうかは、返値と sceSifDmaStat() によっ
        て	判断できます。
        cp/src/dest は、EE 側は 16バイト、IOP側は 4バイトでアラインされた
        アドレスに置いてください。size は、EE の場合16バイト、IOPの場合4
        バイトの倍数です。
        EE の場合、cp は キャッシュ上にあれば write-back されますが、src
        はされませんので、プログラマの責任でキャッシュ上から吐き出して	お
        いてください。
        割り込み関数内では、isceSendCmd() を呼んでください(EE/IOPとも)。
        
[備考]
        size の上限は、１回で送れる DMA の上限 1Mbyte - 16byte です。
        

=========================================================================
sceSifSetCmdBuffer                                                 [関数]
=========================================================================
                                             コマンド関数用バッファの登録
[形式]
        sceSifCmdData * sceSifSetCmdBuffer(
        	sceSifCmdData *db,
        	int   size
        )
        
[引数]
        db	バッファの先頭アドレス
        size	バッファのサイズ
        
[返り値]
        以前に登録されていた、バッファのアドレス
        
[解説]
        SIF Command API によって起動する関数（コマンド関数）を登録するた
        めのバッファを設定します。初期状態では、バッファの設定はありませ
        ん。
        この関数は、割り込み禁止領域で呼んでください。
        

=========================================================================
sceSifSetSreg                                                      [関数]
=========================================================================
                                         ソフトウェアレジスタの内容の設定
[形式]
        unsigned int 	sceSifSetSreg(
        	 int 	no,
        	unsigned int 	value
        )
        
[引数]
        no	レジスタ番号（0〜31）
        value	レジスタに設定する値
        
[返り値]
        設定した値
        
[解説]
        自分側のソフトウェアレジスタに指定値を設定します。
