[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C)  2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

                      DECI2 ライブラリリファレンス
                     =============================


 1 関数
========

=========================================================================
sceDeci2Open                                                       [関数]
=========================================================================
                                                 プロトコルドライバの登録
[形式]
        int sceDeci2Open(
        	unsigned short protocol,
        	void *opt,
        	void (*handler)(int event, int param, void *opt)
        )
        
[引数]
        protocol		プロトコル番号
        opt	イベントハンドラに通知される、プロトコルドライバ毎に設定自由
        なデータへのポインタ
        handler		イベントが通知されるハンドラ
        
[返り値]
        1 以上	ソケットディスクリプタ
        -1 以下	エラーコード(INVALID、ALREADYUSE、MFILE)
        
[解説]
        使用したいプロトコル番号を指定してプロトコルドライバを登録します。
        ここで返されたソケットディスクリプタは、以後の関数呼び出しの際に
        使用します。
        イベントハンドラ内から呼び出されるすべての関数とそれ以外の関数で
        共通の変数を使用したい場合は、グローバル変数は使用せずに、必ず op
        t を使用して変数をイベントハンドラに渡すようにしてください。
        
        イベントハンドラに通知されるイベントには、以下のものがあります。
        
        	DECI2_READ		1
        	DECI2_READDONE	2
        	DECI2_WRITE		3
        	DECI2_WRITEDONE	4
        	DECI2_CHSTATUS	5
        	DECI2_ERROR		6
        
        DECI2_READ イベントは、パケットを初めて受信してから、プロトコルド
        ライバがすべてのパケットデータを受信し終わるまで発生します。1 パ
        ケットの受信が終了すると、DECI2_READDONE イベントが発生します。
        
        DECI2_WRITE イベントは、プロトコルドライバからの送信要求を DECI2
        Manager が受けとって実際に送信できる状態になったときに発生します。
        1 パケットの送信が終了すると、DECI2_WRITEDONE イベントが発生しま
        す。
        
        DECI2_CHSTATUS と DECI2_ERROR イベントは、プロトコルドライバに通
        知すべきDCMP のステータス、エラーメッセージがある場合に発生します。
        
        イベントハンドラには、イベントの種類とイベント毎に異なる一つのパ
        ラメータ、そしてプロトコルドライバが設定したデータへのポインタが
        渡されます。パラメータの詳細は、以下のとおりです。
        
        	DECI2_READ:		到着したパケットの断片のサイズ
        	DECI2_READDONE:	0
        	DECI2_WRITE:		0
        	DECI2_WRITEDONE:	0
        	DECI2_CHSTATUS:	DCMP ステータスメッセージへのポインタ
        	DECI2_ERROR:		DCMP エラーメッセージへのポインタ
        

=========================================================================
sceDeci2Close                                                      [関数]
=========================================================================
                                                 プロトコルドライバの削除
[形式]
        int sceDeci2Close(
        	int s
        )
        
[引数]
        s	ソケットディスクリプタ
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK)
        
[解説]
        プロトコルドライバを削除します。
        

=========================================================================
sceDeci2ExLock                                                     [関数]
=========================================================================
                                                   他のプロトコルのロック
[形式]
        int sceDeci2ExLock(
        	int s
        )
        
[引数]
        s	ソケットディスクリプタ
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、ALREADYLOCK)
        
[解説]
        この要求を行うプロトコルドライバが使用しているプロトコル以外をロ
        ックします。
        

=========================================================================
sceDeci2ExUnLock                                                   [関数]
=========================================================================
                                                             ロックの解除
[形式]
        int sceDeci2ExUnLock(
        	int s
        )
        
[引数]
        s	ソケットディスクリプタ
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、NOTLOCKED)
        
[解説]
        ロックを解除します。
        

=========================================================================
sceDeci2ExRecv                                                     [関数]
=========================================================================
                                                     DECI2 パケットの受信
[形式]
        int sceDeci2ExRecv(
        	int s,
        	void *buf,
        	unsigned short len
        )
        
[引数]
        s	ソケットディスクリプタ
        buf	バッファへのポインタ
        len	受信するデータのサイズ
        
[返り値]
        1 以上	受信したデータのサイズ
        -1 以下	エラーコード(INVALSOCK、INVALADDR、PKTSIZE、WOULDBLOCK)
        
[解説]
        この関数は、DECI2_READ イベントが通知された時のみ呼び出し可能です。
        それ以外の時に呼び出すと WOULDBLOCK エラーとなります。
        
        DECI2_READ イベント は、プロトコルドライバに渡す必要のあるパケッ
        トの断片が到着する度に発行され、1 パケット分のデータすべてをこの
        関数で読み終えるまで何度も発行されます。1 パケット分すべてのデー
        タを読み終えたときには、DECI2_READDONE イベントが発生します。
        
        DECI2_READ イベント発生時には実際の受信は行われず、この関数で読み
        込むバッファを指示してはじめて読み込みが開始されます。
        
        DECI2_READ イベントのパラメータとしては、到着したパケットの断片の
        サイズが渡されます(パケットの最後の断片の場合は 4の倍数に切り上げ
        られることがあります)。
        
        len には、パラメーターして通知されたサイズよりも小さいサイズを指
        定することができます。その場合、DECI2_READ イベントがもう一度発生
        します。小さいサイズを指定するは 128 の倍数である必要があります。
        
        EE 上では、buf は 16 バイト境界にアラインされていなければなりませ
        ん。
        

=========================================================================
sceDeci2ExSend                                                     [関数]
=========================================================================
                                                     DECI2 パケットの送信
[形式]
        int sceDeci2ExSend(
        	int s,
        	void *buf,
        	unsigned short len
        )
        
[引数]
        s	ソケットディスクリプタ
        buf	バッファへのポインタ
        len	送信するデータのサイズ
        
[返り値]
        1 以上	DECI2 Manager が受け付けたデータのサイズ(送信したものでは
        ない)
        -1 以下	エラーコード(INVALSOCK、INVALADDR、PKTSIZE、WOULDBLOCK)
        
[解説]
        この関数は、DECI2_WRITE イベントが通知された時のみ呼び出し可能で
        す。
        それ以外の時に呼び出すと WOULDBLOCK エラーとなります。
        
        DECI2_WRITE イベントは、sceDeci2ReqSend()の発行を受けて送信可能な
        状態になったときに発生します。1 パケット分のすべてのデータを受付
        て送信し終わったときには WRITEDONE イベントが発生します。
        
        len には、実際に送信するパケットのサイズよりも小さいサイズを指定
        できます。その場合は、もう一度 DECI2_WRITE イベントが発生します。
        ただし、一回目の呼び出しでは、DECI2 ヘッダよりも小さなサイズを le
        n に指定することはできません(PKTSIZE エラーとなります)。
        
        返値には、DECI2 Manager が受け付けたデータのサイズを返します。た
        だし、次の DECI2_WRITE か、DECI2_WRITEDONE イベントが発生するまで
        は、送信が完了していない可能性があるので、データは保持しておかな
        ければなりません。
        
        EE 上では、buf は 16 バイト境界にアラインされていなければなりませ
        ん。
        

=========================================================================
sceDeci2ReqSend                                                    [関数]
=========================================================================
                                               DECI2_WRITE イベントの要求
[形式]
        int sceDeci2ReqSend(
        	int s,
        	char dest
        )
        
[引数]
        s	ソケットディスクリプタ
        dest	パケットの送信先ノード
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、WOULDBLOCK、NOROUTE)
        
[解説]
        1 パケット分のデータ送信を DECI2 Manager に要求します。この呼び出
        しを受けて DECI2 Mnager が送信可能な状態になったときに DECI2_WRIT
        E イベントが発生します。
        
        この関数を呼び出して戻ってくるよりも先に DECI2_WRITE イベントが発
        生する可能性があるので、送信データがそろってから呼び出す必要があ
        ります。
        
        EE 上では、複数回呼び出せますが、その回数だけの DECI2_WRITE イベ
        ントが発生します。IOP 上では、複数回連続して送信要求を出すことは
        できません。
        

=========================================================================
sceDeci2ExReqSend                                                  [関数]
=========================================================================
                                               DECI2_WRITE イベントの要求
[形式]
        int sceDeci2ExReqSend(
        	int s,
        	char dest
        )
        
[引数]
        s	ソケットディスクリプタ
        dest	パケットの送信先ノード
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、WOULDBLOCK、NOROUTE)
        
[解説]
        イベントハンドラ中で、DECI2 Manager にデータ送信を要求するために
        使用します。
        

=========================================================================
sceDeci2ExWakeupThread                                             [関数]
=========================================================================
                                     スリープ中のスレッドの起床 (IOPのみ)
[形式]
        int sceDeci2ExWakeupThread(
        	int s,
        	int thid
        )
        
[引数]
        s	ソケットディスクリプタ
        thid	起床するスレッドID
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、INVALID)
        
[解説]
        イベントハンドラ中で、スリープ状態のスレッドを起床するために使用
        します。
        同一のソケットで、sceDeci2ExSignalSema()、sceDeci2ExSetEventFlag()
         と混在して使用することはできません。
        また、同一のソケットで、複数のスレッドを起床することもできません。
        特定のソケットでは常に単一のスレッドを指定するようにしてください
        

=========================================================================
sceDeci2ExSignalSema                                               [関数]
=========================================================================
                                       セマフォへのシグナル発行 (IOPのみ)
[形式]
        int sceDeci2ExSignalSema(
        	int s,
        	int semid
        )
        
[引数]
        s	ソケットディスクリプタ
        semid	シグナルを送るセマフォID
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、INVALID)
        
[解説]
        イベントハンドラ中で、セマフォにシグナルを送るために使用します。
        同一のソケットで、sceDeci2ExWakeupThread()、sceDeci2ExSetEventFla
        g() と混在して使用することはできません。
        また、同一のソケットで、複数のセマフォを扱うこともできません。
        特定のソケットには常に単一のセマフォを使用してください。
        

=========================================================================
sceDeci2ExSetEventFlag                                             [関数]
=========================================================================
                                         イベントフラグのセット (IOPのみ)
[形式]
        int sceDeci2ExSetEventFlag(
        	int s,
        	int evfid,
        	unsigned long bitpattern
        )
        
[引数]
        s	 　ソケットディスクリプタ
        evfid	 　イベントフラグID
        bitpattern　セットするビットパターン
        
[返り値]
        1	成功
        -1 以下	エラーコード(INVALSOCK、INVALID)
        
[解説]
        イベントハンドラ中で、イベントフラグをセットするために使用します。
        同一のソケットで、sceDeci2ExWakeupThread()、sceDeci2ExSignalSema()
        と混在して使用することはできません。
        また、同一のソケットで、複数のイベントフラグをセットすることもで
        きません。
        特定のソケットには常に単一のイベントフラグを使用してください。
        

=========================================================================
sceDeci2ExPanic                                                    [関数]
=========================================================================
                                イベントハンドラ内からの printf (IOPのみ)
[形式]
        int sceDeci2ExPanic(
        	const char *format, ...
        )
        
[引数]
        format	出力書式文字列(printfと同一)
        
[返り値]
        出力した文字数
        
[解説]
        イベントハンドラ中から呼ぶための printf 相当の関数です。
        イベントハンドラ外から呼ぶことも可能です。
        sceDeci2ExPanic() で出力した文字列は、Host 側の dscomp コマンドで
        表示されます。
