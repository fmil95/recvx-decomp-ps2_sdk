<HTML>
<HEAD>
  <META NAME="GENERATOR" CONTENT="Adobe PageMill 3.0J Win">
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=x-sjis">
  <TITLE>arm1_6</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffff">

<P><A HREF="arm_gtoc.htm">[総目次]</A> <A HREF="arm100.htm">[章目次]</A>
<A HREF="arm105.htm">[前]</A> <A HREF="arm107.htm">[次]</A> <A 
HREF="arm_inde.htm">[インデックス]</A></P>

<H2><FONT COLOR="#996633">ARM Architecture Reference Manual</FONT><BR>
<HR ALIGN=LEFT></H2>

<H3>1.6 <A NAME="anchor1448106"></A>ロードおよびストア命令</H3>

<BLOCKQUOTE>
  <P>ロードおよびストア命令は、以下の3つのタイプに分類されます。</P>
  <OL>
    <LI>1つのレジスタの値をロードまたはストアする命令
    <LI>複数のレジスタの値をロードおよびストアする命令
    <LI>レジスタの値をメモリ・ロケーションの値とスワップする命令
  </OL>
  <H5>単一レジスタのロードとストア</H5>
  <P>レジスタのロード命令は、32ビット・<A NAME="anchor541102"></A>ワード、16ビット・ハーフワード、または8ビット・<A
  NAME="anchor2896263"></A>バイトを、メモリからレジスタにロードすることができます。バイトおよびハーフワードのロードは、ロード時に自動的に<A
  NAME="anchor544081"></A>ゼロ拡張または<A NAME="anchor76248"></A>符号拡張することができます。</P>
  <P>レジスタのストア命令は、32ビット・ワード、16ビット・<A NAME="anchor3601545"></A>ハーフワード、または8ビット・バイトを、レジスタからメモリにストアすることができます。</P>
  <P>ロードおよびストア命令には、以下に示す3つの基本アドレッシング・モードがあり、これらのモードは、ベース・レジスタにイミディエイト値またはレジスタ・ベースのオフセットを加算または減算することによって形成されます（レジスタ・ベースのオフセットは、シフト操作によってスケールすることもできます）。</P>
  <BLOCKQUOTE>
    <OL>
      <LI><A NAME="anchor1464791"></A>オフセット
      <LI><A NAME="anchor1466590"></A>プリインデックス
      <LI><A NAME="anchor1467605"></A>ポストインデックス
    </OL>
  </BLOCKQUOTE>
  <P>プリインデックスおよびポストインデックス・アドレッシング・モードでは、ベースにオフセットを加算してベース・レジスタを更新します。プログラム・カウンタ（PC）は汎用レジスタであるため、32ビット値を直接PCにロードして、4ギガバイト・メモリ空間の任意のアドレスに<A
  NAME="anchor4094365"></A>ジャンプすることができます。</P>
  <H5>複数のレジスタのロードとストア</H5>
  <P>ロードおよびストア・マルチプル命令は、任意の数の汎用レジスタとメモリの間で、ブロック転送を実行します。以下の4つのアドレッシング・モードがあります。</P>
  <BLOCKQUOTE>
    <OL>
      <LI><A NAME="anchor1506700"></A>プリインクリメント
      <LI><A NAME="anchor1501051"></A>ポストインクリメント
      <LI><A NAME="anchor1506183"></A>プリデクリメント
      <LI><A NAME="anchor1505085"></A>ポストデクリメント
    </OL>
  </BLOCKQUOTE>
  <P><A NAME="anchor1525372"></A>ベース・アドレスはレジスタ値で指定されます（レジスタ値は、転送後にオプションで更新できます）。サブルーチンの<A
  NAME="anchor344046"></A>リターン・アドレスとプログラム・カウンタ（PC）の値が汎用レジスタにあるため、Load
  and Store Multiple命令では、非常に効率的に<A NAME="anchor332924"></A>サブルーチン・コールとリターンを処理することができます。プロシージャ・エントリ時に1つのStore
  Multiple命令を実行してレジスタの内容とリターン・アドレスをスタックに入れ、スタック・ポインタを更新し、プロシージャ・リターン時に1つのLoad
  Multiple命令によってレジスタの内容をリストアし、PCにリターン・アドレスをロードして、スタック・ポインタを更新します。</P>
  <P>Load and Store Multiple命令を使って、非常に効率的なデータ移動（たとえば、ブロックのコピーなど）を行うこともできます。</P>
  <H5><A NAME="anchor377750"></A>レジスタ値とメモリ・ロケーション値のスワップ</H5>
  <P>スワップにより、レジスタ指定メモリ・ロケーションから値をロードし、レジスタの内容を同じメモリ・ロケーションにストアしてから、ロードした値をレジスタに書き込むことができます。</P>
  <P>ロードおよびストア値として同じレジスタを指定することによって、メモリ・ロケーションとレジスタの内容が交換されます。</P>
  <P>スワップ・オペレーションでは、<A NAME="anchor2121294"></A>セマフォのアトミックな更新が可能な、特別な<A
  NAME="anchor3766477"></A>不可分バス・オペレーションを実行します。32ビット・ワードと8ビット・バイトの<A
  NAME="anchor2122038"></A>セマフォの両方がサポートされています。<BR>
  </P>
</BLOCKQUOTE>

<P><HR ALIGN=LEFT><BR>
<A HREF="arm_gtoc.htm">[総目次]</A> <A HREF="arm100.htm">[章目次]</A>
<A HREF="arm105.htm">[前]</A> <A HREF="arm107.htm">[次]</A> <A 
HREF="arm_inde.htm">[インデックス]</A>

</BODY>
</HTML>
