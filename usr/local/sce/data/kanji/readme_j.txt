[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library Release 2.0
                  Copyright (C) 2000 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved
                                                               Aug. 2000

========================================================================
漢字フォント（4bit 16階調）データ
------------------------------------------------------------------------
1. 漢字フォント概要
--------------------

1.1 概要

 今回、提供させて頂くフォントは
 
 sce20i22.gf
 sce24i26.gf

 の２種類です(管理画面で使用されているフォントと同じです)。
 まずは、以下に詳細を示します。

 ========================================================================
 書体	平成角ゴシック  注１）
 JIS系	全角            非漢字		524文字
 			第一水準	2965文字
 			第二水準	3390文字
 JIS外	全角,半角       外字		604文字
 フォントサイズ		24x26, 20x22(更に横２ドットをマージンとして確保）
 格納フォントサイズ	26x26, 22x22
 格納形式               IDTEX4
 Clut			gf ファイルには含まれない
 ========================================================================

注１）
書体名称：  平成角ゴシック体(TM)W5
この書体は（財）日本規格協会と使用許諾契約を締結して使用しているものです。
"PlayStaion 2" 向けタイトル開発以外の目的でフォントとして無断複製すること
は禁止されています。

1.2 gf のファイルフォーマットについて

 gf ファイルには IDTEX4 の形式で 26x26, 22x22 のフォントがそのまま格納されてい
 ます。ヘッダ等も特にありませんので、そのまま、お使い下さい。

1.3 フォントデータについて

 フォントデータは JIS コードを元に作成されている為、0x2121〜0x217e 等の９４文
 字を１区間として９４区を収録、つまり、未定義域のダミーも含めて８８３６文字(９
 ４文字 * ９４区)分のフォントが収録されています。

 =================================================================
 １区に対応する JIS コード(0x2121〜0x217e)

  21 20 |    　 、 。 ， ． ・ ： ； ？ ！ ゛ ゜ ´ ｀ ¨ 
  21 30 | ＾ ￣ ＿ ヽ ヾ ゝ ゞ 〃 仝 々 〆 〇 ー ― ‐ ／ 
  21 40 | ＼ 〜 ‖ ｜ … ‥ ‘ ’ “ ” （ ） 〔 〕 ［ ］ 
  21 50 | ｛ ｝ 〈 〉 《 》 「 」 『 』 【 】 ＋ − ± × 
  21 60 | ÷ ＝ ≠ ＜ ＞ ≦ ≧ ∞ ∴ ♂ ♀ ° ′ ″ ℃ ￥ 
  21 70 | ＄ ¢ £ ％ ＃ ＆ ＊ ＠ § ☆ ★ ○ ● ◎ ◇    

 ２区に対応する JIS コード(0x2221〜0x227e)

  22 20 |    ◆ □ ■ △ ▲ ▽ ▼ ※ 〒 → ← ↑ ↓ 〓    
  22 30 |                               ∈ ∋ ⊆ ⊇ ⊂ ⊃ 
  22 40 | ∪ ∩                         ∧ ∨ ¬ ⇒ ⇔ ∀ 
  22 50 | ∃                                  ∠ ⊥ ⌒ ∂ 
  22 60 | ∇ ≡ ≒ ≪ ≫ √ ∽ ∝ ∵ ∫ ∬                
  22 70 |       Å ‰ ♯ ♭ ♪ † ‡ ¶             ◯    
  .
  .
  .

 =================================================================

 なお、１区間を単位として登録されている為、n区の最後とn+1区の最初のコードは
 連続して格納されます。具体的には以下の通りです。

 １６区の最後(0x317e:蔭)と１７区の最初(0x3221:院)が連続して格納されています。
 (0x307f〜0x3121の間に空白等は用意されていません)

 JIS code

  30 20 |    亜 唖 娃 阿 哀 愛 挨 姶 逢 葵 茜 穐 悪 握 渥 
  30 30 | 旭 葦 芦 鯵 梓 圧 斡 扱 宛 姐 虻 飴 絢 綾 鮎 或 
  30 40 | 粟 袷 安 庵 按 暗 案 闇 鞍 杏 以 伊 位 依 偉 囲 
  30 50 | 夷 委 威 尉 惟 意 慰 易 椅 為 畏 異 移 維 緯 胃 
  30 60 | 萎 衣 謂 違 遺 医 井 亥 域 育 郁 磯 一 壱 溢 逸 
  30 70 | 稲 茨 芋 鰯 允 印 咽 員 因 姻 引 飲 淫 胤 蔭    
  31 20 |    院 陰 隠 韻 吋 右 宇 烏 羽 迂 雨 卯 鵜 窺 丑 
  31 30 | 碓 臼 渦 嘘 唄 欝 蔚 鰻 姥 厩 浦 瓜 閏 噂 云 運 
  31 40 | 雲 荏 餌 叡 営 嬰 影 映 曳 栄 永 泳 洩 瑛 盈 穎 
  31 50 | 頴 英 衛 詠 鋭 液 疫 益 駅 悦 謁 越 閲 榎 厭 円 
  31 60 | 園 堰 奄 宴 延 怨 掩 援 沿 演 炎 焔 煙 燕 猿 縁 
  31 70 | 艶 苑 薗 遠 鉛 鴛 塩 於 汚 甥 凹 央 奥 往 応    

 gf フォントイメージ

          亜 唖 娃 阿 哀 愛 挨 姶 逢 葵 茜 穐 悪 握 渥 旭
          葦 芦 鯵 梓 圧 斡 扱 宛 姐 虻 飴 絢 綾 鮎 或 粟
          袷 安 庵 按 暗 案 闇 鞍 杏 以 伊 位 依 偉 囲 夷
          委 威 尉 惟 意 慰 易 椅 為 畏 異 移 維 緯 胃 萎
          衣 謂 違 遺 医 井 亥 域 育 郁 磯 一 壱 溢 逸 稲
          茨 芋 鰯 允 印 咽 員 因 姻 引 飲 淫 胤 蔭 院 陰
          隠 韻 吋 右 宇 烏 羽 迂 雨 卯 鵜 窺 丑 碓 臼 渦
          嘘 唄 欝 蔚 鰻 姥 厩 浦 瓜 閏 噂 云 運 雲 荏 餌
          叡 営 嬰 影 映 曳 栄 永 泳 洩 瑛 盈 穎 頴 英 衛
          詠 鋭 液 疫 益 駅 悦 謁 越 閲 榎 厭 円 園 堰 奄
          宴 延 怨 掩 援 沿 演 炎 焔 煙 燕 猿 縁 艶 苑 薗
          遠 鉛 鴛 塩 於 汚 甥 凹 央 奥 往 応 ...........

1.4 Clut について

 gf ファイルには Clut data が内包されていない為、独自に用意して頂く必要があり
 ます。ここではグレイスケールを例として記載しておきますので、参考にして下さい。

 typedef struct {
	 unsigned char r, g, b, a;
 }RGBA;

 /* Clut データ用の配列 */
 RGBA rgba[16];

 /* A 用テーブル */
 static unsigned char aTable_Alpha []={
	0*128/(6-1), 1*128/(6-1), 2*128/(6-1), 3*128/(6-1),
	4*128/(6-1), 2*128/(6-1), 3*128/(6-1), 4*128/(6-1),
	5*128/(6-1), 3*128/(6-1), 4*128/(6-1), 5*128/(6-1),
	4*128/(6-1), 5*128/(6-1), 5*128/(6-1), 5*128/(6-1)
 };

 /* R, G, B 用テーブル */
 static unsigned char aTable_RGB []={
	0*255/(6-1), 0*255/(6-1), 0*255/(6-1), 0*255/(6-1),
	0*255/(6-1), 1*255/(6-1), 1*255/(6-1), 1*255/(6-1),
	1*255/(6-1), 2*255/(6-1), 2*255/(6-1), 2*255/(6-1),
	3*255/(6-1), 3*255/(6-1), 4*255/(6-1), 5*255/(6-1)
 };

 /* RGBA32 の Clut データを作成 */
 for(i=0; i<16; i++) {
	  rgba[i].r = rgba[i].g = rgba[i].b = aTable_RGB[i];
	  rgba[i].a = aTable_Alpha[i];
 }


1.5 使用について

 ここでは Shift JIS から JIS への変換も含めてフォントデータへアクセスする為の
 コード変換を記載します。

 - Shift JIS から JIS への変換

 #define JV1FR	0x81L
 #define JV1TO	0x9fL
 #define JV2FR	0xe0L
 #define JV2TO	0xefL
 #define JH1FR	0x40L
 #define JH1TO	0x7eL
 #define JH2FR	0x80L
 #define JH2TO	0x9eL
 #define JH3FR	0x9fL
 #define JH3TO	0xfcL

 static long SjisToJis(unsigned long code)
 {
	unsigned long ih, il;
	
	ih = (code >> 8) & 0xff;
	il = code & 0xff;

	/*上位８ビットの処理*/
	if ( ih >= JV1FR && ih <= JV1TO ) {
		ih -= JV1FR;
	}
	else if ( ih >= JV2FR && ih <= JV2TO ) {
		ih = (ih-JV2FR)+31L;
	}
	ih <<= 1;

	/*下位８ビットの処理*/
	if ( il >= JH1FR && il <= JH1TO ) {
		il -= JH1FR;
	} else if ( il >= JH2FR && il <= JH2TO ) {
		il = (il-JH2FR)+63L;
	}else if ( il >= JH3FR && il <= JH3TO )  {
		il -= JH3FR;
		++ih;
	}
	return ( ((ih+1L)<<8) + il + 1L + 0x2020L );
 }

 - Shift JIS から通し番号への変換

 code = SjisToJis(Code);
 hi = ((code >> 8) - 0x21) * 0x5e;
 low = (code & 0xff) - 0x21;
 code = hi+low;

 - フォントデータへのアクセス

 上記に示した "Shift JIS から通し番号への変換" によって、フォントにアクセス
 する為の code が求まりますので、後は以下のような構造体を用意して頂ければ、
 font[code] でアクセス可能となります。

 #define MARGIN (2)

 typedef struct {
	 char p[(20+MARGIN)*22/2];
 }P22i22;

 typedef struct {
	 char p[(24+MARGIN)*26/2];
 }P26i26;

 /* 使用するフォントに合わせて選択して下さい */
 P22i22 font[8836];
 P26i26 font[8836];  

 ===========================================================
 例： 唖(0x88a0 : Shift-JIS code)を使用する場合
     
  /* SjisToJis 関数で 唖(Shift-JIS : 0x88a0) を
     JIS : 0x3022 １６区２点 に変換 */
   jiscode = SjisToJis(0x88a0);

   /* hi = 1410 */
   hi = ((jiscode >> 8) - 0x21) * 0x5e;   
   /* low = 1 */
   low = (jiscode & 0xff) - 0x21;
   /* code = 1411 */
   code = hi + low;
   
   /* あとは font[code] でフォントデータにアクセス可能 */

 ===========================================================

 - 透明(抜け)色について

 「1.4 Clut について」に記載した Clut を使用される場合は  

  TEST_1.ATE = 1(Alpha ON)
  TEST_1.ATST = 6(A > AREF)
  TEST_1.AREF = 0
  TEST_1.AFAIL = 0(KEEP)

  PRIM.ABE = 1(Alpha ON)
  
  等と半透明の設定をしてから、ご利用下さい。

1.6 その他

 機種依存コード(kg, ○付き数字等)が９〜１４区、外字、半角文字が８７区から格納
 されています(第二水準の最後尾が８４区)。なお、半角文字である ASCII コード
 (0x21('!')〜0x7e('~'))も９０区に格納されています(半角文字であっても格納サイズ
 は22x22 or 26x26 になります)。
