[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library  Release 2.0
                  Copyright (C) 1999 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

VU1を用いたB-Spline描画サンプル

<サンプルの解説>
        VU1を用いて与えられたコントロールポイントから
        B-Splineサーフェスを描画するサンプルです。

<ファイル>
        main.c          ：メインプログラム
        bs.c            ：パケット作成関数
        noise.h         ：ノイズ関数のプロトタイプ宣言
        noise.c         ：ノイズ関数
        b_data.dsm      ：パケット（マトリクス、ブレンディングファクタ、
			  パケット等）
        b.vsm           ：B-Spline描画マイクロコード
        grid.h          ：グリッドのコントロールポイントデータ
        torus.h         ：トーラスのコントロールポイントデータ
        flower.dsm      ：テクスチャデータ
        b_opt.vsm       ：b.vsmの最適化版

<起動方法>
        % make          ：コンパイル
        % make run      ：実行

        コンパイル後、以下の方法でも実行可能
        % dsedb
        > run main.elf

<コントローラの操作方法>
        方向キー        ：視点の移動
        selectボタン    ：モデルの切り替え（グリッド、トーラス）
        R1ボタン        ：テクスチャ付き・ワイヤフレームの切り替え

<備考>
	パケットの構成、マイクロコードについては default.htm を参照して
	ください。
	
        処理の概略は、以下の通りです。

        ===== main.c =====
        main():

        1. ダブルバッファの設定、テクスチャのロード
        2. padオープン、マイクロコードの転送
        3. ブレンディング係数の設定、変形用ノイズ分布の初期化
        4. パッドからの情報を読み取り、描画パケット、各種マトリクスを設定
        5. コントロールポイントの座標をパケットにセット
        6. VU1にパケットを転送して描画
        7. 次のフレームのコントロールポイントを設定
        8. 4.に戻る

        SetBlendingCoeff():
        1. ４分割したときのtの値におけるブレンディング関数、
           ブレンディング関数の導関数の値を計算
        2. マイクロコードでは、4x4のコントロールポイントからできる36個の三角形を
           ３つのトライアングルストリップに分割し表示する。
           このトライアングルストリップの各頂点に対応する1.で計算された
           値の組み合わせをあらかじめパケットとしてストアする
        
        CreateViewingMatrix():
        1. スクリーン変換を行うマトリクスの設定

        SetViewPosition():
        1. 視点の設定

        MoveLight():
        1. 光源方向の設定

        ===== bs.c =====
        CreateControlPointArea():
        1. b_data.dsmに設定されたパケットテンプレートを描画するデータの
           U, Vのコントロールポイント数、U, Vがそれぞれ閉じているかどうか
           によって、スクラッチパッド上に適当な数コピーする
        
        SetControlPoint():
        1. CreateControlPointArea()によってスクラッチパッド上に作られた
           パケット中に実際に描画するコントロールポイントの座標をセットする

        ==== noise.c ====
        1. ノイズ分布初期化、補間関数

        ==== b.vsm(VU1 micro code) ====

        [b.vsm]
        1. 透視変換マトリクスをレジスタVF28 - VF31に設定
        2. 各種カウンタセット（ストリップ頂点数など）
        3. 計算しようとする4x4コントロールポイントセットを
           VF01-VF16へ設定
        4. GIFタグのロード・ストア、RGBAQ, ST, XYZFのストア
           ポインタの設定
        5. 計算対象のブレンディング係数のロード
        6. 計算点に対する接線ベクトルを計算し、
           その外積より法線ベクトルを求める
        7. 法線ベクトルと平行光源の光線ベクトルとの内積を求め、
           照度計算を行う
        8. ブレンディング係数をロードし、３角形分割後の物理座標を
           求める
        9. あらかじめ与えられたSTの値をロードし、にオフセットを加え
           実際のST値を求める
        10. FTOIなどを行い、VUmemにストアポインタの示す位置に
            RGBAQ, ST, XYZFをストアする
        11. 頂点数回ループする（5.に戻る）
        12. パケット数回ループする(2.に戻る)
        13. ストリップの切れめを作るために、切れ目となるパケットの
            Zの符号を反転する
        14. GIFに対してXGKICKする

