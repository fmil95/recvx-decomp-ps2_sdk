/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/* 
 *              Emotion Engine Library Sample Program
 *
 *                         - hako -
 *
 *                         Version 0.1.0
 *                           Shift-JIS
 *
 *      Copyright (C) 1998-1999 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *                     Name : work.vsm
 *
 *       Version        Date            Design      Log
 *  --------------------------------------------------------------------
 *      0.1.0           Mar,26,1999     okadaa    1st version
 */

/* 
 *	RotTransPers
 */	
/*
 *   VU-MEM 
 *	0-3     ViewLocal matrix
 *	26-29   ScreenView matrix
 *	30-33   ScreenLocal matrix
 *	40      Giftag 
 *	41-56	Color
 *	57-72   Vertex
 */
/*
 *   Registers
 *	VF04-07 ScreenLocal matrix
 *	VF08-15 work register in MulMatrix
 *	VF20    tmp register for GIFtag
 *	VF21	vertex color(float)
 *	VF22	vertex color(int)
 *	VF27	vertex(GSprimitive)
 *	VF28	vertex for pers
 *	VF30	vertex(local)
 *	VF31	vertex(screen)
 *
 *	VI01	work register
 *	VI02	loop counter
 *	VI04	address of ScreenLocal matrix
 *	VI05	input address of GIFtag
 *	VI06	input address of vertex
 *	VI07	output address of GIFtag
 *	VI08	input address of vertex color
 *	VI09	0x8000 (ADC bit of XYZF2)
 *	VI11	count of vertex
 *	VI12	output address of xyz
 *	VI13    output address of rgb
 */

;
;	parameter initialize(prologue)
;
main:	 NOP				IADDIU VI01, VI00, 26 ; View->Screen
	 NOP				IADDIU VI02, VI00, 0  ; Local->View
	 NOP				IADDIU VI03, VI00, 30 ; Local->Screen
	 NOP				NOP   
	 NOP				BAL VI15, MulMatrix 
	 NOP				NOP   
	 NOP				IADDIU VI04, VI00, 30 ; Local->Screen
	 NOP				NOP   
	 NOP				NOP   
	 NOP				NOP   
	 NOP				LQI.xyzw VF04, (VI04++) ; L->S matrix
	 NOP				LQI.xyzw VF05, (VI04++) ; L->S matrix
	 NOP				LQI.xyzw VF06, (VI04++) ; L->S matrix
	 NOP				LQI.xyzw VF07, (VI04++) ; L->S matrix
	 NOP				IADDIU VI01, VI00, 0x7fff ;mask of nloop
	 NOP				IADDIU VI05, VI00, 40 ; GIFtag
	 NOP				IADDI VI09, VI01, 1   ; ADC of XYZF2
	 NOP				IADDIU VI07, VI00, 100 ; output addr 
	 NOP				NOP
	 NOP				NOP
	 NOP				ILW.x VI11, 0(VI05) ; nloop(GIFtag)+EOP
	 NOP				IADDIU VI08, VI05, 1 ; addr of color
	 NOP				NOP
	 NOP				NOP
	 NOP				IAND VI11, VI11, VI01 ; del EOP of nloop
	 NOP				NOP
	 NOP				NOP
	 NOP				NOP
	 NOP				IADD VI06, VI08, VI11 ; addr of vert
	 NOP				IADD VI02, VI11, VI00 ; loop count
	 NOP				NOP
	 NOP				NOP
	 NOP				IADDIU VI12, VI07, 2 ; addr of outvert
	 NOP				IADDIU VI13, VI07, 1 ; addr of outcolor
;
;	save RGB (no lighting calculation)
;
LOOP0:	 NOP  				LQI.xyzw VF21, (VI08++) ; color
	 NOP				IADDI VI11, VI11, -1 ; count--
	 NOP				NOP   
	 NOP				NOP   
	 FTOI0.xyzw VF22, VF21 	 	NOP   ; convert float to int
	 NOP				NOP   
	 NOP				NOP   
	 NOP				NOP   
	 NOP				SQ.xyzw VF22, 0(VI13) ; outcolor
	 NOP				IADDIU VI13, VI13, 2  ; next save addr
	 NOP				NOP
	 NOP				NOP
	 NOP				IBNE VI11, VI00, LOOP0
	 NOP				NOP

;
;	RotTransPers
;
	 NOP				IADD VI11, VI02, VI00 ; init loop count
LOOP1:	 NOP				LQI.xyzw VF30, (VI06++) ; load vert
	 NOP				IADDI VI11, VI11, -1 ; count-- 
	 NOP				NOP
	 NOP				NOP
	 MULAx.xyzw ACC, VF04, VF30x	NOP  ; RotTrans
	 MADDAy.xyzw ACC, VF05, VF30y	NOP  ; RotTrans
	 MADDAz.xyzw ACC, VF06, VF30z	NOP  ; RotTrans
	 MADDw.xyzw VF31, VF07, VF30w	NOP  ; RotTrans
	 NOP				NOP
	 NOP				NOP
	 NOP				NOP
	 NOP				DIV Q, VF00w, VF31w ; Q = 1/w
	 NOP				WAITQ ; wait 7cycles
	 MULq.xyzw VF28, VF31, Q	NOP  ; Pers
	 NOP				NOP
	 NOP				NOP
	 NOP				NOP
	 FTOI4.xyzw VF27, VF28 	 	NOP ; convert float to int
	 NOP				NOP
	 NOP				NOP
	 NOP				NOP
	 NOP				SQ.xyzw VF27, 0(VI12) ; save vert
	 NOP				IADDI VI12, VI12, 2 ; next save addr
	 NOP				NOP
	 NOP				NOP
	 NOP				IBNE VI11, VI00, LOOP1
	 NOP				NOP
;
; epilogue
;
	 NOP				LQ.xyzw VF20, 0(VI05) ; load GIFtag
	 NOP				NOP
	 NOP				NOP   
	 NOP				NOP   
	 NOP				SQ.xyzw VF20, 0(VI07) ; save GIFtag
	 NOP				NOP   
	 NOP				NOP   
	 NOP				NOP   
	 NOP				ISW.w VI09, 18(VI07) ; XYZF2->XYZF3
	 NOP				ISW.w VI09, 20(VI07) ; XYZF2->XYZF3
	 NOP				NOP   
	 NOP				NOP   
	 NOP				NOP   
	 NOP				XGKICK VI07  
	 NOP				NOP   
	 NOP[E]				NOP	
	 NOP				NOP   
;
;	MulMatrix routine 
;		VI01 : address of source matrix
;		VI02 : address of source matrix
;		VI03 : address of destination matrix
;
MulMatrix: NOP				LQI.xyzw VF08, (VI02++) 
	 NOP				LQI.xyzw VF04, (VI01++) 
	 NOP				LQI.xyzw VF05, (VI01++) 
	 NOP				LQI.xyzw VF06, (VI01++) 
	 NOP				LQI.xyzw VF07, (VI01++) 
	 MULAx.xyzw ACC, VF04, VF08x	 LQI.xyzw VF09, (VI02++) 
	 MADDAy.xyzw ACC, VF05, VF08y	 NOP   
	 MADDAz.xyzw ACC, VF06, VF08z	 NOP   
	 MADDw.xyzw VF12, VF07, VF08w	 NOP   
	 MULAx.xyzw ACC, VF04, VF09x	 LQI.xyzw VF10, (VI02++) 
	 MADDAy.xyzw ACC, VF05, VF09y	 NOP   
	 MADDAz.xyzw ACC, VF06, VF09z	 NOP   
	 MADDw.xyzw VF13, VF07, VF09w	 SQI.xyzw VF12, (VI03++) 
	 MULAx.xyzw ACC, VF04, VF10x	 LQI.xyzw VF11, (VI02++) 
	 MADDAy.xyzw ACC, VF05, VF10y	 NOP   
	 MADDAz.xyzw ACC, VF06, VF10z	 NOP   
	 MADDw.xyzw VF14, VF07, VF10w	 SQI.xyzw VF13, (VI03++) 
	 MULAx.xyzw ACC, VF04, VF11x	 NOP   
	 MADDAy.xyzw ACC, VF05, VF11y	 NOP   
	 MADDAz.xyzw ACC, VF06, VF11z	 NOP   
	 MADDw.xyzw VF15, VF07, VF11w	 SQI.xyzw VF14, (VI03++) 
	 NOP				NOP   
	 NOP				NOP   
	 NOP				NOP   
	 NOP				SQI.xyzw VF15, (VI03++) 
	 NOP				NOP   
	 NOP				JR VI15  
	 NOP				NOP   
