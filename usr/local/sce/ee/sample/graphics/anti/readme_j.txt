[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library  Release 2.0
                  Copyright (C) 1999 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved


アンチエイリアスサンプル(ソート&ポリゴンクリップ)

<サンプルの解説>
	GSのアンチエイリアス機能を安全に使用するためのサンプルです。

	アンチエイリアシングは、アルファブレンディングによって
	プリミティブのエッジ部分の平滑化をおこないます。
	プリミティブの境界でアルファブレンディングをかけられた
	ピクセルのZ値の書き換えは、行いません。(zテストは
	おこなわれます。) そのため、理想的なアンチエイリアシング
	を実現するためには、描画プリミティブを遠い順にソート
	しておく必要があります。

	しかし現実的には、１つ１つのポリゴンを100%ソートするのは
	難しいと考えられます。そこで本サンプルでは描画オブジェクト
	を適度に分割し、そのブロック単位でソートして描画しています。

	またアンチエイリアスでは、プリミティブ境界の１ピルセル外側
	の領域までzテストをおこない、描画します(z値書き込み無し)。
	したがって境界外のピクセルのz値を補間により求める際、計算結果
	がオーバーフロー(Zmax値を越える)をひき起こすことがあります。
	結果、このピクセルが手前のポリゴンの前に突き出て描画され、
	不自然なちらつきが起こります。具体的にこの現象は、画面に対して
	ポリゴンの傾斜がきつくなった(平らに潰れた)時に起こります。

	そこでこの現象を回避するため、本サンプルでは傾斜がきつく
	なったポリゴンを描画しないよう、BackFaceClippingの手法を
	利用し、面積の非常に小さくなったポリゴンのクリップ処理を
	おこなっています。

<ファイル>
        main.c          :メインプログラム
	mathfunc.h	:行列＆数値演算関数のヘッダファイル
	mathfunc.c	:行列＆数値演算関数
	packet.dsm	:VU1で用いるデータのパケットファイル
	aa_clip.vsm	:VU1マイクロコード
	cup0.dsm	:オブジェクトデータ(コップ分割0-6)
	cup1.dsm	:
	cup2.dsm	:
	cup3.dsm	:
	cup4.dsm	:
	cup5.dsm	:
	cup6.dsm	:

<起動方法>
        % make          ：コンパイル
        % make run      ：実行

        コンパイル後、以下の方法でも実行可能
        % dsedb
        > run main.elf

<コントローラの操作方法>
        ↑↓(方向キー)  : x軸回転(視点)
        ←→	        : y軸回転(視点)
        L1L2ボタン      : z軸移動(視点，前後)
        R1ボタン        : アンチエイリアスOFF
	R2ボタン        : 潰れたポリゴンのクリッピングOFF

<備考>
     注意事項

	ポリゴンの面積の算出をGS座標系でおこないクリップする場合、
	しきい値の計算に注意が必要です。
	例えばしきい値を一定にして計算した場合、視点とオブジェクトが
	離れただけでポリゴンが消えてしまうという現象が起こります。
	これを防ぐため、ポリゴンと視点との距離を考慮してクリップする
	しきい値を制御する必要があります。
	物体は距離に反比例して小さくなります。したがって、面積は2乗に
	反比例して小さくなりますが、クリップしたいポリゴンは、ほとんど
	平ら、つまり直線に近いものです。そのためその外積値は、比較的
	線形的に減少(つまり距離に反比例)していくと考えられます。
	本サンプルではオブジェクトの代表点の位置と視点との距離から、
	その反比例によってクリップ面積値を算出しています。

<処理概略>
	処理の概略は、以下の通りです。

        ===== main.c =====
       main():

        1. ダブルバッファの設定、
	2. GSのアルファブレンディングレジスタ設定(ALPHA1)
        3. padオープン、パッドからの情報を読み取る
	4. マトリクス設定
	5. オブジェクトの各ブロックをZソート
	6. ソート結果に合わせてVU1転送用パケット作成(DMArefタグ入れ換え)
	7. クリップ面積値算出、パケットに挿入
        8. VU1にパケットを転送して描画
	9. 3.に戻る

    VU1マイクロコードの処理

        [aa_clip.vsm]

        1. 各種マトリクスをレジスタVF01 - VF16に設定
        2. 各種カウンタセット（ストリップ頂点数など）
        3. GIFタグのロード・ストア、RGBAQ, ST, XYZFのストアポインタ設定
        4. 頂点を透視変換
        5. 法線ベクトルとライトベクトルの内積から輝度値を算出
        6. 輝度値とライトカラーから頂点の色を求める。
        7. 透視変換後の３頂点から外積を計算し、ポリゴンの面積を算出
        8. しきい値以下ならXYZ3フラグをセットしクリップ
        9. 1-8を頂点数だけループし、XGKICK

