/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/*
 *              Emotion Engine Library Sample Program
 *
 *                         Version 0.4.0
 *                           Shift-JIS
 *
 *      Copyright (C) 1998-1999 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *        Name : r.vsm
 *
 *       Version        Date            Design      Log
 *  --------------------------------------------------------------------
 *       0.5.0          Oct, 13, 1999   thatake     first version
 */

; ---------------------------------------------------------------------
;
;
;       vu1 micro code for basic sample
;
;
;	VF01 - VF04 	: perspective + transformation matrix 
;	VF05 - VF08 	: light color matrix
;       VF09 - VF12     :  X light vector matrix(3 lighting vector + 1 ambient)
;	VF15        	: gif tag 
;       VF18 - VF19	:2 vector VF22toVF23 & VF22toVF24
;	VF20 		: source vertex & st
;	VF21 		: source normal & color
;       VF22 - VF24     : recent 3 vertex point on GSprimitive coordinate
;
;
;	VI02 : pointer for gif tag / for XGKICK
;	VI03 : pointer for vertex
;	VI04 : pointer for normal
;	VI05 : pointer for st
;	VI06 : pointer for color
;	VI07 : store pointer for RGBAQ
;	VI08 : store pointer for ST
;	VI09 : store pointer for XYZF2
;
;       VI10 : counter for vertices
;
;
; ---------------------------------------------------------------------
	NOP	IADDIU VI01, VI00, 0
	NOP	IADDIU VI02, VI00, 4
	NOP	IADDIU VI03, VI00, 16	; screen matrix X object matrix
	NOP	BAL VI15, MulMatrix
	NOP	NOP

	NOP	IADDIU VI01, VI00, 4 
	NOP	LQI VF28, (VI01++)	; (12) load light vector matrix 
	NOP	LQI VF29, (VI01++)
	NOP	LQI VF30, (VI01++)
	NOP	LQI VF31, (VI01++)
	NOP	LQI VF05, (VI01++)	; (12) load light vector matrix 
	NOP	LQI VF06, (VI01++)
	NOP	LQI VF07, (VI01++)
	NOP	LQI VF08, (VI01++)
	NOP	LQI VF09, (VI01++)	; (8) load light color matrix 
	NOP	LQI VF10, (VI01++)
	NOP	LQI VF11, (VI01++)
	NOP	LQI VF12, (VI01++)
	NOP	LQI VF01, (VI01++)	; (16) load screen x transformation matrix
	NOP	LQI VF02, (VI01++)
	NOP	LQI VF03, (VI01++)
	NOP[d]	LQI VF04, (VI01++)

	NOP[E]	NOP
	NOP	NOP

START0:
	NOP 	XTOP VI01
	NOP	ILWR.x VI12, (VI01)x 		; copy to VI10
	NOP	IADDIU VI11, VI00, 0x7fff	; set mask
	NOP	IAND VI10, VI11, VI12		; mask. VI10 is counter for
;	NOP 	LQ VF19, 0(VI01) 		; load gif tag
	NOP 	LQ VF19, 39(VI00) 		; load gif tag
	NOP	IADDIU VI03, VI01, 1		; pointer for vertices
	NOP	IADD VI04, VI03, VI10		; pointer for normal
	NOP	IADD VI05, VI04, VI10		; pointer for color
	NOP	IADD VI06, VI05, VI10		; pointer for st
	NOP	IADD VI02, VI06, VI10 		; pointer for XGKICK
	NOP 	SQ VF19, 0(VI02) 		; store gif tag
	NOP 	ISWR.x VI12, (VI02) 		; store gif tag
	NOP	IADDIU VI07, VI02, 2		; set store pointer for RGBAQ
	NOP	IADDIU VI08, VI02, 1		; set store pointer for ST
	NOP[d]	IADDIU VI09, VI02, 3		; set store pointer for XYZF2
	MULx.xyzw VF22, VF22, VF00x	NOP
	MULx.xyzw VF23, VF23, VF00x	NOP
	MULx.xyzw VF24, VF24, VF00x	NOP

LOOP:
	NOP	LQI VF20, (VI03++)		; load vertex
	NOP	LQI VF21, (VI04++)		; load normal
	NOP	LQI VF17, (VI06++); load color
	NOP NOP
	NOP NOP

	; --- rotation/translation/perspective transform ---
	MULAx.xyzw ACC, VF01, VF20x	NOP ; rot/trans/pers 	 
	MADDAy.xyzw ACC, VF02, VF20y	NOP	 
	MADDAz.xyzw ACC, VF03, VF20z	NOP	 
	MADDw.xyzw VF25, VF04, VF20w	NOP	 
	NOP NOP
	NOP NOP
	NOP NOP
	NOP				DIV Q, VF00w, VF25w

	; --- light matrix X normal ---
	MULAx.xyzw ACC, VF05, VF21x	NOP ; dot products	 
	MADDAy.xyzw ACC, VF06, VF21y	NOP	 
	MADDAz.xyzw ACC, VF07, VF21z	NOP	 
	MADDw.xyzw VF13, VF08, VF21w	NOP	 
	NOP NOP
	NOP NOP
	NOP NOP
	MAXx.xyzw VF13, VF13, VF00x	NOP ; cut under 0.0f

	; --- calc transformed position and store it ---
	MULq VF15, VF25, Q		NOP
	NOP NOP
	NOP NOP
	NOP NOP
	FTOI4 VF27, VF15		NOP
	NOP NOP
	NOP NOP
	NOP NOP
	NOP 				SQ VF27, 0(VI09) ; --- store XYZF2 ---
	NOP				IADDIU VI09, VI09, 3

	; --- load st and store it ---
	MULq.xyz VF27, VF17, Q		NOP
	NOP NOP
	NOP NOP
	NOP NOP
	NOP SQ VF27, 0(VI08)
	NOP IADDIU VI08, VI08, 3
	NOP NOP
	NOP NOP

	; --- color * dot-product ---
	MULAx.xyzw ACC, VF09, VF13x	NOP
	MADDAy.xyzw ACC, VF10, VF13y	NOP
	MADDAz.xyzw ACC, VF11, VF13z	NOP
	MADDw.xyzw VF14, VF12, VF13w	NOP
	NOP				LQ VF21, 0(VI05); load color
	NOP NOP
	NOP NOP
	NOP NOP
	MUL.xyzw VF20, VF21, VF14	LOI 255.0
	NOP NOP
	NOP NOP
	NOP NOP
	MINIi VF20, VF20, I		NOP
	NOP NOP
	NOP NOP
	NOP NOP
	FTOI0 VF26, VF20		NOP
	NOP NOP
	NOP NOP
	NOP NOP
	NOP 				SQ VF26, 0(VI07)
	NOP				IADDIU VI07, VI07, 3

	; --- clipping ---
BKCLIP:
	NOP				MOVE.xyzw VF22, VF23; recent 3 point
	NOP				MOVE.xyzw VF23, VF24;
	NOP				MOVE.xyzw VF24, VF15;
	NOP                             NOP
	NOP                             NOP
	NOP                             NOP
	SUB.xyzw VF19, VF23, VF22       NOP
	SUB.xyzw VF18, VF24, VF22       NOP
	NOP                             NOP
	NOP                             NOP
	NOP                             NOP
;	OPMULA.xyz ACC, VF19, VF18      NOP
;	OPMSUB.xyz VF26, VF18, VF19     NOP;outer product
	OPMULA.xyz ACC, VF18, VF19      NOP
	OPMSUB.xyz VF26, VF19, VF18     NOP;outer product
	NOP		LQ  VF31, 38(VI00)
	NOP		NOP
	NOP		NOP
	NOP		NOP
	SUBx.z VF26z, VF26z, VF31x	NOP
	NOP		NOP
	NOP		NOP
	NOP		NOP
	NOP		IADDIU VI11, VI00, 0x0020; mask for minus flag
	NOP             FMAND VI12, VI11      ; if -z or z_zero flag is 1
	NOP             NOP
	NOP		IBNE VI12, VI00, XYZ3 ; Is VI01 0 or !0 ?
	NOP		NOP

XYZ2:	
	; --- decrement loop ---
	NOP	IADDI VI10, VI10, -1
	NOP	NOP
	NOP	IBNE VI10, VI00, LOOP

	; --- send result to GIF and stop ---
	NOP  	NOP   
	NOP   	XGKICK VI02  
	NOP[E]  NOP   
	NOP	NOP
	NOP   	B START0  
	NOP	NOP

XYZ3:
        NOP     IADDIU VI11, VI00, 0x7fff ; set mask
        NOP     IADDI  VI11, VI11, 1      ; set XYZ3 flag to VI11
        NOP     ISW.w  VI11, -3(VI09) ;kick XYZ3
        NOP     B XYZ2
        NOP     NOP

; -------------------------------------------------------------------
;   MulMatrix 
;      VI01 : address of source matrix
;      VI02 : address of source matrix
;      VI03 : address of destination matrix
;

MulMatrix:
	NOP                          	LQI.xyzw VF08, (VI02++)
        NOP                            	LQI.xyzw VF04, (VI01++)
        NOP                            	LQI.xyzw VF05, (VI01++)
        NOP                            	LQI.xyzw VF06, (VI01++)
        NOP                            	LQI.xyzw VF07, (VI01++)
        MULAx.xyzw ACC, VF04, VF08x     LQI.xyzw VF09, (VI02++)
        MADDAy.xyzw ACC, VF05, VF08y    NOP
        MADDAz.xyzw ACC, VF06, VF08z    NOP
        MADDw.xyzw VF12, VF07, VF08w    NOP
        MULAx.xyzw ACC, VF04, VF09x     LQI.xyzw VF10, (VI02++)
        MADDAy.xyzw ACC, VF05, VF09y    NOP
        MADDAz.xyzw ACC, VF06, VF09z    NOP
        MADDw.xyzw VF13, VF07, VF09w    SQI.xyzw VF12, (VI03++)
        MULAx.xyzw ACC, VF04, VF10x     LQI.xyzw VF11, (VI02++)
        MADDAy.xyzw ACC, VF05, VF10y    NOP
        MADDAz.xyzw ACC, VF06, VF10z    NOP
        MADDw.xyzw VF14, VF07, VF10w    SQI.xyzw VF13, (VI03++)
        MULAx.xyzw ACC, VF04, VF11x     NOP
        MADDAy.xyzw ACC, VF05, VF11y    NOP
        MADDAz.xyzw ACC, VF06, VF11z    NOP
        MADDw.xyzw VF15, VF07, VF11w    SQI.xyzw VF14, (VI03++)
        NOP                            	NOP
        NOP                            	NOP
        NOP                            	NOP
        NOP                            	SQI.xyzw VF15, (VI03++)
        NOP                            	NOP
        NOP                            	JR VI15
        NOP                            	NOP
	












