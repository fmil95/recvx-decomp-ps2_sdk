[SCEI CONFIDENTIAL DOCUMENT]
"PlayStation 2" Programmer Tool Runtime Library  Release 2.0
                  Copyright (C) 1999 by Sony Computer Entertainment Inc.
                                                     All Rights Reserved

テクスチャスワップサンプル

<サンプルの解説>
       テクスチャ入れ替えながら描画を行うサンプル

<ファイル>

        buff0.dsm       ：トリプルバッファの転送状態０を設定するパケット
        buff1.dsm       ：トリプルバッファの転送状態１を設定するパケット
        buff2.dsm       ：トリプルバッファの転送状態２を設定するパケット
        grid.dsm        ：地面のモデル
        m.vsm           ：描画用マイクロコード 最適化なし
        m_opt.vsm       ：描画用マイクロコード 最適化
        main.c          ：メイン関数
        mat.dsm         ：地面のテクスチャ
        mathfunc.c      ：各種数値演算関数
        mathfunc.h      ：各種パラメータを定義
        matrix.dsm      ：マトリクス用パケットのテンプレート
        no[1-4].dsm     ：１番から４番のテクスチャ
        packet.dsm      ：path1/path2に流すパケットデータ
        phys.c          ：ボールの位置を計算しパケット中にセットする関数
        sphere.dsm      ：ボールのモデル
        tex_swap.h      ：サンプルのパラメータやプロトタイプ宣言

<起動方法>

        % make          ：テクスチャ入れ替えサンプルのコンパイル
        % make run      ：テクスチャ入れ替えサンプルの実行

        コンパイル後、以下の方法でも実行可能

        % dsedb
        > run main.elf

<コントローラの操作方法>
        ↑↓←→        ：視点の回転

        startボタン        ：ボールのリセット

<備考>

        処理の概略は、以下の通りです。

        [main.c]

        1. ダブルバッファの設定、パラメータの初期化
        2. テクスチャ関連のレジスタの設定
        3. ダブルバッファのスワップ
        4. ボールの座標を計算し、マトリクスに値をセット
        5. パッドからの入力値を取得し、その値によって視点をセット
        6. ch.1のDMAを起動し描画を行う
        7. 3に戻る


        VU1マイクロの中では以下のような処理を行っています。

        [m.vsm]

        1. 回転 x 透視変換マトリクスを設定
        2. 各種パラメータ（マトリクス等）をVU1レジスタにロード
        3. 法線ベクトル、頂点座標、ST値、色をロード
        4. 透視変換、光源計算、Q値などを計算して結果をVU1Memにストア
        5. 3. に戻り、頂点数回繰り返し
        6. ストアされたデータ(Gif Packet)をGSへXGKICK

        [packet.dsm]
        パケットの流れについて以下に示します。
        1. マイクロコードのロード
        2. 地面を描画するための環境の設定、テクスチャバッファの設定
        3. 地面のテクスチャの転送
        4. 地面の描画
        5. ボール１を描画するためのマトリクスの転送
        6. ボール１のテクスチャを転送するためのバッファの設定
        7. ボール１のテクスチャを転送
        8. ボール１を描画
        9. 5-8をボールの数だけ繰り返す。ボールのテクスチャは４種類を
           順々に転送している(256x256, 32bitRGBA)

