/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/*
 *              Emotion Engine Library Sample Program
 *
 *                        - point light -
 *
 *                           Shift-JIS
 *
 *      Copyright (C) 1998-1999 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *                     Name : pl.vsm
 *
 *       Version      Date            Design      Log
 *  --------------------------------------------------------------------
 *       1.3.0        Dec,9,1999     thatake      1st version
 */

; ---------------------------------------------------------------------
;
;
;       vu1 micro code for clipping & scissoring sample
;
;
;	VF01 - VF04 	: local_screen matrix & clip_screen matrix
;	VF05 - VF08 	: local_light matrix(3 lighting vector + 1 ambient)
;       VF09 - VF12     : light_color matrix
;       VF13 - VF16     : local_clip matrix
;       VF17 - VF18     : point_light position * 2
;	VF19 - VF20	: point_light color *2
;       VF21            : (1.0f, 1.0f, 1.0f, 1.0f)
;       VF22 - VF24     : free
;	VF25 		: source vertex & st (st uses Q(Perspective 1/w))
;	VF26 		: source normal & color (color uses lo_light*norm)
;       VF27 - VF31     : temporary
;
;	VI01 : base or offset address (temporary)
;	VI02 : pointer for gif tag / for XGKICK
;	VI03 : pointer for vertex
;	VI04 : pointer for normal
;	VI05 : pointer for color
;	VI06 : pointer for ST
;	VI07 : store pointer for RGBAQ
;	VI08 : free
;	VI09 : free
;       VI10 : counter for vertices
;       VI11,12 : Mask & Branch frag
;	VI13 : 0-3(triangle) or -1(strip)
;	VI14 : stack pointer
;	VI15 : link register
;
; ---------------------------------------------------------------------
	
	NOP	IADDIU VI01, VI00, 8    ; source(world_screen)
	NOP	IADDIU VI02, VI00, 0    ; source(local_world)
	NOP	IADDIU VI03, VI00, 16	; screen matrix X object matrix
	NOP	BAL VI15, MulMatrix2_PL
	NOP	NOP
	NOP	LQ.xyzw VF17, 25(VI00);25plight0
	NOP	LQ.xyzw VF18, 26(VI00);26plight1
	NOP[E]	NOP
	NOP	NOP

LOADPRIM_PL:
	NOP 	XTOP VI01
	NOP	ILWR.x VI12, (VI01)x 		; copy to VI12(prim)
	NOP	IADDI VI11, VI00, 0x0003	; set mask (triangle)
	NOP	IAND  VI12, VI12, VI11		;
	NOP[E]	NOP
	NOP	NOP

START_PL:
	NOP 	XTOP VI01
	NOP	IADDIU VI11, VI00, 0x7fff	; set mask
	NOP	ILWR.x VI10, (VI01)x 		; copy to VI10
	NOP	IAND VI10, VI10, VI11		; mask.counter for vertices.
	NOP 	LQ VF21, 0(VI01) 		; load gif tag
	NOP	IADDIU VI03, VI01, 1		; pointer for vertices
	NOP	IADD VI04, VI03, VI10		; set XGKICK pointer
	NOP	IADD VI05, VI04, VI10		;
	NOP	IADD VI06, VI05, VI10		;
	NOP	IADD VI02, VI06, VI10		;
	NOP 	SQ VF21, 0(VI02) 		; store gif tag
	NOP	IADDIU VI07, VI02, 2		; set store pointer for RGBAQ
     ; --- set VF21 = (1.0, 1.0, 1.0, 1.0) ---
        ADDw.xyz VF21, VF00, VF00w      NOP
        ADDx.w VF21w, VF00w, VF00x      NOP

LOOP_PL:
	NOP	LQI  VF25, (VI03++)		; load vertex

	; --- rotation/translation/perspective transform ---
	MULAx.xyzw ACC, VF01, VF25x	NOP ; rot/trans/pers 	 
	MADDAy.xyzw ACC, VF02, VF25y	NOP	 
	MADDAz.xyzw ACC, VF03, VF25z	NOP	 
	MADDw.xyzw VF27, VF04, VF25w	NOP	 
	NOP	NOP
	NOP	NOP
	NOP	NOP
	NOP				DIV Q, VF00w, VF27w
	NOP				WAITQ

	; --- calc transformed position and store it ---
	MULq VF24, VF27, Q		NOP
	NOP	NOP
	NOP	NOP
	NOP	NOP
	FTOI4 VF27, VF24		NOP
	NOP	NOP
	NOP	NOP
	NOP	NOP
	NOP	SQ VF27, 1(VI07) ; ---store XYZF2,3---
	NOP	NOP

	; --- load ST and store it ---
	NOP	LQI  VF26, (VI06++)		; load st
	NOP	NOP
	NOP	NOP
	NOP	NOP
	MULq.xyz VF28, VF26, Q		NOP	; 
	NOP	NOP
	NOP	NOP
	NOP	NOP
	NOP	SQ VF28, -1(VI07)

        ; --- point_light lighting ---
	NOP	LQI  VF26, (VI04++)		; load normal
        SUB.xyz VF30, VF17, VF25        NOP ;VF30 = light_positon - vertex
        SUB.xyz VF29, VF18, VF25        NOP ;VF29 = light_positon - vertex
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
	MUL.xyz VF28, VF29, VF29	NOP 
        NOP                             ERSADD P, VF30   ;p = 1/|VF30|^2
        NOP                             NOP
        NOP                             NOP
        MULAx.y ACC, VF21y, VF28x       NOP
        MADDAy.y ACC, VF21y, VF28y      NOP
        MADDz.y VF31y, VF21y, VF28z     NOP ;VF31y = |VF29|^2
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
	NOP				DIV  Q, vf00w, vf31y ;q = 1/|VF29|^2
	NOP				WAITQ
        MULq.y  VF31y, VF21y, Q         NOP
        NOP                             WAITP
        NOP                             MFP.x VF31x, P
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        MUL.xyz VF30, VF26, VF30        NOP ;inner product
        MUL.xyz VF29, VF26, VF29        NOP ;inner product
        NOP                             NOP
        NOP                             NOP
        NOP                             NOP
        MULAx.x ACC, VF31x, VF30x       NOP
        MADDAy.x ACC, VF31x, VF30y      NOP
        MADDz.x VF30x, VF31x, VF30z     NOP; VF30x = VF26*VF30/|VF30|^2
        MULAx.y ACC, VF31y, VF29x       NOP
        MADDAy.y ACC, VF31y, VF29y      NOP
        MADDz.y VF30y, VF31y, VF29z     NOP; VF30y = VF26*VF29/|VF29|^2
	NOP				NOP
	NOP				NOP
	NOP				LOI 5.0 ;coefficient
	MULi.xy  VF30, VF30, I		NOP
	NOP				NOP
	NOP				NOP
	NOP				NOP
;	MINIw.xy  VF30, VF30, VF00w	NOP ; cut over 1.0(for no saturation)
	NOP				NOP ; saturate effects brilliant light
	NOP				NOP
	NOP				NOP
	MAXx.xy  VF30, VF30, VF00x	NOP ; cut under 0.0f
	NOP				NOP 
	NOP				NOP
	NOP				NOP
	MULAx.xyzw ACC, VF19, VF30x	LQI  VF26, (VI05++); load color
	MADDAy.xyzw ACC, VF20, VF30y	NOP
	MADDw.xyzw VF27, VF12, VF00w	NOP; add ambient color
	NOP				NOP
	NOP				NOP
	NOP				NOP
	MINIw.xyzw VF27, VF27, VF00w    NOP ;cut over 1.0f
	NOP				NOP
	NOP				NOP
	NOP				NOP
	MUL.xyz VF27, VF26, VF27	NOP
	NOP				NOP
	NOP				NOP
	NOP				NOP
	FTOI0 VF27, VF27		NOP
	NOP				NOP
	NOP				NOP
	NOP				NOP
	NOP				SQ VF27, 0(VI07)

XYZ2_PL:
;	NOP	IADDIU  VI03, VI03, 4
	NOP	IADDIU  VI07, VI07, 3
	
	; --- decrement loop ---
	NOP	IADDI VI10, VI10, -1	
	NOP	NOP
	NOP	IBNE  VI10, VI00, LOOP_PL
	NOP  	NOP   

	; --- send result to GIF and stop ---
	NOP   	XGKICK VI02  
	NOP[E]  NOP   
	NOP	NOP
	NOP   	B START_PL
	NOP	NOP      


; -------------------------------------------------------------------
;   MulMatrix 
;      VI01 : address of source matrix
;      VI02 : address of source matrix
;      VI03 : address of destination matrix
;      VF01 - VF04 : local-screen matrix
;      VF05 - VF08 : local-light matrix
;      VF09 - VF12 : world-screen matrix -> light-color matrix
;      VF13 - VF16 : local-clip matrix
;      VF19 - VF22 : local-world matrix
;      VF23 - VF26 : world-light matrix
;      VF27 - VF30 : world-clip matrix

MulMatrix2_PL:
	NOP                          	LQI.xyzw VF19, (VI02++);0local_world
        NOP                            	LQI.xyzw VF09, (VI01++);8world_screen
        NOP                            	LQI.xyzw VF10, (VI01++);9
        NOP                            	LQI.xyzw VF11, (VI01++);10
        NOP                            	LQI.xyzw VF12, (VI01++);11
        MULAx.xyzw ACC, VF09, VF19x     LQI.xyzw VF20, (VI02++);1
        MADDAy.xyzw ACC, VF10, VF19y    LQI.xyzw VF21, (VI02++);2
        MADDAz.xyzw ACC, VF11, VF19z    LQI.xyzw VF22, (VI02++);3
        MADDw.xyzw VF01, VF12, VF19w    LQI.xyzw VF23, (VI02++);4normal_light
        MULAx.xyzw ACC, VF09, VF20x     LQI.xyzw VF24, (VI02++);5
        MADDAy.xyzw ACC, VF10, VF20y    LQI.xyzw VF25, (VI02++);6
        MADDAz.xyzw ACC, VF11, VF20z    LQI.xyzw VF26, (VI02++);7
        MADDw.xyzw VF02, VF12, VF20w    LQI.xyzw VF27, (VI01++);12world_clip
        MULAx.xyzw ACC, VF09, VF21x     LQI.xyzw VF28, (VI01++);13
        MADDAy.xyzw ACC, VF10, VF21y    LQI.xyzw VF29, (VI01++);14
        MADDAz.xyzw ACC, VF11, VF21z    LQI.xyzw VF30, (VI01++);15
        MADDw.xyzw VF03, VF12, VF21w    NOP
        MULAx.xyzw ACC, VF09, VF22x     NOP
        MADDAy.xyzw ACC, VF10, VF22y    NOP
        MADDAz.xyzw ACC, VF11, VF22z    NOP
        MADDw.xyzw VF04, VF12, VF22w    NOP
        MULAx.xyzw ACC, VF23, VF19x     LQI.xyzw VF09, (VI01++);16light_color
        MADDAy.xyzw ACC, VF24, VF19y    LQI.xyzw VF10, (VI01++);17
        MADDAz.xyzw ACC, VF25, VF19z    LQI.xyzw VF11, (VI01++);18
        MADDw.xyzw VF05, VF26, VF19w    LQI.xyzw VF12, (VI01++);19
        MULAx.xyzw ACC, VF23, VF20x     NOP
        MADDAy.xyzw ACC, VF24, VF20y    NOP
        MADDAz.xyzw ACC, VF25, VF20z    NOP;
        MADDw.xyzw VF06, VF26, VF20w    NOP;
        MULAx.xyzw ACC, VF23, VF21x     NOP
        MADDAy.xyzw ACC, VF24, VF21y    NOP
        MADDAz.xyzw ACC, VF25, VF21z    NOP
        MADDw.xyzw VF07, VF26, VF21w    MOVE  VF08, VF26
; VF24 is (0,0,0,1)(4th column of Normal_Light matrix)
;        MULAx.xyzw ACC, VF23, VF22x     NOP
;        MADDAy.xyzw ACC, VF24, VF22y    NOP
;        MADDAz.xyzw ACC, VF25, VF22z    NOP
;        MADDw.xyzw VF08, VF26, VF22w    IADDIU VI01, VI00, 4
        MULAx.xyzw ACC, VF27, VF19x     NOP
        MADDAy.xyzw ACC, VF28, VF19y    NOP
        MADDAz.xyzw ACC, VF29, VF19z    NOP
        MADDw.xyzw VF13, VF30, VF19w    NOP
        MULAx.xyzw ACC, VF27, VF20x     NOP
        MADDAy.xyzw ACC, VF28, VF20y    NOP
        MADDAz.xyzw ACC, VF29, VF20z    NOP
        MADDw.xyzw VF14, VF30, VF20w    NOP
        MULAx.xyzw ACC, VF27, VF21x     LQI.xyzw VF17, (VI01++);20plight0
        MADDAy.xyzw ACC, VF28, VF21y    LQI.xyzw VF18, (VI01++);21plight1
        MADDAz.xyzw ACC, VF29, VF21z    LQI.xyzw VF19, (VI01++);22pcolor0
        MADDw.xyzw VF15, VF30, VF21w    LQI.xyzw VF20, (VI01++);23pcolor1
        MULAx.xyzw ACC, VF27, VF22x     NOP
        MADDAy.xyzw ACC, VF28, VF22y    NOP
        MADDAz.xyzw ACC, VF29, VF22z    NOP
        MADDw.xyzw VF16, VF30, VF22w    NOP
	NOP				SQ  VF01, 0(VI00)
	NOP				SQ  VF02, 1(VI00)
	NOP				SQ  VF03, 2(VI00)
	NOP				SQ  VF04, 3(VI00) ;save local_screen
        NOP                            	NOP
        NOP                            	JR VI15
        NOP                            	NOP











