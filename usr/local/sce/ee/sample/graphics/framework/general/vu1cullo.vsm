/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/*
 *               Graphics Framework Sample Program
 *                  
 *              ---- Scene Viewer Version 0.30 ----
 * 
 *      Copyright (C) 1998-2000 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *                          Name : vu1cullo.vsm
 *
 *            Version   Date           Design      Log
 *  --------------------------------------------------------------------
 *            0.30      Apr,4,2000     thatake     Beta0
 */

; ---------------------------------------------------------------------
;
;
;       vu1 micro code for culling sample
;
;
;	VF01 - VF04 	: local_screen matrix 
;	VF05 - VF08 	: local_light matrix(3 lighting vector + 1 ambient)
;       VF09 - VF12     : light_color matrix
;       VF13 - VF16     : local_clip matrix
;       VF17 - VF18     : 2 vector VF13toVF14 & VF13toVF15
;	VF19        	: gif tag(temporary)
;	VF20 		: source vertex & st (st use Q(Perspective 1/w))
;	VF21 		: source normal & color (color use lo_light*norm)
;       VF22 - VF24     : recent 3 vertex point on GSprimitive coordinate
;       VF25 - VF29     : temporary
;	VF30		: +1 or -1(z) (for switch Triangle or TriangleStrip)
;	VF31		: flag register(VF31*VF30)
;
;	VI01 : base or offset address
;	VI02 : pointer for gif tag / for XGKICK
;	VI03 : pointer for vertex
;	VI07 : store pointer for RGBAQ
;	VI08 : store pointer for ST
;	VI09 : store pointer for XYZF2
;       VI10 : counter for vertices
;       VI11,12 : Mask & Branch frag
;	VI13 : 0x8000 for XYZ3
;
; ---------------------------------------------------------------------
	
	NOP	BAL VI15, MulMatrix2_cullo
	NOP	NOP
	NOP[E]	NOP
	NOP	NOP

START_cullo:
	NOP 	XTOP VI01
	NOP	IADDIU VI11, VI00, 0x7fff	; set mask
	NOP				IADDIU VI02, VI01, 1
	MULx.xyzw VF30, VF30, VF00x	IADDIU VI03, VI01, 4; vertices
	MULx.xyzw VF31, VF31, VF00x	ILWR.x VI12, (VI02)x; copy VI12(prim)
	NOP				LQ VF20, 0(VI03) ; load vertex
	NOP				IADDI VI14, VI00, 0x0003 ; strip?
	SUBw.z VF30z, VF30z, VF00w	ILWR.x VI10, (VI01)x ; copy to VI10
	ADDw.z VF31z, VF31z, VF00w	IAND VI12, VI12, VI14
	NOP				IAND VI10, VI10, VI11;counter(vertices)
	NOP				ILW.x VI09, 10(VI00)x ;XGKICK point
	NOP				IBNE VI14, VI12, STRIP_cullo
	NOP				IADDI VI13, VI11, 1 ; XYZ3flag
	ADDx.z VF30z, VF31z, VF00x	NOP		; Z = 1
STRIP_cullo:
	NOP				LQ VF19, 0(VI01) ; load gif tag
	; --- rotation/translation/perspective transform ---
	MULAx.xyzw ACC, VF01, VF20x	LQ VF21, 1(VI03); load normal
	MADDAy.xyzw ACC, VF02, VF20y	IADD VI02, VI03, VI09
	MADDAz.xyzw ACC, VF03, VF20z	IADDIU VI03, VI03, 2	
	MADDw.xyzw VF24, VF04, VF20w	NOP
	; --- light matrix X normal ---
	MULAx.xyzw ACC, VF05, VF21x	NOP
	MADDAy.xyzw ACC, VF06, VF21y	SQ VF19, 0(VI02)
	NOP				NOP
	MADDz.xyzw VF29, VF07, VF21z	DIV Q, VF00w, VF24w
	;---- view volume clipping -----
	MULAx.xyzw ACC, VF13, VF20x	IADDIU VI07, VI02, 2	
	MADDAy.xyzw ACC, VF14, VF20y	IADDIU VI08, VI02, 1	
	MADDAz.xyzw ACC, VF15, VF20z	IADDIU VI09, VI02, 3	
	MADDw.xyzw VF25, VF16, VF20w	LQI VF20, (VI03++) ; load st
	MAXx.xyzw VF29, VF29, VF00x	NOP ; cut under 0.0f
	MUL.xyzw VF31, VF31, VF30	NOP ;toggle switch

LOOP_cullo:
	MULq VF24, VF24, Q		NOP
	MULq.xyz VF26, VF20, Q		NOP
	CLIPw.xyz VF25xyz, VF25w	LQI VF21, (VI03++); load color
	SUB.xyzw VF17, VF23, VF22       LQI VF20, (VI03++); load vertex
	SUB.xyzw VF18, VF24, VF22       NOP
	FTOI4 VF27, VF24		NOP
	MULAx.xyzw ACC, VF09, VF29x	MOVE.xyzw VF22, VF23; recent 3 point
	MADDAy.xyzw ACC, VF10, VF29y	MOVE.xyzw VF23, VF24;
	MADDAz.xyzw ACC, VF11, VF29z	FCAND VI01, 0x0003ffff ;VI01 is 0or1
	MADDw.xyzw VF25, VF12, VF00w	SQ VF26, 0(VI08)
	OPMULA.xyz ACC, VF17, VF18      IADDI VI10, VI10, -1	
	OPMSUB.xyz VF28, VF18, VF17     NOP;outer product
	; --- rotation/translation/perspective transform ---
	MULAx.xyzw ACC, VF01, VF20x	NOP ; rot/trans/pers 	 
	MUL.xyz VF27, VF21, VF25	SQ VF27, 0(VI09) ; ---store XYZF2,3---
	MADDAy.xyzw ACC, VF02, VF20y	LQI VF21, (VI03++) ; load normal
	MADDAz.xyzw ACC, VF03, VF20z	IADDIU VI08, VI08, 3
	MADDw.xyzw VF24, VF04, VF20w	IADDIU VI09, VI09, 3
	MULz.z VF28z, VF28z, VF31z	LOI 255.0
	MINIi.xyz VF27, VF27, I		IADDIU VI07, VI07, 3
	; --- light matrix X normal ---
	MULAx.xyzw ACC, VF05, VF21x	IADDIU VI11, VI00, 0x0020; mask
	MADDAy.xyzw ACC, VF06, VF21y	DIV Q, VF00w, VF24w
	MADDz.xyzw VF29, VF07, VF21z	FMAND VI12, VI11 ; just 4 latency
	FTOI0 VF27, VF27		IADD VI01, VI01, VI12;vvclip|backclip
	;---- view volume clipping -----
	MULAx.xyzw ACC, VF13, VF20x	NOP
	MADDAy.xyzw ACC, VF14, VF20y	IBEQ VI01,VI00,XYZ2_cullo ;IsVI010or!0
	MADDAz.xyzw ACC, VF15, VF20z	NOP ;
XYZ3_cullo:
	NOP				ISW.w VI13, -3(VI09) ;kick XYZ3	
XYZ2_cullo:
	MADDw.xyzw VF25, VF16, VF20w	LQI VF20, (VI03++) ; load st
	MAXx.xyzw VF29, VF29, VF00x	IBNE VI10, VI00, LOOP_cullo
	MUL.xyzw VF31, VF31, VF30	SQ VF27, -3(VI07)

	; --- send result to GIF and stop ---
	NOP	NOP
	NOP	NOP
	NOP   	XGKICK VI02  
	NOP[E]  NOP   
	NOP	NOP
	NOP   	B START_cullo  
	NOP	NOP      

;XYZ3_cullo:
;	NOP				ISW.w VI13, -3(VI09) ;kick XYZ3
;	NOP				NOP
;        NOP                            	B XYZ2_cullo
;        NOP                            	NOP

; -------------------------------------------------------------------
;   MulMatrix 
;      VI01 : address of source matrix
;      VI02 : address of source matrix
;      VI03 : address of destination matrix
;      VF01 - VF04 : local-screen matrix
;      VF05 - VF08 : local-light matrix
;      VF09 - VF12 : world-screen matrix -> light-color matrix
;      VF13 - VF16 : local-clip matrix
;      VF17 - VF20 : local-world matrix
;      VF21 - VF24 : world-light matrix
;      VF25 - VF28 : world-clip matrix

MulMatrix2_cullo:
	NOP                          	LQ VF17, 0(VI00);0 local_world
        NOP                            	LQ VF09, 16(VI00);16world_screen
        NOP                            	LQ VF10, 17(VI00);17
        NOP                            	LQ VF11, 18(VI00);18
        NOP                            	LQ VF12, 19(VI00);19

; local_screen = world_screen * local_world
        MULAx.xyzw ACC, VF09, VF17x     LQ VF18, 1(VI00);1
        MADDAy.xyzw ACC, VF10, VF17y    LQ VF19, 2(VI00);2
        MADDAz.xyzw ACC, VF11, VF17z    LQ VF20, 3(VI00);3
        MADDw.xyzw VF01, VF12, VF17w    LQ VF21, 20(VI00);20world_clip
        MULAx.xyzw ACC, VF09, VF18x     LQ VF22, 21(VI00);21
        MADDAy.xyzw ACC, VF10, VF18y    LQ VF23, 22(VI00);22
        MADDAz.xyzw ACC, VF11, VF18z    LQ VF24, 23(VI00);23
        MADDw.xyzw VF02, VF12, VF18w    LQ VF25, 32(VI00);32light_vect
        MULAx.xyzw ACC, VF09, VF19x     LQ VF26, 33(VI00);33
        MADDAy.xyzw ACC, VF10, VF19y    LQ VF27, 34(VI00);34
        MADDAz.xyzw ACC, VF11, VF19z    LQ VF28, 35(VI00);35
        MADDw.xyzw VF03, VF12, VF19w    NOP
        MULAx.xyzw ACC, VF09, VF20x     LQ VF09, 40(VI00);40light_color
        MADDAy.xyzw ACC, VF10, VF20y    LQ VF10, 41(VI00);41
        MADDAz.xyzw ACC, VF11, VF20z    LQ VF11, 42(VI00);42
        MADDw.xyzw VF04, VF12, VF20w    LQ VF12, 43(VI00);43

; local_clip = world_clip * local_world
        MULAx.xyzw ACC, VF21, VF17x     SQ VF01, 68(VI00); store local_screen
        MADDAy.xyzw ACC, VF22, VF17y    SQ VF02, 69(VI00);
        MADDAz.xyzw ACC, VF23, VF17z    SQ VF03, 70(VI00);
        MADDw.xyzw VF13, VF24, VF17w    SQ VF04, 71(VI00);
        MULAx.xyzw ACC, VF21, VF18x     NOP
        MADDAy.xyzw ACC, VF22, VF18y    NOP
        MADDAz.xyzw ACC, VF23, VF18z    NOP
        MADDw.xyzw VF14, VF24, VF18w    NOP
        MULAx.xyzw ACC, VF21, VF19x     NOP
        MADDAy.xyzw ACC, VF22, VF19y    NOP
        MADDAz.xyzw ACC, VF23, VF19z    NOP
        MADDw.xyzw VF15, VF24, VF19w    NOP
        MULAx.xyzw ACC, VF21, VF20x     LQ VF17, 4(VI00);light_rot
        MADDAy.xyzw ACC, VF22, VF20y    LQ VF18, 5(VI00);
        MADDAz.xyzw ACC, VF23, VF20z    LQ VF19, 6(VI00);
        MADDw.xyzw VF16, VF24, VF20w    LQ VF20, 7(VI00);

; local_lightvect = light_vect * local_world
        MULAx.xyzw ACC, VF25, VF17x     SQ VF13, 72(VI00);store local_clip
        MADDAy.xyzw ACC, VF26, VF17y    SQ VF14, 73(VI00);
        MADDAz.xyzw ACC, VF27, VF17z    SQ VF15, 74(VI00);
        MADDw.xyzw VF05, VF28, VF17w    SQ VF16, 75(VI00);
        MULAx.xyzw ACC, VF25, VF18x     NOP
        MADDAy.xyzw ACC, VF26, VF18y    NOP
        MADDAz.xyzw ACC, VF27, VF18z    NOP
        MADDw.xyzw VF06, VF28, VF18w    NOP
        MULAx.xyzw ACC, VF25, VF19x     NOP
        MADDAy.xyzw ACC, VF26, VF19y    NOP
        MADDAz.xyzw ACC, VF27, VF19z    NOP
        MADDw.xyzw VF07, VF28, VF19w    MOVE  VF08, VF20
; 4th field is ambient. so we don't have to rotation
;        MULAx.xyzw ACC, VF25, VF20x     NOP
;        MADDAy.xyzw ACC, VF26, VF20y    NOP
;        MADDAz.xyzw ACC, VF27, VF20z    NOP
;        MADDw.xyzw VF08, VF28, VF20w    NOP;
        NOP                            	SQ VF05, 76(VI00);store local_lvect
        NOP                            	SQ VF06, 77(VI00);
        NOP                            	SQ VF07, 78(VI00);
        NOP                            	SQ VF08, 79(VI00);
        NOP                            	NOP
        NOP                            	JR VI15
        NOP                            	NOP












