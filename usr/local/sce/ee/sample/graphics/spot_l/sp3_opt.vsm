/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/*
 *              Emotion Engine Library Sample Program
 *
 *                         - spot light -
 *
 *                           Shift-JIS
 *
 *      Copyright (C) 1998-1999 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *                     Name : sp3_opt.dsm
 *
 *       Version      Date            Design      Log
 *  --------------------------------------------------------------------
 *       1.3.0        Dec,8,1999     thatake      1st version
 */

; ---------------------------------------------------------------------
;
;
;       vu1 micro code for clipping & scissoring sample
;
;
;	VF01 - VF04 	: local_screen matrix & clip_screen matrix
;	VF05 - VF08 	: local_light matrix(3 lighting vector + 1 ambient)
;       VF09 - VF12     : light_color matrix
;       VF13 - VF16     : local_clip matrix
;       VF17 - VF18     : free
;	VF19        	: gif tag(temporary)
;       VF22 - VF24     : recent 3 vertex point on GSprimitive coordinate
;	VF25 		: source vertex & st (st uses Q(Perspective 1/w))
;	VF26 		: source normal & color (color uses lo_light*norm)
;       VF27 - VF29     : temporary
;	VF30		: free
;	VF31		: free
;
;	VI01 : base or offset address (temporary)
;	VI02 : pointer for gif tag / for XGKICK
;	VI03 : pointer for vertex
;	VI04 : pointer for normal
;	VI05 : pointer for color
;	VI06 : pointer for ST
;	VI07 : store pointer for RGBAQ
;	VI08 : free
;	VI09 : free
;       VI10 : counter for vertices
;       VI11,12 : Mask & Branch frag
;	VI13 : 0-3(triangle) or -1(strip)
;	VI14 : stack pointer
;	VI15 : link register
;
; ---------------------------------------------------------------------
	
	NOP	IADDIU VI01, VI00, 8    ; source(world_screen)
	NOP	IADDIU VI02, VI00, 0    ; source(local_world)
	NOP	IADDIU VI03, VI00, 16	; screen matrix X object matrix
	NOP	BAL VI15, MulMatrix2
	NOP	NOP
	NOP	LQ.xyzw VF17, 25(VI00);25plight0
	NOP	LQ.xyzw VF18, 26(VI00);26plight1
	NOP	LQ.xyzw VF19, 27(VI00);26plight1
	NOP	LQ.xyzw VF05, 28(VI00);26plight1
	NOP	LQ.xyzw VF06, 29(VI00);26plight1
	NOP	LQ.xyzw VF07, 30(VI00);26plight1
	NOP[E]	NOP
	NOP	NOP

LOADPRIM:
	NOP 	XTOP VI01
	NOP	ILWR.x VI12, (VI01)x 		; copy to VI12(prim)
	NOP	IADDI VI11, VI00, 0x0003	; set mask (triangle)
	NOP	IAND  VI12, VI12, VI11		;
	NOP[E]	NOP
	NOP	NOP
START:
	NOP 	XTOP VI01
	NOP	IADDIU VI11, VI00, 0x7fff	; set mask
	NOP	ILWR.x VI10, (VI01)x 		; copy to VI10
	NOP	IAND VI10, VI10, VI11		; mask.counter for vertices.
	NOP 	LQ VF21, 0(VI01) 		; load gif tag
	NOP	IADDIU VI03, VI01, 1		; pointer for vertices
	NOP	IADD VI04, VI03, VI10		; set XGKICK pointer
	NOP	IADD VI05, VI04, VI10		;
	NOP	IADD VI06, VI05, VI10		;
	NOP	IADD VI02, VI06, VI10		;
	NOP 	SQ VF21, 0(VI02) 		; store gif tag
	NOP	IADDIU VI07, VI02, 2		; set store pointer for RGBAQ
     ; --- set VF20 = (1.0, 1.0, 1.0, 1.0) ---
        ADDw.xyz VF20, VF00, VF00w      NOP
        ADDx.w VF20w, VF00w, VF00x      NOP

	NOP	LQI  VF25, (VI03++)	; load vertex
	NOP	LQI  VF26, (VI06++)	; load st
        SUB.xyz VF23, VF19, VF25        NOP
        SUB.xyz VF22, VF18, VF25        NOP
        SUB.xyz VF21, VF17, VF25        NOP
	MULAx.xyzw ACC, VF01, VF25x	NOP ; rot/trans/pers 	 
	MADDAy.xyzw ACC, VF02, VF25y	MOVE.xyz   VF28, VF23
	MADDAz.xyzw ACC, VF03, VF25z	MR32.w   VF28, VF22
	MADDw.xyzw VF24, VF04, VF25w	ERSADD P, VF21
	NOP				LQI  VF25, (VI03++); load vertex
        NOP				MOVE  VF13, VF21
        NOP				MR32.xy  VF14, VF21
        NOP                             MOVE.zw  VF14, VF22
	NOP				DIV Q, VF00w, VF24w
	MULAx.x ACC, VF13x, VF05x	MR32.xzw VF28, VF28
	MADDAy.x ACC, VF14x, VF05y	MOVE.xyzw VF27, VF22;temp buffer
        SUB.xyz VF21, VF17, VF25        MR32.xy  VF15, VF14
        SUB.xyz VF22, VF18, VF25        MOVE.y   VF14, VF22
        SUB.xyz VF23, VF19, VF25        MOVE.z   VF15, VF23
        NOP                             NOP
	MADDz.x VF29x, VF15x, VF05z	MR32.yzw VF13, VF28
	MULq VF24, VF24, Q		NOP
	MULq.xyz VF28, VF26, Q		NOP
	MULAz.y ACC, VF15y, VF06z	NOP
	MADDAy.y ACC, VF14y, VF06y	MR32.z   VF14, VF13
	MADDx.y VF29y, VF13y, VF06x	LQI  VF26, (VI04++); load normal
	FTOI4 VF24, VF24		MFP.x VF16x, P
	MULAz.z ACC, VF13z, VF13z	ERSADD P, VF27
	MADDAz.z ACC, VF15z, VF15z	NOP
	MADDz.z VF16z, VF14z, VF14z	SQ VF28, -1(VI07)
	MULAx.z ACC, VF13z, VF07x	SQ VF24, 1(VI07) ; ---store XYZF2---
	MADDAy.z ACC, VF14z, VF07y	MOVE.xyz   VF28, VF23
	MADDz.z VF29z, VF15z, VF07z	MR32.w   VF28, VF22
	MULAx.xyz ACC, VF13, VF26x	DIV Q, VF00w, VF16z
	MADDAy.xyz ACC, VF14, VF26y	MOVE  VF13, VF21
	MADDz.xyz VF30, VF15, VF26z	MR32.xy  VF14, VF21
	MINIx.xyz VF31, VF29, VF00x	LQI  VF26, (VI06++); load st
	NOP				NOP
	MULAx.xyzw ACC, VF01, VF25x	MOVE.zw  VF14, VF22
	MADDAy.xyzw ACC, VF02, VF25y	MR32.xzw VF28, VF28
	MADDAz.xyzw ACC, VF03, VF25z	NOP
	MADDw.xyzw VF24, VF04, VF25w	LQI  VF25, (VI03++); load vertex
	MULq.z VF16z, VF20z, Q		MR32.xy  VF15, VF14
	MULAx.x ACC, VF13x, VF05x	MOVE.y   VF14, VF22
	MADDAy.x ACC, VF14x, VF05y	DIV Q, VF00w, VF24w
	MUL.xyz VF31, VF31, VF31	MFP.y VF16y, P
	MADDz.x VF29x, VF15x, VF05z	ERSADD P, VF21

LOOP:
        SUB.xyz VF23, VF19, VF25        MOVE.z   VF15, VF23
        SUB.xyz VF21, VF17, VF25        MR32.yzw VF13, VF28
	MUL.xyz VF31, VF31, VF16	LOI 0.87
	MUL.xyz VF30, VF30, VF16	NOP;(normal*vect/(length^2))
        SUB.xyz VF22, VF18, VF25        MOVE.xyzw VF27, VF22;temp buffer
	MULq VF24, VF24, Q		MR32.z   VF14, VF13
	SUBi.xyz VF31, VF31, i		LOI 150 
	MAXx.xyz VF30, VF30, VF00x	NOP
	MULq.xyz VF28, VF26, Q		NOP
	FTOI4 VF24, VF24		NOP
	MULi.xyz VF31, VF31, i		NOP;(cos^2-0.9)*400
	MULAz.y ACC, VF15y, VF06z	NOP
	MADDAy.y ACC, VF14y, VF06y	NOP
	MADDx.y VF29y, VF13y, VF06x	SQ VF28, 2(VI07)
	MUL.xyz VF31, VF31, VF30	NOP
	MULAz.z ACC, VF13z, VF13z	SQ VF24, 4(VI07) 
	MADDAz.z ACC, VF15z, VF15z	LQI  VF26, (VI04++); load normal
	MADDz.z VF16z, VF14z, VF14z	NOP
	MAXx.xyz  VF31, VF31, VF00x	MFP.x VF16x, P
	MULAx.z ACC, VF13z, VF07x	ERSADD P, VF27
	MADDAy.z ACC, VF14z, VF07y	MOVE.xyz   VF28, VF23
	MADDz.z VF29z, VF15z, VF07z	MR32.w   VF28, VF22
	MULAx.xyzw ACC, VF09, VF31x	DIV Q, VF00w, VF16z
	MADDAy.xyzw ACC, VF10, VF31y	NOP
	MADDAz.xyzw ACC, VF11, VF31z	IADDI VI10, VI10, -1	
	MADDw.xyzw VF27, VF12, VF00w	NOP; add ambient color
	MULAx.xyz ACC, VF13, VF26x	MOVE  VF13, VF21
	MADDAy.xyz ACC, VF14, VF26y	MR32.xy  VF14, VF21
	MADDz.xyz VF30, VF15, VF26z	LQI  VF26, (VI05++); load color
	MINIw.xyzw VF27, VF27, VF00w    MOVE.zw  VF14, VF22
	MINIx.xyz VF31, VF29, VF00x	NOP
	MULAx.xyzw ACC, VF01, VF25x	IADDIU  VI07, VI07, 3
	MADDAy.xyzw ACC, VF02, VF25y	MR32.xzw VF28, VF28
	MUL.xyz VF27, VF26, VF27	LQI  VF26, (VI06++); load ST
	MADDAz.xyzw ACC, VF03, VF25z	MR32.xy  VF15, VF14
	MADDw.xyzw VF24, VF04, VF25w	LQI  VF25, (VI03++); load vertex
	MULq.z VF16z, VF20z, Q		MOVE.y   VF14, VF22
	FTOI0 VF27, VF27		MFP.y VF16y, P
	MULAx.x ACC, VF13x, VF05x	ERSADD P, VF21
	MADDAy.x ACC, VF14x, VF05y	DIV Q, VF00w, VF24w
	MUL.xyz VF31, VF31, VF31	IBNE  VI10, VI00, LOOP
	MADDz.x VF29x, VF15x, VF05z	SQ VF27, -3(VI07)

	; --- send result to GIF and stop ---
	NOP   	XGKICK VI02  
	NOP[E]  NOP   
	NOP	NOP
	NOP   	B START
	NOP	NOP      

; -------------------------------------------------------------------
;   MulMatrix 
;      VI01 : address of source matrix
;      VI02 : address of source matrix
;      VI03 : address of destination matrix
;      VF01 - VF04 : local-screen matrix
;      VF05 - VF08 : local-light matrix
;      VF09 - VF12 : world-screen matrix -> light-color matrix
;      VF13 - VF16 : local-clip matrix
;      VF19 - VF22 : local-world matrix
;      VF23 - VF26 : world-light matrix
;      VF27 - VF30 : world-clip matrix

MulMatrix2:
	NOP                          	LQI.xyzw VF19, (VI02++);0local_world
        NOP                            	LQI.xyzw VF09, (VI01++);8world_screen
        NOP                            	LQI.xyzw VF10, (VI01++);9
        NOP                            	LQI.xyzw VF11, (VI01++);10
        NOP                            	LQI.xyzw VF12, (VI01++);11
        MULAx.xyzw ACC, VF09, VF19x     LQI.xyzw VF20, (VI02++);1
        MADDAy.xyzw ACC, VF10, VF19y    LQI.xyzw VF21, (VI02++);2
        MADDAz.xyzw ACC, VF11, VF19z    LQI.xyzw VF22, (VI02++);3
        MADDw.xyzw VF01, VF12, VF19w    LQI.xyzw VF23, (VI02++);4normal_light
        MULAx.xyzw ACC, VF09, VF20x     LQI.xyzw VF24, (VI02++);5
        MADDAy.xyzw ACC, VF10, VF20y    LQI.xyzw VF25, (VI02++);6
        MADDAz.xyzw ACC, VF11, VF20z    LQI.xyzw VF26, (VI02++);7
        MADDw.xyzw VF02, VF12, VF20w    LQI.xyzw VF27, (VI01++);12world_clip
        MULAx.xyzw ACC, VF09, VF21x     LQI.xyzw VF28, (VI01++);13
        MADDAy.xyzw ACC, VF10, VF21y    LQI.xyzw VF29, (VI01++);14
        MADDAz.xyzw ACC, VF11, VF21z    LQI.xyzw VF30, (VI01++);15
        MADDw.xyzw VF03, VF12, VF21w    NOP
        MULAx.xyzw ACC, VF09, VF22x     NOP
        MADDAy.xyzw ACC, VF10, VF22y    NOP
        MADDAz.xyzw ACC, VF11, VF22z    NOP
        MADDw.xyzw VF04, VF12, VF22w    NOP
        MULAx.xyzw ACC, VF23, VF19x     LQI.xyzw VF09, (VI01++);16light_color
        MADDAy.xyzw ACC, VF24, VF19y    LQI.xyzw VF10, (VI01++);17
        MADDAz.xyzw ACC, VF25, VF19z    LQI.xyzw VF11, (VI01++);18
        MADDw.xyzw VF05, VF26, VF19w    LQI.xyzw VF12, (VI01++);19
        MULAx.xyzw ACC, VF23, VF20x     NOP
        MADDAy.xyzw ACC, VF24, VF20y    NOP
        MADDAz.xyzw ACC, VF25, VF20z    NOP;
        MADDw.xyzw VF06, VF26, VF20w    NOP;
        MULAx.xyzw ACC, VF23, VF21x     NOP
        MADDAy.xyzw ACC, VF24, VF21y    NOP
        MADDAz.xyzw ACC, VF25, VF21z    NOP
        MADDw.xyzw VF07, VF26, VF21w    MOVE  VF08, VF26
;May be, VF24 is (0,0,0,1)(4th column of Normal_Light matrix)
;        MULAx.xyzw ACC, VF23, VF22x     NOP
;        MADDAy.xyzw ACC, VF24, VF22y    NOP
;        MADDAz.xyzw ACC, VF25, VF22z    NOP
;        MADDw.xyzw VF08, VF26, VF22w    IADDIU VI01, VI00, 4
        MULAx.xyzw ACC, VF27, VF19x     NOP
        MADDAy.xyzw ACC, VF28, VF19y    NOP
        MADDAz.xyzw ACC, VF29, VF19z    NOP
        MADDw.xyzw VF13, VF30, VF19w    NOP
        MULAx.xyzw ACC, VF27, VF20x     NOP
        MADDAy.xyzw ACC, VF28, VF20y    NOP
        MADDAz.xyzw ACC, VF29, VF20z    NOP
        MADDw.xyzw VF14, VF30, VF20w    NOP
        MULAx.xyzw ACC, VF27, VF21x     NOP
        MADDAy.xyzw ACC, VF28, VF21y    NOP
        MADDAz.xyzw ACC, VF29, VF21z    NOP
        MADDw.xyzw VF15, VF30, VF21w    NOP
        MULAx.xyzw ACC, VF27, VF22x     NOP
        MADDAy.xyzw ACC, VF28, VF22y    NOP
        MADDAz.xyzw ACC, VF29, VF22z    NOP
        MADDw.xyzw VF16, VF30, VF22w    NOP
	NOP				SQ  VF01, 0(VI00)
	NOP				SQ  VF02, 1(VI00)
	NOP				SQ  VF03, 2(VI00)
	NOP				SQ  VF04, 3(VI00) ;save local_screen
        NOP                            	NOP
        NOP                            	JR VI15
        NOP                            	NOP











