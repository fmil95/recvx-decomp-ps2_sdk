/* SCEI CONFIDENTIAL
 "PlayStation 2" Programmer Tool Runtime Library  Release 2.0
 */
/*
 *              Emotion Engine Library Sample Program
 *
 *                     - mug with AA1 line -
 *
 *                         Version 0.4.0
 *                           Shift-JIS
 *
 *      Copyright (C) 1998-1999 Sony Computer Entertainment Inc.
 *                        All Rights Reserved.
 *
 *        Name : r_opt1.vsm
 *        Description : micro code for reflection map & specular(optimized).
 *
 *
 *       Version        Date            Design      Log
 *  --------------------------------------------------------------------
 *       0.4.0          Aug, 3rd, 1999  munekis     first version
 *       0.5.0     May, 18th ,2000 sasaki           first version
 */

; ---------------------------------------------------------------------
;
;
;       vu1 micro code for basic sample
;
;
;	VF01 - VF04 	: perspective + transformation matrix 
;	VF05 - VF08 	: light color matrix
;       VF09 - VF12     :  X light vector matrix(3 lighting vector + 1 ambient)
;	VF15        	: gif tag 
;	VF20 		: source vertex
;	VF21 		: source normal
;	VF22 		: source st
;	VF23 		: source color
;
;
;	VI02 : pointer for gif tag / for XGKICK
;	VI03 : pointer for vertex
;	VI04 : pointer for normal
;	VI05 : pointer for st
;	VI06 : pointer for color
;	VI07 : store pointer for RGBAQ
;	VI08 : store pointer for ST
;	VI09 : store pointer for XYZF2
;
;       VI10 : counter for vertices
;	VI12 : working
;       VI13 : 0x8000 for XYZ3
;	VI14 : XYZ3 counter (3)
;
; ---------------------------------------------------------------------
	MULx.xyzw VF24, VF24, VF00x	IADDIU VI01, VI00, 0
	NOP	IADDIU VI02, VI00, 4
	NOP	IADDIU VI03, VI00, 16	; screen matrix X object matrix
	NOP	BAL VI15, MulMatrix
	ADDw.xyz VF24, VF24, VF00w	NOP
	NOP	IADDIU VI01, VI00, 4 
	NOP	LQI VF28, (VI01++)	; (12) load light vector matrix 
	NOP	LQI VF29, (VI01++)
	NOP	LQI VF30, (VI01++)
	NOP	LQI VF31, (VI01++)
	NOP	LQI VF05, (VI01++)	; (12) load light vector matrix 
	NOP	LQI VF06, (VI01++)
	NOP	LQI VF07, (VI01++)
	NOP	LQI VF08, (VI01++)
	NOP	LQI VF09, (VI01++)	; (8) load light color matrix 
	NOP	LQI VF10, (VI01++)
	NOP	LQI VF11, (VI01++)
	NOP	LQI VF12, (VI01++)
	NOP	LQI VF01, (VI01++)	; (16) load screen x transformation matrix
	NOP	LQI VF02, (VI01++)
	NOP	LQI VF03, (VI01++)
	NOP	LQI VF04, (VI01++)
;
        NOP				IADDIU VI12, VI00, 0x7fff; set mask
        NOP                             IADDI VI13, VI12, 1      ; XYZ3 flag
;
	NOP	NOP
	NOP[E]	NOP
	NOP	NOP

START01:
	NOP 				XTOP VI01
	NOP				ILWR.x VI10, (VI01)x 		; copy to VI10
	NOP				IADDIU VI11, VI00, 0x7fff	; set mask
	NOP				IAND VI10, VI11, VI10		; mask. VI10 is counter for vertices.
;
	NOP				IADDIU VI03, VI01, 1		; pointer for vertices
	NOP				IADD VI04, VI03, VI10		; pointer for normal
	NOP				LQI VF20, (VI03++)
	NOP				IADD VI05, VI04, VI10		; pointer for color
	NOP				LQI VF21, (VI04++)
	NOP				IADDIU VI02, VI05, 1 		; pointer for XGKICK
	MULAx.xyzw ACC, VF01, VF20x	NOP				; store gif tag
	MADDAy.xyzw ACC, VF02, VF20y	IADDI VI07, VI02, -1		; set store pointer for RGBAQ
	MADDAz.xyzw ACC, VF03, VF20z	IADDIU VI08, VI02, 1		; set store pointer for ST
	MADDw.xyzw VF25, VF04, VF20w	IADDIU VI09, VI02, 3		; set store pointer for XYZF2
	MULAx.xyzw ACC, VF28, VF21x	MOVE VF17, VF24
	MADDAy.xyzw ACC, VF29, VF21y	LQ VF23, 0(VI05)
	MADDAz.xyzw ACC, VF30, VF21z 	LQ VF19, 0(VI01)
	MADDw.xyzw VF16, VF31, VF21w 	DIV Q, VF00w, VF25w
	MULAx.xyzw ACC, VF05, VF21x 	NOP
	MADDAy.xyzw ACC, VF06, VF21y	LQI VF20, (VI03++)	 
	MADDAz.xyzw ACC, VF07, VF21z	SQ VF19, 0(VI02)
	MADDw.xyzw VF13, VF08, VF21w 	NOP
	ADDx.x VF17x, VF17x, VF16x	IADDIU VI14, VI00, 0
	ADDz.y VF17y, VF17y, VF16z	NOP 
	MULq VF15, VF25, Q		NOP
;	MAXx.xyzw VF13, VF13, VF00x	NOP
	NOP				NOP
	MULAx.xyzw ACC, VF01, VF20x	LOI 0.5
	MULi.xy VF17xy, VF17xy, I	NOP
	NOP				NOP
	MUL VF13, VF13, VF13		NOP
	NOP				NOP
	MULq.xyz VF18, VF17, Q		NOP
	NOP				LOI 0.9
	SUBi VF13, VF13, I		NOP
	NOP				NOP
	NOP				NOP
	NOP				NOP
	MUL VF13, VF13, VF13		NOP 
	FTOI4 VF27, VF15		LQI VF21, (VI04++) 
LOOP1:
	MADDAy.xyzw ACC, VF02, VF20y	SQ VF18, 0(VI08) 	 
	MADDAz.xyzw ACC, VF03, VF20z	IADDIU VI08, VI08, 3 	 
	MUL VF13, VF13, VF13		IADDIU VI07, VI07, 3
	MADDw.xyzw VF25, VF04, VF20w	SQ VF27, 0(VI09) 
	MULAx.xyzw ACC, VF28, VF21x	ILWR.w VI12, (VI09)w	;load f field to VI12
	MADDAy.xyzw ACC, VF29, VF21y	NOP 
	MADDAz.xyzw ACC, VF30, VF21z	NOP
	MADDw.xyzw VF16, VF31, VF21w	LQI VF20, (VI03++)
	MULAx.xyzw ACC, VF09, VF13x	MOVE VF17, VF24
	NOP				IBNE VI14, VI00, SKIP1	;skip set ADC bit
	NOP				NOP
	NOP				IADDIU VI14, VI00, 6
	NOP				IOR VI12, VI12, VI13	;set ADC bit
SKIP1:	MADDAy.xyzw ACC, VF10, VF13y	NOP
	MADDAz.xyzw ACC, VF11, VF13z 	NOP
	MADDw.xyzw VF14, VF12, VF13w	IADDI VI14, VI14, -1
	MULAx.xyzw ACC, VF05, VF21x	ISWR.w VI12, (VI09)w
	MADDAy.xyzw ACC, VF06, VF21y 	DIV Q, VF00w, VF25w
	MADDAz.xyzw ACC, VF07, VF21z	NOP
	MUL.xyzw VF22, VF23, VF14	LOI 255.0
	MADDw.xyzw VF13, VF08, VF21w 	LQI VF21, (VI04++)
	ADDx.x VF17x, VF17x, VF16x	NOP
	ADDz.y VF17y, VF17y, VF16z 	NOP
	MINIi VF22, VF22, I		NOP
;	MAXx.xyzw VF13, VF13, VF00x 	IADDI VI10, VI10, -1
	NOP			 	IADDI VI10, VI10, -1
	MULq VF15, VF25, Q		LOI 0.5
	MULi.xy VF17xy, VF17xy, I	NOP
	FTOI0 VF26, VF22		NOP
	MUL VF13, VF13, VF13		NOP
	NOP				NOP
	NOP				LOI 0.9
	SUBi VF13, VF13, I		NOP
	NOP				NOP
	MULAx.xyzw ACC, VF01, VF20x 	NOP
	MULq.xyz VF18, VF17, Q		IADDIU VI09, VI09, 3
	FTOI4 VF27, VF15		SQ VF26, 0(VI07)
	MUL VF13, VF13, VF13		IBNE VI10, VI00, LOOP1
	NOP  				NOP   

	; --- send result to GIF and stop ---
	NOP   	XGKICK VI02  
	NOP[E]  NOP   
	NOP	NOP
	NOP   	B START01  
	NOP	NOP      ;Take care!! Don't forget.








